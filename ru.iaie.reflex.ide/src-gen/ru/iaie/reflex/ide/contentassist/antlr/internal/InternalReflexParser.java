package ru.iaie.reflex.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ru.iaie.reflex.services.ReflexGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalReflexParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_BIT_AND", "RULE_BIT_XOR", "RULE_BIT_OR", "RULE_LOGICAL_AND", "RULE_LOGICAL_OR", "RULE_INTEGER", "RULE_STRING", "RULE_TIME", "RULE_FLOAT", "RULE_BOOL_LITERAL", "RULE_SIGN", "RULE_HEX", "RULE_OCTAL", "RULE_DECIMAL", "RULE_LONG", "RULE_UNSIGNED", "RULE_DEC_FLOAT", "RULE_HEX_FLOAT", "RULE_DEC_SEQUENCE", "RULE_EXPONENT", "RULE_FLOAT_SUFFIX", "RULE_HEX_SEQUENCE", "RULE_BIN_EXPONENT", "RULE_HEX_PREFIX", "RULE_DAY", "RULE_HOUR", "RULE_MINUTE", "RULE_SECOND", "RULE_MILLISECOND", "RULE_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'input'", "'output'", "'active'", "'inactive'", "'stop'", "'error'", "'++'", "'--'", "'='", "'*='", "'/='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'+'", "'-'", "'~'", "'!'", "'<'", "'>'", "'=<'", "'>='", "'=='", "'!='", "'>>'", "'<<'", "'*'", "'/'", "'%'", "'void'", "'float'", "'double'", "'int8'", "'uint8'", "'int16'", "'uint16'", "'int32'", "'uint32'", "'int64'", "'uint64'", "'bool'", "'time'", "'program'", "'{'", "'}'", "'['", "']'", "'clock'", "';'", "'process'", "'state'", "':'", "'.'", "'shared'", "'from'", "','", "'timeout'", "'('", "')'", "'const'", "'enum'", "'if'", "'else'", "'switch'", "'case'", "'break'", "'start'", "'restart'", "'reset'", "'timer'", "'set'", "'in'", "'looped'", "'next'"
    };
    public static final int RULE_HEX=16;
    public static final int T__50=50;
    public static final int RULE_SIGN=15;
    public static final int RULE_DEC_SEQUENCE=23;
    public static final int RULE_MINUTE=31;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int RULE_TIME=12;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_HEX_FLOAT=22;
    public static final int RULE_INT=34;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=35;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__39=39;
    public static final int RULE_MILLISECOND=33;
    public static final int RULE_HEX_SEQUENCE=26;
    public static final int RULE_HOUR=30;
    public static final int RULE_UNSIGNED=20;
    public static final int RULE_BOOL_LITERAL=14;
    public static final int RULE_BIN_EXPONENT=27;
    public static final int RULE_LOGICAL_AND=8;
    public static final int RULE_EXPONENT=24;
    public static final int T__48=48;
    public static final int RULE_DEC_FLOAT=21;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=13;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int RULE_BIT_AND=5;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int RULE_DAY=29;
    public static final int T__90=90;
    public static final int RULE_OCTAL=17;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=18;
    public static final int RULE_SECOND=32;
    public static final int RULE_LOGICAL_OR=9;
    public static final int RULE_FLOAT_SUFFIX=25;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=11;
    public static final int RULE_SL_COMMENT=36;
    public static final int RULE_HEX_PREFIX=28;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=37;
    public static final int RULE_ANY_OTHER=38;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int RULE_BIT_XOR=6;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int RULE_BIT_OR=7;
    public static final int RULE_LONG=19;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int RULE_INTEGER=10;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalReflexParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalReflexParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalReflexParser.tokenNames; }
    public String getGrammarFileName() { return "InternalReflex.g"; }


    	private ReflexGrammarAccess grammarAccess;

    	public void setGrammarAccess(ReflexGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleProgram"
    // InternalReflex.g:54:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // InternalReflex.g:55:1: ( ruleProgram EOF )
            // InternalReflex.g:56:1: ruleProgram EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProgram();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // InternalReflex.g:63:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:67:2: ( ( ( rule__Program__Group__0 ) ) )
            // InternalReflex.g:68:2: ( ( rule__Program__Group__0 ) )
            {
            // InternalReflex.g:68:2: ( ( rule__Program__Group__0 ) )
            // InternalReflex.g:69:3: ( rule__Program__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getGroup()); 
            }
            // InternalReflex.g:70:3: ( rule__Program__Group__0 )
            // InternalReflex.g:70:4: rule__Program__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRuleTact"
    // InternalReflex.g:79:1: entryRuleTact : ruleTact EOF ;
    public final void entryRuleTact() throws RecognitionException {
        try {
            // InternalReflex.g:80:1: ( ruleTact EOF )
            // InternalReflex.g:81:1: ruleTact EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTactRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTact();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTactRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTact"


    // $ANTLR start "ruleTact"
    // InternalReflex.g:88:1: ruleTact : ( ( rule__Tact__Group__0 ) ) ;
    public final void ruleTact() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:92:2: ( ( ( rule__Tact__Group__0 ) ) )
            // InternalReflex.g:93:2: ( ( rule__Tact__Group__0 ) )
            {
            // InternalReflex.g:93:2: ( ( rule__Tact__Group__0 ) )
            // InternalReflex.g:94:3: ( rule__Tact__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTactAccess().getGroup()); 
            }
            // InternalReflex.g:95:3: ( rule__Tact__Group__0 )
            // InternalReflex.g:95:4: rule__Tact__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tact__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTactAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTact"


    // $ANTLR start "entryRuleProcess"
    // InternalReflex.g:104:1: entryRuleProcess : ruleProcess EOF ;
    public final void entryRuleProcess() throws RecognitionException {
        try {
            // InternalReflex.g:105:1: ( ruleProcess EOF )
            // InternalReflex.g:106:1: ruleProcess EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProcess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProcess"


    // $ANTLR start "ruleProcess"
    // InternalReflex.g:113:1: ruleProcess : ( ( rule__Process__Group__0 ) ) ;
    public final void ruleProcess() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:117:2: ( ( ( rule__Process__Group__0 ) ) )
            // InternalReflex.g:118:2: ( ( rule__Process__Group__0 ) )
            {
            // InternalReflex.g:118:2: ( ( rule__Process__Group__0 ) )
            // InternalReflex.g:119:3: ( rule__Process__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getGroup()); 
            }
            // InternalReflex.g:120:3: ( rule__Process__Group__0 )
            // InternalReflex.g:120:4: rule__Process__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Process__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProcess"


    // $ANTLR start "entryRuleState"
    // InternalReflex.g:129:1: entryRuleState : ruleState EOF ;
    public final void entryRuleState() throws RecognitionException {
        try {
            // InternalReflex.g:130:1: ( ruleState EOF )
            // InternalReflex.g:131:1: ruleState EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleState();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalReflex.g:138:1: ruleState : ( ( rule__State__Group__0 ) ) ;
    public final void ruleState() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:142:2: ( ( ( rule__State__Group__0 ) ) )
            // InternalReflex.g:143:2: ( ( rule__State__Group__0 ) )
            {
            // InternalReflex.g:143:2: ( ( rule__State__Group__0 ) )
            // InternalReflex.g:144:3: ( rule__State__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getGroup()); 
            }
            // InternalReflex.g:145:3: ( rule__State__Group__0 )
            // InternalReflex.g:145:4: rule__State__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__State__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleAnnotation"
    // InternalReflex.g:154:1: entryRuleAnnotation : ruleAnnotation EOF ;
    public final void entryRuleAnnotation() throws RecognitionException {
        try {
            // InternalReflex.g:155:1: ( ruleAnnotation EOF )
            // InternalReflex.g:156:1: ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalReflex.g:163:1: ruleAnnotation : ( ( rule__Annotation__Alternatives ) ) ;
    public final void ruleAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:167:2: ( ( ( rule__Annotation__Alternatives ) ) )
            // InternalReflex.g:168:2: ( ( rule__Annotation__Alternatives ) )
            {
            // InternalReflex.g:168:2: ( ( rule__Annotation__Alternatives ) )
            // InternalReflex.g:169:3: ( rule__Annotation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getAlternatives()); 
            }
            // InternalReflex.g:170:3: ( rule__Annotation__Alternatives )
            // InternalReflex.g:170:4: rule__Annotation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Annotation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleAnnotationKey"
    // InternalReflex.g:179:1: entryRuleAnnotationKey : ruleAnnotationKey EOF ;
    public final void entryRuleAnnotationKey() throws RecognitionException {
        try {
            // InternalReflex.g:180:1: ( ruleAnnotationKey EOF )
            // InternalReflex.g:181:1: ruleAnnotationKey EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnnotationKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationKeyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnnotationKey"


    // $ANTLR start "ruleAnnotationKey"
    // InternalReflex.g:188:1: ruleAnnotationKey : ( ( rule__AnnotationKey__Alternatives ) ) ;
    public final void ruleAnnotationKey() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:192:2: ( ( ( rule__AnnotationKey__Alternatives ) ) )
            // InternalReflex.g:193:2: ( ( rule__AnnotationKey__Alternatives ) )
            {
            // InternalReflex.g:193:2: ( ( rule__AnnotationKey__Alternatives ) )
            // InternalReflex.g:194:3: ( rule__AnnotationKey__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationKeyAccess().getAlternatives()); 
            }
            // InternalReflex.g:195:3: ( rule__AnnotationKey__Alternatives )
            // InternalReflex.g:195:4: rule__AnnotationKey__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AnnotationKey__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationKeyAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnnotationKey"


    // $ANTLR start "entryRuleImportedVariableList"
    // InternalReflex.g:204:1: entryRuleImportedVariableList : ruleImportedVariableList EOF ;
    public final void entryRuleImportedVariableList() throws RecognitionException {
        try {
            // InternalReflex.g:205:1: ( ruleImportedVariableList EOF )
            // InternalReflex.g:206:1: ruleImportedVariableList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleImportedVariableList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImportedVariableList"


    // $ANTLR start "ruleImportedVariableList"
    // InternalReflex.g:213:1: ruleImportedVariableList : ( ( rule__ImportedVariableList__Group__0 ) ) ;
    public final void ruleImportedVariableList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:217:2: ( ( ( rule__ImportedVariableList__Group__0 ) ) )
            // InternalReflex.g:218:2: ( ( rule__ImportedVariableList__Group__0 ) )
            {
            // InternalReflex.g:218:2: ( ( rule__ImportedVariableList__Group__0 ) )
            // InternalReflex.g:219:3: ( rule__ImportedVariableList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getGroup()); 
            }
            // InternalReflex.g:220:3: ( rule__ImportedVariableList__Group__0 )
            // InternalReflex.g:220:4: rule__ImportedVariableList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImportedVariableList"


    // $ANTLR start "entryRuleProcessVariable"
    // InternalReflex.g:229:1: entryRuleProcessVariable : ruleProcessVariable EOF ;
    public final void entryRuleProcessVariable() throws RecognitionException {
        try {
            // InternalReflex.g:230:1: ( ruleProcessVariable EOF )
            // InternalReflex.g:231:1: ruleProcessVariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProcessVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProcessVariable"


    // $ANTLR start "ruleProcessVariable"
    // InternalReflex.g:238:1: ruleProcessVariable : ( ( rule__ProcessVariable__Group__0 ) ) ;
    public final void ruleProcessVariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:242:2: ( ( ( rule__ProcessVariable__Group__0 ) ) )
            // InternalReflex.g:243:2: ( ( rule__ProcessVariable__Group__0 ) )
            {
            // InternalReflex.g:243:2: ( ( rule__ProcessVariable__Group__0 ) )
            // InternalReflex.g:244:3: ( rule__ProcessVariable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessVariableAccess().getGroup()); 
            }
            // InternalReflex.g:245:3: ( rule__ProcessVariable__Group__0 )
            // InternalReflex.g:245:4: rule__ProcessVariable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ProcessVariable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessVariableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProcessVariable"


    // $ANTLR start "entryRuleGlobalVariable"
    // InternalReflex.g:254:1: entryRuleGlobalVariable : ruleGlobalVariable EOF ;
    public final void entryRuleGlobalVariable() throws RecognitionException {
        try {
            // InternalReflex.g:255:1: ( ruleGlobalVariable EOF )
            // InternalReflex.g:256:1: ruleGlobalVariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGlobalVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGlobalVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGlobalVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGlobalVariable"


    // $ANTLR start "ruleGlobalVariable"
    // InternalReflex.g:263:1: ruleGlobalVariable : ( ( rule__GlobalVariable__Group__0 ) ) ;
    public final void ruleGlobalVariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:267:2: ( ( ( rule__GlobalVariable__Group__0 ) ) )
            // InternalReflex.g:268:2: ( ( rule__GlobalVariable__Group__0 ) )
            {
            // InternalReflex.g:268:2: ( ( rule__GlobalVariable__Group__0 ) )
            // InternalReflex.g:269:3: ( rule__GlobalVariable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGlobalVariableAccess().getGroup()); 
            }
            // InternalReflex.g:270:3: ( rule__GlobalVariable__Group__0 )
            // InternalReflex.g:270:4: rule__GlobalVariable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GlobalVariable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGlobalVariableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGlobalVariable"


    // $ANTLR start "entryRulePhysicalVariable"
    // InternalReflex.g:279:1: entryRulePhysicalVariable : rulePhysicalVariable EOF ;
    public final void entryRulePhysicalVariable() throws RecognitionException {
        try {
            // InternalReflex.g:280:1: ( rulePhysicalVariable EOF )
            // InternalReflex.g:281:1: rulePhysicalVariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePhysicalVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePhysicalVariable"


    // $ANTLR start "rulePhysicalVariable"
    // InternalReflex.g:288:1: rulePhysicalVariable : ( ( rule__PhysicalVariable__Group__0 ) ) ;
    public final void rulePhysicalVariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:292:2: ( ( ( rule__PhysicalVariable__Group__0 ) ) )
            // InternalReflex.g:293:2: ( ( rule__PhysicalVariable__Group__0 ) )
            {
            // InternalReflex.g:293:2: ( ( rule__PhysicalVariable__Group__0 ) )
            // InternalReflex.g:294:3: ( rule__PhysicalVariable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getGroup()); 
            }
            // InternalReflex.g:295:3: ( rule__PhysicalVariable__Group__0 )
            // InternalReflex.g:295:4: rule__PhysicalVariable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePhysicalVariable"


    // $ANTLR start "entryRulePortMapping"
    // InternalReflex.g:304:1: entryRulePortMapping : rulePortMapping EOF ;
    public final void entryRulePortMapping() throws RecognitionException {
        try {
            // InternalReflex.g:305:1: ( rulePortMapping EOF )
            // InternalReflex.g:306:1: rulePortMapping EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePortMapping();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePortMapping"


    // $ANTLR start "rulePortMapping"
    // InternalReflex.g:313:1: rulePortMapping : ( ( rule__PortMapping__Group__0 ) ) ;
    public final void rulePortMapping() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:317:2: ( ( ( rule__PortMapping__Group__0 ) ) )
            // InternalReflex.g:318:2: ( ( rule__PortMapping__Group__0 ) )
            {
            // InternalReflex.g:318:2: ( ( rule__PortMapping__Group__0 ) )
            // InternalReflex.g:319:3: ( rule__PortMapping__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getGroup()); 
            }
            // InternalReflex.g:320:3: ( rule__PortMapping__Group__0 )
            // InternalReflex.g:320:4: rule__PortMapping__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PortMapping__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePortMapping"


    // $ANTLR start "entryRuleProgramVariable"
    // InternalReflex.g:329:1: entryRuleProgramVariable : ruleProgramVariable EOF ;
    public final void entryRuleProgramVariable() throws RecognitionException {
        try {
            // InternalReflex.g:330:1: ( ruleProgramVariable EOF )
            // InternalReflex.g:331:1: ruleProgramVariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProgramVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgramVariable"


    // $ANTLR start "ruleProgramVariable"
    // InternalReflex.g:338:1: ruleProgramVariable : ( ( rule__ProgramVariable__Group__0 ) ) ;
    public final void ruleProgramVariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:342:2: ( ( ( rule__ProgramVariable__Group__0 ) ) )
            // InternalReflex.g:343:2: ( ( rule__ProgramVariable__Group__0 ) )
            {
            // InternalReflex.g:343:2: ( ( rule__ProgramVariable__Group__0 ) )
            // InternalReflex.g:344:3: ( rule__ProgramVariable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramVariableAccess().getGroup()); 
            }
            // InternalReflex.g:345:3: ( rule__ProgramVariable__Group__0 )
            // InternalReflex.g:345:4: rule__ProgramVariable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ProgramVariable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramVariableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgramVariable"


    // $ANTLR start "entryRuleTimeoutFunction"
    // InternalReflex.g:354:1: entryRuleTimeoutFunction : ruleTimeoutFunction EOF ;
    public final void entryRuleTimeoutFunction() throws RecognitionException {
        try {
            // InternalReflex.g:355:1: ( ruleTimeoutFunction EOF )
            // InternalReflex.g:356:1: ruleTimeoutFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeoutFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeoutFunction"


    // $ANTLR start "ruleTimeoutFunction"
    // InternalReflex.g:363:1: ruleTimeoutFunction : ( ( rule__TimeoutFunction__Group__0 ) ) ;
    public final void ruleTimeoutFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:367:2: ( ( ( rule__TimeoutFunction__Group__0 ) ) )
            // InternalReflex.g:368:2: ( ( rule__TimeoutFunction__Group__0 ) )
            {
            // InternalReflex.g:368:2: ( ( rule__TimeoutFunction__Group__0 ) )
            // InternalReflex.g:369:3: ( rule__TimeoutFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getGroup()); 
            }
            // InternalReflex.g:370:3: ( rule__TimeoutFunction__Group__0 )
            // InternalReflex.g:370:4: rule__TimeoutFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeoutFunction"


    // $ANTLR start "ruleTimeAmountOrRef"
    // InternalReflex.g:380:1: ruleTimeAmountOrRef : ( ( rule__TimeAmountOrRef__Alternatives ) ) ;
    public final void ruleTimeAmountOrRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:384:2: ( ( ( rule__TimeAmountOrRef__Alternatives ) ) )
            // InternalReflex.g:385:2: ( ( rule__TimeAmountOrRef__Alternatives ) )
            {
            // InternalReflex.g:385:2: ( ( rule__TimeAmountOrRef__Alternatives ) )
            // InternalReflex.g:386:3: ( rule__TimeAmountOrRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAmountOrRefAccess().getAlternatives()); 
            }
            // InternalReflex.g:387:3: ( rule__TimeAmountOrRef__Alternatives )
            // InternalReflex.g:387:4: rule__TimeAmountOrRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TimeAmountOrRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAmountOrRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeAmountOrRef"


    // $ANTLR start "entryRuleFunction"
    // InternalReflex.g:396:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        try {
            // InternalReflex.g:397:1: ( ruleFunction EOF )
            // InternalReflex.g:398:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalReflex.g:405:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:409:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalReflex.g:410:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalReflex.g:410:2: ( ( rule__Function__Group__0 ) )
            // InternalReflex.g:411:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalReflex.g:412:3: ( rule__Function__Group__0 )
            // InternalReflex.g:412:4: rule__Function__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRulePort"
    // InternalReflex.g:421:1: entryRulePort : rulePort EOF ;
    public final void entryRulePort() throws RecognitionException {
        try {
            // InternalReflex.g:422:1: ( rulePort EOF )
            // InternalReflex.g:423:1: rulePort EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePort();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePort"


    // $ANTLR start "rulePort"
    // InternalReflex.g:430:1: rulePort : ( ( rule__Port__Group__0 ) ) ;
    public final void rulePort() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:434:2: ( ( ( rule__Port__Group__0 ) ) )
            // InternalReflex.g:435:2: ( ( rule__Port__Group__0 ) )
            {
            // InternalReflex.g:435:2: ( ( rule__Port__Group__0 ) )
            // InternalReflex.g:436:3: ( rule__Port__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getGroup()); 
            }
            // InternalReflex.g:437:3: ( rule__Port__Group__0 )
            // InternalReflex.g:437:4: rule__Port__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePort"


    // $ANTLR start "entryRuleConst"
    // InternalReflex.g:446:1: entryRuleConst : ruleConst EOF ;
    public final void entryRuleConst() throws RecognitionException {
        try {
            // InternalReflex.g:447:1: ( ruleConst EOF )
            // InternalReflex.g:448:1: ruleConst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConst"


    // $ANTLR start "ruleConst"
    // InternalReflex.g:455:1: ruleConst : ( ( rule__Const__Group__0 ) ) ;
    public final void ruleConst() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:459:2: ( ( ( rule__Const__Group__0 ) ) )
            // InternalReflex.g:460:2: ( ( rule__Const__Group__0 ) )
            {
            // InternalReflex.g:460:2: ( ( rule__Const__Group__0 ) )
            // InternalReflex.g:461:3: ( rule__Const__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getGroup()); 
            }
            // InternalReflex.g:462:3: ( rule__Const__Group__0 )
            // InternalReflex.g:462:4: rule__Const__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Const__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConst"


    // $ANTLR start "entryRuleEnum"
    // InternalReflex.g:471:1: entryRuleEnum : ruleEnum EOF ;
    public final void entryRuleEnum() throws RecognitionException {
        try {
            // InternalReflex.g:472:1: ( ruleEnum EOF )
            // InternalReflex.g:473:1: ruleEnum EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEnum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnum"


    // $ANTLR start "ruleEnum"
    // InternalReflex.g:480:1: ruleEnum : ( ( rule__Enum__Group__0 ) ) ;
    public final void ruleEnum() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:484:2: ( ( ( rule__Enum__Group__0 ) ) )
            // InternalReflex.g:485:2: ( ( rule__Enum__Group__0 ) )
            {
            // InternalReflex.g:485:2: ( ( rule__Enum__Group__0 ) )
            // InternalReflex.g:486:3: ( rule__Enum__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getGroup()); 
            }
            // InternalReflex.g:487:3: ( rule__Enum__Group__0 )
            // InternalReflex.g:487:4: rule__Enum__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Enum__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnum"


    // $ANTLR start "entryRuleEnumMember"
    // InternalReflex.g:496:1: entryRuleEnumMember : ruleEnumMember EOF ;
    public final void entryRuleEnumMember() throws RecognitionException {
        try {
            // InternalReflex.g:497:1: ( ruleEnumMember EOF )
            // InternalReflex.g:498:1: ruleEnumMember EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEnumMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnumMember"


    // $ANTLR start "ruleEnumMember"
    // InternalReflex.g:505:1: ruleEnumMember : ( ( rule__EnumMember__Group__0 ) ) ;
    public final void ruleEnumMember() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:509:2: ( ( ( rule__EnumMember__Group__0 ) ) )
            // InternalReflex.g:510:2: ( ( rule__EnumMember__Group__0 ) )
            {
            // InternalReflex.g:510:2: ( ( rule__EnumMember__Group__0 ) )
            // InternalReflex.g:511:3: ( rule__EnumMember__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getGroup()); 
            }
            // InternalReflex.g:512:3: ( rule__EnumMember__Group__0 )
            // InternalReflex.g:512:4: rule__EnumMember__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EnumMember__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnumMember"


    // $ANTLR start "entryRuleStatement"
    // InternalReflex.g:521:1: entryRuleStatement : ruleStatement EOF ;
    public final void entryRuleStatement() throws RecognitionException {
        try {
            // InternalReflex.g:522:1: ( ruleStatement EOF )
            // InternalReflex.g:523:1: ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalReflex.g:530:1: ruleStatement : ( ( rule__Statement__Alternatives ) ) ;
    public final void ruleStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:534:2: ( ( ( rule__Statement__Alternatives ) ) )
            // InternalReflex.g:535:2: ( ( rule__Statement__Alternatives ) )
            {
            // InternalReflex.g:535:2: ( ( rule__Statement__Alternatives ) )
            // InternalReflex.g:536:3: ( rule__Statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getAlternatives()); 
            }
            // InternalReflex.g:537:3: ( rule__Statement__Alternatives )
            // InternalReflex.g:537:4: rule__Statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleStatementSequence"
    // InternalReflex.g:546:1: entryRuleStatementSequence : ruleStatementSequence EOF ;
    public final void entryRuleStatementSequence() throws RecognitionException {
        try {
            // InternalReflex.g:547:1: ( ruleStatementSequence EOF )
            // InternalReflex.g:548:1: ruleStatementSequence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementSequenceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStatementSequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementSequenceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStatementSequence"


    // $ANTLR start "ruleStatementSequence"
    // InternalReflex.g:555:1: ruleStatementSequence : ( ( rule__StatementSequence__Group__0 ) ) ;
    public final void ruleStatementSequence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:559:2: ( ( ( rule__StatementSequence__Group__0 ) ) )
            // InternalReflex.g:560:2: ( ( rule__StatementSequence__Group__0 ) )
            {
            // InternalReflex.g:560:2: ( ( rule__StatementSequence__Group__0 ) )
            // InternalReflex.g:561:3: ( rule__StatementSequence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementSequenceAccess().getGroup()); 
            }
            // InternalReflex.g:562:3: ( rule__StatementSequence__Group__0 )
            // InternalReflex.g:562:4: rule__StatementSequence__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StatementSequence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementSequenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStatementSequence"


    // $ANTLR start "entryRuleCompoundStatement"
    // InternalReflex.g:571:1: entryRuleCompoundStatement : ruleCompoundStatement EOF ;
    public final void entryRuleCompoundStatement() throws RecognitionException {
        try {
            // InternalReflex.g:572:1: ( ruleCompoundStatement EOF )
            // InternalReflex.g:573:1: ruleCompoundStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCompoundStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCompoundStatement"


    // $ANTLR start "ruleCompoundStatement"
    // InternalReflex.g:580:1: ruleCompoundStatement : ( ( rule__CompoundStatement__Group__0 ) ) ;
    public final void ruleCompoundStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:584:2: ( ( ( rule__CompoundStatement__Group__0 ) ) )
            // InternalReflex.g:585:2: ( ( rule__CompoundStatement__Group__0 ) )
            {
            // InternalReflex.g:585:2: ( ( rule__CompoundStatement__Group__0 ) )
            // InternalReflex.g:586:3: ( rule__CompoundStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementAccess().getGroup()); 
            }
            // InternalReflex.g:587:3: ( rule__CompoundStatement__Group__0 )
            // InternalReflex.g:587:4: rule__CompoundStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CompoundStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompoundStatement"


    // $ANTLR start "entryRuleIfElseStat"
    // InternalReflex.g:596:1: entryRuleIfElseStat : ruleIfElseStat EOF ;
    public final void entryRuleIfElseStat() throws RecognitionException {
        try {
            // InternalReflex.g:597:1: ( ruleIfElseStat EOF )
            // InternalReflex.g:598:1: ruleIfElseStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIfElseStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIfElseStat"


    // $ANTLR start "ruleIfElseStat"
    // InternalReflex.g:605:1: ruleIfElseStat : ( ( rule__IfElseStat__Group__0 ) ) ;
    public final void ruleIfElseStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:609:2: ( ( ( rule__IfElseStat__Group__0 ) ) )
            // InternalReflex.g:610:2: ( ( rule__IfElseStat__Group__0 ) )
            {
            // InternalReflex.g:610:2: ( ( rule__IfElseStat__Group__0 ) )
            // InternalReflex.g:611:3: ( rule__IfElseStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getGroup()); 
            }
            // InternalReflex.g:612:3: ( rule__IfElseStat__Group__0 )
            // InternalReflex.g:612:4: rule__IfElseStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIfElseStat"


    // $ANTLR start "entryRuleSwitchStat"
    // InternalReflex.g:621:1: entryRuleSwitchStat : ruleSwitchStat EOF ;
    public final void entryRuleSwitchStat() throws RecognitionException {
        try {
            // InternalReflex.g:622:1: ( ruleSwitchStat EOF )
            // InternalReflex.g:623:1: ruleSwitchStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSwitchStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSwitchStat"


    // $ANTLR start "ruleSwitchStat"
    // InternalReflex.g:630:1: ruleSwitchStat : ( ( rule__SwitchStat__Group__0 ) ) ;
    public final void ruleSwitchStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:634:2: ( ( ( rule__SwitchStat__Group__0 ) ) )
            // InternalReflex.g:635:2: ( ( rule__SwitchStat__Group__0 ) )
            {
            // InternalReflex.g:635:2: ( ( rule__SwitchStat__Group__0 ) )
            // InternalReflex.g:636:3: ( rule__SwitchStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getGroup()); 
            }
            // InternalReflex.g:637:3: ( rule__SwitchStat__Group__0 )
            // InternalReflex.g:637:4: rule__SwitchStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSwitchStat"


    // $ANTLR start "entryRuleCaseStat"
    // InternalReflex.g:646:1: entryRuleCaseStat : ruleCaseStat EOF ;
    public final void entryRuleCaseStat() throws RecognitionException {
        try {
            // InternalReflex.g:647:1: ( ruleCaseStat EOF )
            // InternalReflex.g:648:1: ruleCaseStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCaseStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseStat"


    // $ANTLR start "ruleCaseStat"
    // InternalReflex.g:655:1: ruleCaseStat : ( ( rule__CaseStat__Group__0 ) ) ;
    public final void ruleCaseStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:659:2: ( ( ( rule__CaseStat__Group__0 ) ) )
            // InternalReflex.g:660:2: ( ( rule__CaseStat__Group__0 ) )
            {
            // InternalReflex.g:660:2: ( ( rule__CaseStat__Group__0 ) )
            // InternalReflex.g:661:3: ( rule__CaseStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getGroup()); 
            }
            // InternalReflex.g:662:3: ( rule__CaseStat__Group__0 )
            // InternalReflex.g:662:4: rule__CaseStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseStat"


    // $ANTLR start "entryRuleBreakStat"
    // InternalReflex.g:671:1: entryRuleBreakStat : ruleBreakStat EOF ;
    public final void entryRuleBreakStat() throws RecognitionException {
        try {
            // InternalReflex.g:672:1: ( ruleBreakStat EOF )
            // InternalReflex.g:673:1: ruleBreakStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBreakStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBreakStat"


    // $ANTLR start "ruleBreakStat"
    // InternalReflex.g:680:1: ruleBreakStat : ( ( rule__BreakStat__Group__0 ) ) ;
    public final void ruleBreakStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:684:2: ( ( ( rule__BreakStat__Group__0 ) ) )
            // InternalReflex.g:685:2: ( ( rule__BreakStat__Group__0 ) )
            {
            // InternalReflex.g:685:2: ( ( rule__BreakStat__Group__0 ) )
            // InternalReflex.g:686:3: ( rule__BreakStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStatAccess().getGroup()); 
            }
            // InternalReflex.g:687:3: ( rule__BreakStat__Group__0 )
            // InternalReflex.g:687:4: rule__BreakStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BreakStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBreakStat"


    // $ANTLR start "entryRuleStartProcStat"
    // InternalReflex.g:696:1: entryRuleStartProcStat : ruleStartProcStat EOF ;
    public final void entryRuleStartProcStat() throws RecognitionException {
        try {
            // InternalReflex.g:697:1: ( ruleStartProcStat EOF )
            // InternalReflex.g:698:1: ruleStartProcStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStartProcStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStartProcStat"


    // $ANTLR start "ruleStartProcStat"
    // InternalReflex.g:705:1: ruleStartProcStat : ( ( rule__StartProcStat__Group__0 ) ) ;
    public final void ruleStartProcStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:709:2: ( ( ( rule__StartProcStat__Group__0 ) ) )
            // InternalReflex.g:710:2: ( ( rule__StartProcStat__Group__0 ) )
            {
            // InternalReflex.g:710:2: ( ( rule__StartProcStat__Group__0 ) )
            // InternalReflex.g:711:3: ( rule__StartProcStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getGroup()); 
            }
            // InternalReflex.g:712:3: ( rule__StartProcStat__Group__0 )
            // InternalReflex.g:712:4: rule__StartProcStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StartProcStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStartProcStat"


    // $ANTLR start "entryRuleStopProcStat"
    // InternalReflex.g:721:1: entryRuleStopProcStat : ruleStopProcStat EOF ;
    public final void entryRuleStopProcStat() throws RecognitionException {
        try {
            // InternalReflex.g:722:1: ( ruleStopProcStat EOF )
            // InternalReflex.g:723:1: ruleStopProcStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStopProcStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStopProcStat"


    // $ANTLR start "ruleStopProcStat"
    // InternalReflex.g:730:1: ruleStopProcStat : ( ( rule__StopProcStat__Group__0 ) ) ;
    public final void ruleStopProcStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:734:2: ( ( ( rule__StopProcStat__Group__0 ) ) )
            // InternalReflex.g:735:2: ( ( rule__StopProcStat__Group__0 ) )
            {
            // InternalReflex.g:735:2: ( ( rule__StopProcStat__Group__0 ) )
            // InternalReflex.g:736:3: ( rule__StopProcStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getGroup()); 
            }
            // InternalReflex.g:737:3: ( rule__StopProcStat__Group__0 )
            // InternalReflex.g:737:4: rule__StopProcStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStopProcStat"


    // $ANTLR start "entryRuleErrorStat"
    // InternalReflex.g:746:1: entryRuleErrorStat : ruleErrorStat EOF ;
    public final void entryRuleErrorStat() throws RecognitionException {
        try {
            // InternalReflex.g:747:1: ( ruleErrorStat EOF )
            // InternalReflex.g:748:1: ruleErrorStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleErrorStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleErrorStat"


    // $ANTLR start "ruleErrorStat"
    // InternalReflex.g:755:1: ruleErrorStat : ( ( rule__ErrorStat__Group__0 ) ) ;
    public final void ruleErrorStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:759:2: ( ( ( rule__ErrorStat__Group__0 ) ) )
            // InternalReflex.g:760:2: ( ( rule__ErrorStat__Group__0 ) )
            {
            // InternalReflex.g:760:2: ( ( rule__ErrorStat__Group__0 ) )
            // InternalReflex.g:761:3: ( rule__ErrorStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getGroup()); 
            }
            // InternalReflex.g:762:3: ( rule__ErrorStat__Group__0 )
            // InternalReflex.g:762:4: rule__ErrorStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleErrorStat"


    // $ANTLR start "entryRuleRestartStat"
    // InternalReflex.g:771:1: entryRuleRestartStat : ruleRestartStat EOF ;
    public final void entryRuleRestartStat() throws RecognitionException {
        try {
            // InternalReflex.g:772:1: ( ruleRestartStat EOF )
            // InternalReflex.g:773:1: ruleRestartStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestartStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRestartStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestartStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRestartStat"


    // $ANTLR start "ruleRestartStat"
    // InternalReflex.g:780:1: ruleRestartStat : ( ( rule__RestartStat__Group__0 ) ) ;
    public final void ruleRestartStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:784:2: ( ( ( rule__RestartStat__Group__0 ) ) )
            // InternalReflex.g:785:2: ( ( rule__RestartStat__Group__0 ) )
            {
            // InternalReflex.g:785:2: ( ( rule__RestartStat__Group__0 ) )
            // InternalReflex.g:786:3: ( rule__RestartStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestartStatAccess().getGroup()); 
            }
            // InternalReflex.g:787:3: ( rule__RestartStat__Group__0 )
            // InternalReflex.g:787:4: rule__RestartStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RestartStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestartStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestartStat"


    // $ANTLR start "entryRuleResetStat"
    // InternalReflex.g:796:1: entryRuleResetStat : ruleResetStat EOF ;
    public final void entryRuleResetStat() throws RecognitionException {
        try {
            // InternalReflex.g:797:1: ( ruleResetStat EOF )
            // InternalReflex.g:798:1: ruleResetStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResetStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleResetStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResetStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleResetStat"


    // $ANTLR start "ruleResetStat"
    // InternalReflex.g:805:1: ruleResetStat : ( ( rule__ResetStat__Group__0 ) ) ;
    public final void ruleResetStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:809:2: ( ( ( rule__ResetStat__Group__0 ) ) )
            // InternalReflex.g:810:2: ( ( rule__ResetStat__Group__0 ) )
            {
            // InternalReflex.g:810:2: ( ( rule__ResetStat__Group__0 ) )
            // InternalReflex.g:811:3: ( rule__ResetStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResetStatAccess().getGroup()); 
            }
            // InternalReflex.g:812:3: ( rule__ResetStat__Group__0 )
            // InternalReflex.g:812:4: rule__ResetStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ResetStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getResetStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleResetStat"


    // $ANTLR start "entryRuleSetStateStat"
    // InternalReflex.g:821:1: entryRuleSetStateStat : ruleSetStateStat EOF ;
    public final void entryRuleSetStateStat() throws RecognitionException {
        try {
            // InternalReflex.g:822:1: ( ruleSetStateStat EOF )
            // InternalReflex.g:823:1: ruleSetStateStat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSetStateStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSetStateStat"


    // $ANTLR start "ruleSetStateStat"
    // InternalReflex.g:830:1: ruleSetStateStat : ( ( rule__SetStateStat__Group__0 ) ) ;
    public final void ruleSetStateStat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:834:2: ( ( ( rule__SetStateStat__Group__0 ) ) )
            // InternalReflex.g:835:2: ( ( rule__SetStateStat__Group__0 ) )
            {
            // InternalReflex.g:835:2: ( ( rule__SetStateStat__Group__0 ) )
            // InternalReflex.g:836:3: ( rule__SetStateStat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getGroup()); 
            }
            // InternalReflex.g:837:3: ( rule__SetStateStat__Group__0 )
            // InternalReflex.g:837:4: rule__SetStateStat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetStateStat"


    // $ANTLR start "entryRuleInfixOp"
    // InternalReflex.g:846:1: entryRuleInfixOp : ruleInfixOp EOF ;
    public final void entryRuleInfixOp() throws RecognitionException {
        try {
            // InternalReflex.g:847:1: ( ruleInfixOp EOF )
            // InternalReflex.g:848:1: ruleInfixOp EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInfixOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInfixOp"


    // $ANTLR start "ruleInfixOp"
    // InternalReflex.g:855:1: ruleInfixOp : ( ( rule__InfixOp__Group__0 ) ) ;
    public final void ruleInfixOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:859:2: ( ( ( rule__InfixOp__Group__0 ) ) )
            // InternalReflex.g:860:2: ( ( rule__InfixOp__Group__0 ) )
            {
            // InternalReflex.g:860:2: ( ( rule__InfixOp__Group__0 ) )
            // InternalReflex.g:861:3: ( rule__InfixOp__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpAccess().getGroup()); 
            }
            // InternalReflex.g:862:3: ( rule__InfixOp__Group__0 )
            // InternalReflex.g:862:4: rule__InfixOp__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InfixOp__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixOp"


    // $ANTLR start "entryRulePostfixOp"
    // InternalReflex.g:871:1: entryRulePostfixOp : rulePostfixOp EOF ;
    public final void entryRulePostfixOp() throws RecognitionException {
        try {
            // InternalReflex.g:872:1: ( rulePostfixOp EOF )
            // InternalReflex.g:873:1: rulePostfixOp EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePostfixOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePostfixOp"


    // $ANTLR start "rulePostfixOp"
    // InternalReflex.g:880:1: rulePostfixOp : ( ( rule__PostfixOp__Group__0 ) ) ;
    public final void rulePostfixOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:884:2: ( ( ( rule__PostfixOp__Group__0 ) ) )
            // InternalReflex.g:885:2: ( ( rule__PostfixOp__Group__0 ) )
            {
            // InternalReflex.g:885:2: ( ( rule__PostfixOp__Group__0 ) )
            // InternalReflex.g:886:3: ( rule__PostfixOp__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpAccess().getGroup()); 
            }
            // InternalReflex.g:887:3: ( rule__PostfixOp__Group__0 )
            // InternalReflex.g:887:4: rule__PostfixOp__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PostfixOp__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePostfixOp"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalReflex.g:896:1: entryRuleFunctionCall : ruleFunctionCall EOF ;
    public final void entryRuleFunctionCall() throws RecognitionException {
        try {
            // InternalReflex.g:897:1: ( ruleFunctionCall EOF )
            // InternalReflex.g:898:1: ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalReflex.g:905:1: ruleFunctionCall : ( ( rule__FunctionCall__Group__0 ) ) ;
    public final void ruleFunctionCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:909:2: ( ( ( rule__FunctionCall__Group__0 ) ) )
            // InternalReflex.g:910:2: ( ( rule__FunctionCall__Group__0 ) )
            {
            // InternalReflex.g:910:2: ( ( rule__FunctionCall__Group__0 ) )
            // InternalReflex.g:911:3: ( rule__FunctionCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getGroup()); 
            }
            // InternalReflex.g:912:3: ( rule__FunctionCall__Group__0 )
            // InternalReflex.g:912:4: rule__FunctionCall__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleCheckStateExpression"
    // InternalReflex.g:921:1: entryRuleCheckStateExpression : ruleCheckStateExpression EOF ;
    public final void entryRuleCheckStateExpression() throws RecognitionException {
        try {
            // InternalReflex.g:922:1: ( ruleCheckStateExpression EOF )
            // InternalReflex.g:923:1: ruleCheckStateExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCheckStateExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCheckStateExpression"


    // $ANTLR start "ruleCheckStateExpression"
    // InternalReflex.g:930:1: ruleCheckStateExpression : ( ( rule__CheckStateExpression__Group__0 ) ) ;
    public final void ruleCheckStateExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:934:2: ( ( ( rule__CheckStateExpression__Group__0 ) ) )
            // InternalReflex.g:935:2: ( ( rule__CheckStateExpression__Group__0 ) )
            {
            // InternalReflex.g:935:2: ( ( rule__CheckStateExpression__Group__0 ) )
            // InternalReflex.g:936:3: ( rule__CheckStateExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:937:3: ( rule__CheckStateExpression__Group__0 )
            // InternalReflex.g:937:4: rule__CheckStateExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCheckStateExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalReflex.g:946:1: entryRulePrimaryExpression : rulePrimaryExpression EOF ;
    public final void entryRulePrimaryExpression() throws RecognitionException {
        try {
            // InternalReflex.g:947:1: ( rulePrimaryExpression EOF )
            // InternalReflex.g:948:1: rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalReflex.g:955:1: rulePrimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void rulePrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:959:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // InternalReflex.g:960:2: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // InternalReflex.g:960:2: ( ( rule__PrimaryExpression__Alternatives ) )
            // InternalReflex.g:961:3: ( rule__PrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalReflex.g:962:3: ( rule__PrimaryExpression__Alternatives )
            // InternalReflex.g:962:4: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalReflex.g:971:1: entryRuleUnaryExpression : ruleUnaryExpression EOF ;
    public final void entryRuleUnaryExpression() throws RecognitionException {
        try {
            // InternalReflex.g:972:1: ( ruleUnaryExpression EOF )
            // InternalReflex.g:973:1: ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalReflex.g:980:1: ruleUnaryExpression : ( ( rule__UnaryExpression__Alternatives ) ) ;
    public final void ruleUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:984:2: ( ( ( rule__UnaryExpression__Alternatives ) ) )
            // InternalReflex.g:985:2: ( ( rule__UnaryExpression__Alternatives ) )
            {
            // InternalReflex.g:985:2: ( ( rule__UnaryExpression__Alternatives ) )
            // InternalReflex.g:986:3: ( rule__UnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalReflex.g:987:3: ( rule__UnaryExpression__Alternatives )
            // InternalReflex.g:987:4: rule__UnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRuleCastExpression"
    // InternalReflex.g:996:1: entryRuleCastExpression : ruleCastExpression EOF ;
    public final void entryRuleCastExpression() throws RecognitionException {
        try {
            // InternalReflex.g:997:1: ( ruleCastExpression EOF )
            // InternalReflex.g:998:1: ruleCastExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCastExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCastExpression"


    // $ANTLR start "ruleCastExpression"
    // InternalReflex.g:1005:1: ruleCastExpression : ( ( rule__CastExpression__Alternatives ) ) ;
    public final void ruleCastExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1009:2: ( ( ( rule__CastExpression__Alternatives ) ) )
            // InternalReflex.g:1010:2: ( ( rule__CastExpression__Alternatives ) )
            {
            // InternalReflex.g:1010:2: ( ( rule__CastExpression__Alternatives ) )
            // InternalReflex.g:1011:3: ( rule__CastExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getAlternatives()); 
            }
            // InternalReflex.g:1012:3: ( rule__CastExpression__Alternatives )
            // InternalReflex.g:1012:4: rule__CastExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CastExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCastExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalReflex.g:1021:1: entryRuleMultiplicativeExpression : ruleMultiplicativeExpression EOF ;
    public final void entryRuleMultiplicativeExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1022:1: ( ruleMultiplicativeExpression EOF )
            // InternalReflex.g:1023:1: ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalReflex.g:1030:1: ruleMultiplicativeExpression : ( ( rule__MultiplicativeExpression__Group__0 ) ) ;
    public final void ruleMultiplicativeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1034:2: ( ( ( rule__MultiplicativeExpression__Group__0 ) ) )
            // InternalReflex.g:1035:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            {
            // InternalReflex.g:1035:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            // InternalReflex.g:1036:3: ( rule__MultiplicativeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1037:3: ( rule__MultiplicativeExpression__Group__0 )
            // InternalReflex.g:1037:4: rule__MultiplicativeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalReflex.g:1046:1: entryRuleAdditiveExpression : ruleAdditiveExpression EOF ;
    public final void entryRuleAdditiveExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1047:1: ( ruleAdditiveExpression EOF )
            // InternalReflex.g:1048:1: ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalReflex.g:1055:1: ruleAdditiveExpression : ( ( rule__AdditiveExpression__Group__0 ) ) ;
    public final void ruleAdditiveExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1059:2: ( ( ( rule__AdditiveExpression__Group__0 ) ) )
            // InternalReflex.g:1060:2: ( ( rule__AdditiveExpression__Group__0 ) )
            {
            // InternalReflex.g:1060:2: ( ( rule__AdditiveExpression__Group__0 ) )
            // InternalReflex.g:1061:3: ( rule__AdditiveExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1062:3: ( rule__AdditiveExpression__Group__0 )
            // InternalReflex.g:1062:4: rule__AdditiveExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleShiftExpression"
    // InternalReflex.g:1071:1: entryRuleShiftExpression : ruleShiftExpression EOF ;
    public final void entryRuleShiftExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1072:1: ( ruleShiftExpression EOF )
            // InternalReflex.g:1073:1: ruleShiftExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleShiftExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShiftExpression"


    // $ANTLR start "ruleShiftExpression"
    // InternalReflex.g:1080:1: ruleShiftExpression : ( ( rule__ShiftExpression__Group__0 ) ) ;
    public final void ruleShiftExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1084:2: ( ( ( rule__ShiftExpression__Group__0 ) ) )
            // InternalReflex.g:1085:2: ( ( rule__ShiftExpression__Group__0 ) )
            {
            // InternalReflex.g:1085:2: ( ( rule__ShiftExpression__Group__0 ) )
            // InternalReflex.g:1086:3: ( rule__ShiftExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1087:3: ( rule__ShiftExpression__Group__0 )
            // InternalReflex.g:1087:4: rule__ShiftExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftExpression"


    // $ANTLR start "entryRuleCompareExpression"
    // InternalReflex.g:1096:1: entryRuleCompareExpression : ruleCompareExpression EOF ;
    public final void entryRuleCompareExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1097:1: ( ruleCompareExpression EOF )
            // InternalReflex.g:1098:1: ruleCompareExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCompareExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCompareExpression"


    // $ANTLR start "ruleCompareExpression"
    // InternalReflex.g:1105:1: ruleCompareExpression : ( ( rule__CompareExpression__Alternatives ) ) ;
    public final void ruleCompareExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1109:2: ( ( ( rule__CompareExpression__Alternatives ) ) )
            // InternalReflex.g:1110:2: ( ( rule__CompareExpression__Alternatives ) )
            {
            // InternalReflex.g:1110:2: ( ( rule__CompareExpression__Alternatives ) )
            // InternalReflex.g:1111:3: ( rule__CompareExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getAlternatives()); 
            }
            // InternalReflex.g:1112:3: ( rule__CompareExpression__Alternatives )
            // InternalReflex.g:1112:4: rule__CompareExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareExpression"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalReflex.g:1121:1: entryRuleEqualityExpression : ruleEqualityExpression EOF ;
    public final void entryRuleEqualityExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1122:1: ( ruleEqualityExpression EOF )
            // InternalReflex.g:1123:1: ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalReflex.g:1130:1: ruleEqualityExpression : ( ( rule__EqualityExpression__Group__0 ) ) ;
    public final void ruleEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1134:2: ( ( ( rule__EqualityExpression__Group__0 ) ) )
            // InternalReflex.g:1135:2: ( ( rule__EqualityExpression__Group__0 ) )
            {
            // InternalReflex.g:1135:2: ( ( rule__EqualityExpression__Group__0 ) )
            // InternalReflex.g:1136:3: ( rule__EqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1137:3: ( rule__EqualityExpression__Group__0 )
            // InternalReflex.g:1137:4: rule__EqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleBitAndExpression"
    // InternalReflex.g:1146:1: entryRuleBitAndExpression : ruleBitAndExpression EOF ;
    public final void entryRuleBitAndExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1147:1: ( ruleBitAndExpression EOF )
            // InternalReflex.g:1148:1: ruleBitAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitAndExpression"


    // $ANTLR start "ruleBitAndExpression"
    // InternalReflex.g:1155:1: ruleBitAndExpression : ( ( rule__BitAndExpression__Group__0 ) ) ;
    public final void ruleBitAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1159:2: ( ( ( rule__BitAndExpression__Group__0 ) ) )
            // InternalReflex.g:1160:2: ( ( rule__BitAndExpression__Group__0 ) )
            {
            // InternalReflex.g:1160:2: ( ( rule__BitAndExpression__Group__0 ) )
            // InternalReflex.g:1161:3: ( rule__BitAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1162:3: ( rule__BitAndExpression__Group__0 )
            // InternalReflex.g:1162:4: rule__BitAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitAndExpression"


    // $ANTLR start "entryRuleBitXorExpression"
    // InternalReflex.g:1171:1: entryRuleBitXorExpression : ruleBitXorExpression EOF ;
    public final void entryRuleBitXorExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1172:1: ( ruleBitXorExpression EOF )
            // InternalReflex.g:1173:1: ruleBitXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitXorExpression"


    // $ANTLR start "ruleBitXorExpression"
    // InternalReflex.g:1180:1: ruleBitXorExpression : ( ( rule__BitXorExpression__Group__0 ) ) ;
    public final void ruleBitXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1184:2: ( ( ( rule__BitXorExpression__Group__0 ) ) )
            // InternalReflex.g:1185:2: ( ( rule__BitXorExpression__Group__0 ) )
            {
            // InternalReflex.g:1185:2: ( ( rule__BitXorExpression__Group__0 ) )
            // InternalReflex.g:1186:3: ( rule__BitXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1187:3: ( rule__BitXorExpression__Group__0 )
            // InternalReflex.g:1187:4: rule__BitXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitXorExpression"


    // $ANTLR start "entryRuleBitOrExpression"
    // InternalReflex.g:1196:1: entryRuleBitOrExpression : ruleBitOrExpression EOF ;
    public final void entryRuleBitOrExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1197:1: ( ruleBitOrExpression EOF )
            // InternalReflex.g:1198:1: ruleBitOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBitOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitOrExpression"


    // $ANTLR start "ruleBitOrExpression"
    // InternalReflex.g:1205:1: ruleBitOrExpression : ( ( rule__BitOrExpression__Group__0 ) ) ;
    public final void ruleBitOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1209:2: ( ( ( rule__BitOrExpression__Group__0 ) ) )
            // InternalReflex.g:1210:2: ( ( rule__BitOrExpression__Group__0 ) )
            {
            // InternalReflex.g:1210:2: ( ( rule__BitOrExpression__Group__0 ) )
            // InternalReflex.g:1211:3: ( rule__BitOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1212:3: ( rule__BitOrExpression__Group__0 )
            // InternalReflex.g:1212:4: rule__BitOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalReflex.g:1221:1: entryRuleLogicalAndExpression : ruleLogicalAndExpression EOF ;
    public final void entryRuleLogicalAndExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1222:1: ( ruleLogicalAndExpression EOF )
            // InternalReflex.g:1223:1: ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalReflex.g:1230:1: ruleLogicalAndExpression : ( ( rule__LogicalAndExpression__Group__0 ) ) ;
    public final void ruleLogicalAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1234:2: ( ( ( rule__LogicalAndExpression__Group__0 ) ) )
            // InternalReflex.g:1235:2: ( ( rule__LogicalAndExpression__Group__0 ) )
            {
            // InternalReflex.g:1235:2: ( ( rule__LogicalAndExpression__Group__0 ) )
            // InternalReflex.g:1236:3: ( rule__LogicalAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1237:3: ( rule__LogicalAndExpression__Group__0 )
            // InternalReflex.g:1237:4: rule__LogicalAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalReflex.g:1246:1: entryRuleLogicalOrExpression : ruleLogicalOrExpression EOF ;
    public final void entryRuleLogicalOrExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1247:1: ( ruleLogicalOrExpression EOF )
            // InternalReflex.g:1248:1: ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalReflex.g:1255:1: ruleLogicalOrExpression : ( ( rule__LogicalOrExpression__Group__0 ) ) ;
    public final void ruleLogicalOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1259:2: ( ( ( rule__LogicalOrExpression__Group__0 ) ) )
            // InternalReflex.g:1260:2: ( ( rule__LogicalOrExpression__Group__0 ) )
            {
            // InternalReflex.g:1260:2: ( ( rule__LogicalOrExpression__Group__0 ) )
            // InternalReflex.g:1261:3: ( rule__LogicalOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1262:3: ( rule__LogicalOrExpression__Group__0 )
            // InternalReflex.g:1262:4: rule__LogicalOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleAssignmentExpression"
    // InternalReflex.g:1271:1: entryRuleAssignmentExpression : ruleAssignmentExpression EOF ;
    public final void entryRuleAssignmentExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1272:1: ( ruleAssignmentExpression EOF )
            // InternalReflex.g:1273:1: ruleAssignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentExpression"


    // $ANTLR start "ruleAssignmentExpression"
    // InternalReflex.g:1280:1: ruleAssignmentExpression : ( ( rule__AssignmentExpression__Group__0 ) ) ;
    public final void ruleAssignmentExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1284:2: ( ( ( rule__AssignmentExpression__Group__0 ) ) )
            // InternalReflex.g:1285:2: ( ( rule__AssignmentExpression__Group__0 ) )
            {
            // InternalReflex.g:1285:2: ( ( rule__AssignmentExpression__Group__0 ) )
            // InternalReflex.g:1286:3: ( rule__AssignmentExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }
            // InternalReflex.g:1287:3: ( rule__AssignmentExpression__Group__0 )
            // InternalReflex.g:1287:4: rule__AssignmentExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalReflex.g:1296:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalReflex.g:1297:1: ( ruleExpression EOF )
            // InternalReflex.g:1298:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalReflex.g:1305:1: ruleExpression : ( ruleAssignmentExpression ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1309:2: ( ( ruleAssignmentExpression ) )
            // InternalReflex.g:1310:2: ( ruleAssignmentExpression )
            {
            // InternalReflex.g:1310:2: ( ruleAssignmentExpression )
            // InternalReflex.g:1311:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "rulePortType"
    // InternalReflex.g:1321:1: rulePortType : ( ( rule__PortType__Alternatives ) ) ;
    public final void rulePortType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1325:1: ( ( ( rule__PortType__Alternatives ) ) )
            // InternalReflex.g:1326:2: ( ( rule__PortType__Alternatives ) )
            {
            // InternalReflex.g:1326:2: ( ( rule__PortType__Alternatives ) )
            // InternalReflex.g:1327:3: ( rule__PortType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortTypeAccess().getAlternatives()); 
            }
            // InternalReflex.g:1328:3: ( rule__PortType__Alternatives )
            // InternalReflex.g:1328:4: rule__PortType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PortType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePortType"


    // $ANTLR start "ruleStateQualifier"
    // InternalReflex.g:1337:1: ruleStateQualifier : ( ( rule__StateQualifier__Alternatives ) ) ;
    public final void ruleStateQualifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1341:1: ( ( ( rule__StateQualifier__Alternatives ) ) )
            // InternalReflex.g:1342:2: ( ( rule__StateQualifier__Alternatives ) )
            {
            // InternalReflex.g:1342:2: ( ( rule__StateQualifier__Alternatives ) )
            // InternalReflex.g:1343:3: ( rule__StateQualifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateQualifierAccess().getAlternatives()); 
            }
            // InternalReflex.g:1344:3: ( rule__StateQualifier__Alternatives )
            // InternalReflex.g:1344:4: rule__StateQualifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__StateQualifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateQualifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStateQualifier"


    // $ANTLR start "ruleInfixPostfixOp"
    // InternalReflex.g:1353:1: ruleInfixPostfixOp : ( ( rule__InfixPostfixOp__Alternatives ) ) ;
    public final void ruleInfixPostfixOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1357:1: ( ( ( rule__InfixPostfixOp__Alternatives ) ) )
            // InternalReflex.g:1358:2: ( ( rule__InfixPostfixOp__Alternatives ) )
            {
            // InternalReflex.g:1358:2: ( ( rule__InfixPostfixOp__Alternatives ) )
            // InternalReflex.g:1359:3: ( rule__InfixPostfixOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixPostfixOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1360:3: ( rule__InfixPostfixOp__Alternatives )
            // InternalReflex.g:1360:4: rule__InfixPostfixOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InfixPostfixOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixPostfixOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixPostfixOp"


    // $ANTLR start "ruleAssignOperator"
    // InternalReflex.g:1369:1: ruleAssignOperator : ( ( rule__AssignOperator__Alternatives ) ) ;
    public final void ruleAssignOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1373:1: ( ( ( rule__AssignOperator__Alternatives ) ) )
            // InternalReflex.g:1374:2: ( ( rule__AssignOperator__Alternatives ) )
            {
            // InternalReflex.g:1374:2: ( ( rule__AssignOperator__Alternatives ) )
            // InternalReflex.g:1375:3: ( rule__AssignOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignOperatorAccess().getAlternatives()); 
            }
            // InternalReflex.g:1376:3: ( rule__AssignOperator__Alternatives )
            // InternalReflex.g:1376:4: rule__AssignOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AssignOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "ruleUnaryOp"
    // InternalReflex.g:1385:1: ruleUnaryOp : ( ( rule__UnaryOp__Alternatives ) ) ;
    public final void ruleUnaryOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1389:1: ( ( ( rule__UnaryOp__Alternatives ) ) )
            // InternalReflex.g:1390:2: ( ( rule__UnaryOp__Alternatives ) )
            {
            // InternalReflex.g:1390:2: ( ( rule__UnaryOp__Alternatives ) )
            // InternalReflex.g:1391:3: ( rule__UnaryOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1392:3: ( rule__UnaryOp__Alternatives )
            // InternalReflex.g:1392:4: rule__UnaryOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOp"


    // $ANTLR start "ruleCompareOp"
    // InternalReflex.g:1401:1: ruleCompareOp : ( ( rule__CompareOp__Alternatives ) ) ;
    public final void ruleCompareOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1405:1: ( ( ( rule__CompareOp__Alternatives ) ) )
            // InternalReflex.g:1406:2: ( ( rule__CompareOp__Alternatives ) )
            {
            // InternalReflex.g:1406:2: ( ( rule__CompareOp__Alternatives ) )
            // InternalReflex.g:1407:3: ( rule__CompareOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1408:3: ( rule__CompareOp__Alternatives )
            // InternalReflex.g:1408:4: rule__CompareOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOp"


    // $ANTLR start "ruleCompareEqOp"
    // InternalReflex.g:1417:1: ruleCompareEqOp : ( ( rule__CompareEqOp__Alternatives ) ) ;
    public final void ruleCompareEqOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1421:1: ( ( ( rule__CompareEqOp__Alternatives ) ) )
            // InternalReflex.g:1422:2: ( ( rule__CompareEqOp__Alternatives ) )
            {
            // InternalReflex.g:1422:2: ( ( rule__CompareEqOp__Alternatives ) )
            // InternalReflex.g:1423:3: ( rule__CompareEqOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareEqOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1424:3: ( rule__CompareEqOp__Alternatives )
            // InternalReflex.g:1424:4: rule__CompareEqOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareEqOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareEqOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareEqOp"


    // $ANTLR start "ruleShiftOp"
    // InternalReflex.g:1433:1: ruleShiftOp : ( ( rule__ShiftOp__Alternatives ) ) ;
    public final void ruleShiftOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1437:1: ( ( ( rule__ShiftOp__Alternatives ) ) )
            // InternalReflex.g:1438:2: ( ( rule__ShiftOp__Alternatives ) )
            {
            // InternalReflex.g:1438:2: ( ( rule__ShiftOp__Alternatives ) )
            // InternalReflex.g:1439:3: ( rule__ShiftOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1440:3: ( rule__ShiftOp__Alternatives )
            // InternalReflex.g:1440:4: rule__ShiftOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ShiftOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftOp"


    // $ANTLR start "ruleAdditiveOp"
    // InternalReflex.g:1449:1: ruleAdditiveOp : ( ( rule__AdditiveOp__Alternatives ) ) ;
    public final void ruleAdditiveOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1453:1: ( ( ( rule__AdditiveOp__Alternatives ) ) )
            // InternalReflex.g:1454:2: ( ( rule__AdditiveOp__Alternatives ) )
            {
            // InternalReflex.g:1454:2: ( ( rule__AdditiveOp__Alternatives ) )
            // InternalReflex.g:1455:3: ( rule__AdditiveOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1456:3: ( rule__AdditiveOp__Alternatives )
            // InternalReflex.g:1456:4: rule__AdditiveOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditiveOp"


    // $ANTLR start "ruleMultiplicativeOp"
    // InternalReflex.g:1465:1: ruleMultiplicativeOp : ( ( rule__MultiplicativeOp__Alternatives ) ) ;
    public final void ruleMultiplicativeOp() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1469:1: ( ( ( rule__MultiplicativeOp__Alternatives ) ) )
            // InternalReflex.g:1470:2: ( ( rule__MultiplicativeOp__Alternatives ) )
            {
            // InternalReflex.g:1470:2: ( ( rule__MultiplicativeOp__Alternatives ) )
            // InternalReflex.g:1471:3: ( rule__MultiplicativeOp__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeOpAccess().getAlternatives()); 
            }
            // InternalReflex.g:1472:3: ( rule__MultiplicativeOp__Alternatives )
            // InternalReflex.g:1472:4: rule__MultiplicativeOp__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeOp__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeOpAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicativeOp"


    // $ANTLR start "ruleType"
    // InternalReflex.g:1481:1: ruleType : ( ( rule__Type__Alternatives ) ) ;
    public final void ruleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1485:1: ( ( ( rule__Type__Alternatives ) ) )
            // InternalReflex.g:1486:2: ( ( rule__Type__Alternatives ) )
            {
            // InternalReflex.g:1486:2: ( ( rule__Type__Alternatives ) )
            // InternalReflex.g:1487:3: ( rule__Type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getAlternatives()); 
            }
            // InternalReflex.g:1488:3: ( rule__Type__Alternatives )
            // InternalReflex.g:1488:4: rule__Type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "rule__Program__Alternatives_5"
    // InternalReflex.g:1496:1: rule__Program__Alternatives_5 : ( ( ( rule__Program__ConstsAssignment_5_0 ) ) | ( ( rule__Program__EnumsAssignment_5_1 ) ) | ( ( rule__Program__FunctionsAssignment_5_2 ) ) | ( ( rule__Program__GlobalVarsAssignment_5_3 ) ) | ( ( rule__Program__PortsAssignment_5_4 ) ) | ( ( rule__Program__ProcessesAssignment_5_5 ) ) );
    public final void rule__Program__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1500:1: ( ( ( rule__Program__ConstsAssignment_5_0 ) ) | ( ( rule__Program__EnumsAssignment_5_1 ) ) | ( ( rule__Program__FunctionsAssignment_5_2 ) ) | ( ( rule__Program__GlobalVarsAssignment_5_3 ) ) | ( ( rule__Program__PortsAssignment_5_4 ) ) | ( ( rule__Program__ProcessesAssignment_5_5 ) ) )
            int alt1=6;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // InternalReflex.g:1501:2: ( ( rule__Program__ConstsAssignment_5_0 ) )
                    {
                    // InternalReflex.g:1501:2: ( ( rule__Program__ConstsAssignment_5_0 ) )
                    // InternalReflex.g:1502:3: ( rule__Program__ConstsAssignment_5_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProgramAccess().getConstsAssignment_5_0()); 
                    }
                    // InternalReflex.g:1503:3: ( rule__Program__ConstsAssignment_5_0 )
                    // InternalReflex.g:1503:4: rule__Program__ConstsAssignment_5_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__ConstsAssignment_5_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProgramAccess().getConstsAssignment_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1507:2: ( ( rule__Program__EnumsAssignment_5_1 ) )
                    {
                    // InternalReflex.g:1507:2: ( ( rule__Program__EnumsAssignment_5_1 ) )
                    // InternalReflex.g:1508:3: ( rule__Program__EnumsAssignment_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProgramAccess().getEnumsAssignment_5_1()); 
                    }
                    // InternalReflex.g:1509:3: ( rule__Program__EnumsAssignment_5_1 )
                    // InternalReflex.g:1509:4: rule__Program__EnumsAssignment_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__EnumsAssignment_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProgramAccess().getEnumsAssignment_5_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:1513:2: ( ( rule__Program__FunctionsAssignment_5_2 ) )
                    {
                    // InternalReflex.g:1513:2: ( ( rule__Program__FunctionsAssignment_5_2 ) )
                    // InternalReflex.g:1514:3: ( rule__Program__FunctionsAssignment_5_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProgramAccess().getFunctionsAssignment_5_2()); 
                    }
                    // InternalReflex.g:1515:3: ( rule__Program__FunctionsAssignment_5_2 )
                    // InternalReflex.g:1515:4: rule__Program__FunctionsAssignment_5_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__FunctionsAssignment_5_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProgramAccess().getFunctionsAssignment_5_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:1519:2: ( ( rule__Program__GlobalVarsAssignment_5_3 ) )
                    {
                    // InternalReflex.g:1519:2: ( ( rule__Program__GlobalVarsAssignment_5_3 ) )
                    // InternalReflex.g:1520:3: ( rule__Program__GlobalVarsAssignment_5_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProgramAccess().getGlobalVarsAssignment_5_3()); 
                    }
                    // InternalReflex.g:1521:3: ( rule__Program__GlobalVarsAssignment_5_3 )
                    // InternalReflex.g:1521:4: rule__Program__GlobalVarsAssignment_5_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__GlobalVarsAssignment_5_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProgramAccess().getGlobalVarsAssignment_5_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReflex.g:1525:2: ( ( rule__Program__PortsAssignment_5_4 ) )
                    {
                    // InternalReflex.g:1525:2: ( ( rule__Program__PortsAssignment_5_4 ) )
                    // InternalReflex.g:1526:3: ( rule__Program__PortsAssignment_5_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProgramAccess().getPortsAssignment_5_4()); 
                    }
                    // InternalReflex.g:1527:3: ( rule__Program__PortsAssignment_5_4 )
                    // InternalReflex.g:1527:4: rule__Program__PortsAssignment_5_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__PortsAssignment_5_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProgramAccess().getPortsAssignment_5_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReflex.g:1531:2: ( ( rule__Program__ProcessesAssignment_5_5 ) )
                    {
                    // InternalReflex.g:1531:2: ( ( rule__Program__ProcessesAssignment_5_5 ) )
                    // InternalReflex.g:1532:3: ( rule__Program__ProcessesAssignment_5_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProgramAccess().getProcessesAssignment_5_5()); 
                    }
                    // InternalReflex.g:1533:3: ( rule__Program__ProcessesAssignment_5_5 )
                    // InternalReflex.g:1533:4: rule__Program__ProcessesAssignment_5_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__ProcessesAssignment_5_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProgramAccess().getProcessesAssignment_5_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Alternatives_5"


    // $ANTLR start "rule__Process__Alternatives_4_0"
    // InternalReflex.g:1541:1: rule__Process__Alternatives_4_0 : ( ( ( rule__Process__ImportsAssignment_4_0_0 ) ) | ( ( rule__Process__VariablesAssignment_4_0_1 ) ) );
    public final void rule__Process__Alternatives_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1545:1: ( ( ( rule__Process__ImportsAssignment_4_0_0 ) ) | ( ( rule__Process__VariablesAssignment_4_0_1 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==96) ) {
                alt2=1;
            }
            else if ( ((LA2_0>=72 && LA2_0<=84)) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalReflex.g:1546:2: ( ( rule__Process__ImportsAssignment_4_0_0 ) )
                    {
                    // InternalReflex.g:1546:2: ( ( rule__Process__ImportsAssignment_4_0_0 ) )
                    // InternalReflex.g:1547:3: ( rule__Process__ImportsAssignment_4_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcessAccess().getImportsAssignment_4_0_0()); 
                    }
                    // InternalReflex.g:1548:3: ( rule__Process__ImportsAssignment_4_0_0 )
                    // InternalReflex.g:1548:4: rule__Process__ImportsAssignment_4_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Process__ImportsAssignment_4_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcessAccess().getImportsAssignment_4_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1552:2: ( ( rule__Process__VariablesAssignment_4_0_1 ) )
                    {
                    // InternalReflex.g:1552:2: ( ( rule__Process__VariablesAssignment_4_0_1 ) )
                    // InternalReflex.g:1553:3: ( rule__Process__VariablesAssignment_4_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcessAccess().getVariablesAssignment_4_0_1()); 
                    }
                    // InternalReflex.g:1554:3: ( rule__Process__VariablesAssignment_4_0_1 )
                    // InternalReflex.g:1554:4: rule__Process__VariablesAssignment_4_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Process__VariablesAssignment_4_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcessAccess().getVariablesAssignment_4_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Alternatives_4_0"


    // $ANTLR start "rule__Annotation__Alternatives"
    // InternalReflex.g:1562:1: rule__Annotation__Alternatives : ( ( ( rule__Annotation__Group_0__0 ) ) | ( ( rule__Annotation__KeyAssignment_1 ) ) );
    public final void rule__Annotation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1566:1: ( ( ( rule__Annotation__Group_0__0 ) ) | ( ( rule__Annotation__KeyAssignment_1 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_ID) ) {
                switch ( input.LA(2) ) {
                case EOF:
                case 89:
                    {
                    alt3=2;
                    }
                    break;
                case 94:
                    {
                    alt3=1;
                    }
                    break;
                case 95:
                    {
                    int LA3_4 = input.LA(3);

                    if ( (LA3_4==RULE_ID) ) {
                        int LA3_5 = input.LA(4);

                        if ( (LA3_5==EOF||LA3_5==89) ) {
                            alt3=2;
                        }
                        else if ( (LA3_5==94) ) {
                            alt3=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 3, 5, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalReflex.g:1567:2: ( ( rule__Annotation__Group_0__0 ) )
                    {
                    // InternalReflex.g:1567:2: ( ( rule__Annotation__Group_0__0 ) )
                    // InternalReflex.g:1568:3: ( rule__Annotation__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationAccess().getGroup_0()); 
                    }
                    // InternalReflex.g:1569:3: ( rule__Annotation__Group_0__0 )
                    // InternalReflex.g:1569:4: rule__Annotation__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Annotation__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1573:2: ( ( rule__Annotation__KeyAssignment_1 ) )
                    {
                    // InternalReflex.g:1573:2: ( ( rule__Annotation__KeyAssignment_1 ) )
                    // InternalReflex.g:1574:3: ( rule__Annotation__KeyAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationAccess().getKeyAssignment_1()); 
                    }
                    // InternalReflex.g:1575:3: ( rule__Annotation__KeyAssignment_1 )
                    // InternalReflex.g:1575:4: rule__Annotation__KeyAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Annotation__KeyAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationAccess().getKeyAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Alternatives"


    // $ANTLR start "rule__AnnotationKey__Alternatives"
    // InternalReflex.g:1583:1: rule__AnnotationKey__Alternatives : ( ( ( rule__AnnotationKey__Group_0__0 ) ) | ( RULE_ID ) );
    public final void rule__AnnotationKey__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1587:1: ( ( ( rule__AnnotationKey__Group_0__0 ) ) | ( RULE_ID ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==EOF||LA4_1==89||LA4_1==94) ) {
                    alt4=2;
                }
                else if ( (LA4_1==95) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalReflex.g:1588:2: ( ( rule__AnnotationKey__Group_0__0 ) )
                    {
                    // InternalReflex.g:1588:2: ( ( rule__AnnotationKey__Group_0__0 ) )
                    // InternalReflex.g:1589:3: ( rule__AnnotationKey__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationKeyAccess().getGroup_0()); 
                    }
                    // InternalReflex.g:1590:3: ( rule__AnnotationKey__Group_0__0 )
                    // InternalReflex.g:1590:4: rule__AnnotationKey__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnnotationKey__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationKeyAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1594:2: ( RULE_ID )
                    {
                    // InternalReflex.g:1594:2: ( RULE_ID )
                    // InternalReflex.g:1595:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationKeyAccess().getIDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationKeyAccess().getIDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Alternatives"


    // $ANTLR start "rule__ProcessVariable__Alternatives_0"
    // InternalReflex.g:1604:1: rule__ProcessVariable__Alternatives_0 : ( ( rulePhysicalVariable ) | ( ruleProgramVariable ) );
    public final void rule__ProcessVariable__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1608:1: ( ( rulePhysicalVariable ) | ( ruleProgramVariable ) )
            int alt5=2;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalReflex.g:1609:2: ( rulePhysicalVariable )
                    {
                    // InternalReflex.g:1609:2: ( rulePhysicalVariable )
                    // InternalReflex.g:1610:3: rulePhysicalVariable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcessVariableAccess().getPhysicalVariableParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePhysicalVariable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcessVariableAccess().getPhysicalVariableParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1615:2: ( ruleProgramVariable )
                    {
                    // InternalReflex.g:1615:2: ( ruleProgramVariable )
                    // InternalReflex.g:1616:3: ruleProgramVariable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProcessVariableAccess().getProgramVariableParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleProgramVariable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProcessVariableAccess().getProgramVariableParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessVariable__Alternatives_0"


    // $ANTLR start "rule__GlobalVariable__Alternatives_0"
    // InternalReflex.g:1625:1: rule__GlobalVariable__Alternatives_0 : ( ( rulePhysicalVariable ) | ( ruleProgramVariable ) );
    public final void rule__GlobalVariable__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1629:1: ( ( rulePhysicalVariable ) | ( ruleProgramVariable ) )
            int alt6=2;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalReflex.g:1630:2: ( rulePhysicalVariable )
                    {
                    // InternalReflex.g:1630:2: ( rulePhysicalVariable )
                    // InternalReflex.g:1631:3: rulePhysicalVariable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGlobalVariableAccess().getPhysicalVariableParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePhysicalVariable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGlobalVariableAccess().getPhysicalVariableParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1636:2: ( ruleProgramVariable )
                    {
                    // InternalReflex.g:1636:2: ( ruleProgramVariable )
                    // InternalReflex.g:1637:3: ruleProgramVariable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGlobalVariableAccess().getProgramVariableParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleProgramVariable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGlobalVariableAccess().getProgramVariableParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GlobalVariable__Alternatives_0"


    // $ANTLR start "rule__TimeoutFunction__Alternatives_1"
    // InternalReflex.g:1646:1: rule__TimeoutFunction__Alternatives_1 : ( ( ruleTimeAmountOrRef ) | ( ( rule__TimeoutFunction__Group_1_1__0 ) ) );
    public final void rule__TimeoutFunction__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1650:1: ( ( ruleTimeAmountOrRef ) | ( ( rule__TimeoutFunction__Group_1_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID||LA7_0==RULE_INTEGER||LA7_0==RULE_TIME) ) {
                alt7=1;
            }
            else if ( (LA7_0==100) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalReflex.g:1651:2: ( ruleTimeAmountOrRef )
                    {
                    // InternalReflex.g:1651:2: ( ruleTimeAmountOrRef )
                    // InternalReflex.g:1652:3: ruleTimeAmountOrRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTimeAmountOrRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1657:2: ( ( rule__TimeoutFunction__Group_1_1__0 ) )
                    {
                    // InternalReflex.g:1657:2: ( ( rule__TimeoutFunction__Group_1_1__0 ) )
                    // InternalReflex.g:1658:3: ( rule__TimeoutFunction__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeoutFunctionAccess().getGroup_1_1()); 
                    }
                    // InternalReflex.g:1659:3: ( rule__TimeoutFunction__Group_1_1__0 )
                    // InternalReflex.g:1659:4: rule__TimeoutFunction__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeoutFunction__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeoutFunctionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Alternatives_1"


    // $ANTLR start "rule__TimeAmountOrRef__Alternatives"
    // InternalReflex.g:1667:1: rule__TimeAmountOrRef__Alternatives : ( ( ( rule__TimeAmountOrRef__TimeAssignment_0 ) ) | ( ( rule__TimeAmountOrRef__IntTimeAssignment_1 ) ) | ( ( rule__TimeAmountOrRef__RefAssignment_2 ) ) );
    public final void rule__TimeAmountOrRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1671:1: ( ( ( rule__TimeAmountOrRef__TimeAssignment_0 ) ) | ( ( rule__TimeAmountOrRef__IntTimeAssignment_1 ) ) | ( ( rule__TimeAmountOrRef__RefAssignment_2 ) ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case RULE_TIME:
                {
                alt8=1;
                }
                break;
            case RULE_INTEGER:
                {
                alt8=2;
                }
                break;
            case RULE_ID:
                {
                alt8=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalReflex.g:1672:2: ( ( rule__TimeAmountOrRef__TimeAssignment_0 ) )
                    {
                    // InternalReflex.g:1672:2: ( ( rule__TimeAmountOrRef__TimeAssignment_0 ) )
                    // InternalReflex.g:1673:3: ( rule__TimeAmountOrRef__TimeAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAmountOrRefAccess().getTimeAssignment_0()); 
                    }
                    // InternalReflex.g:1674:3: ( rule__TimeAmountOrRef__TimeAssignment_0 )
                    // InternalReflex.g:1674:4: rule__TimeAmountOrRef__TimeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeAmountOrRef__TimeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAmountOrRefAccess().getTimeAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1678:2: ( ( rule__TimeAmountOrRef__IntTimeAssignment_1 ) )
                    {
                    // InternalReflex.g:1678:2: ( ( rule__TimeAmountOrRef__IntTimeAssignment_1 ) )
                    // InternalReflex.g:1679:3: ( rule__TimeAmountOrRef__IntTimeAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAmountOrRefAccess().getIntTimeAssignment_1()); 
                    }
                    // InternalReflex.g:1680:3: ( rule__TimeAmountOrRef__IntTimeAssignment_1 )
                    // InternalReflex.g:1680:4: rule__TimeAmountOrRef__IntTimeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeAmountOrRef__IntTimeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAmountOrRefAccess().getIntTimeAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:1684:2: ( ( rule__TimeAmountOrRef__RefAssignment_2 ) )
                    {
                    // InternalReflex.g:1684:2: ( ( rule__TimeAmountOrRef__RefAssignment_2 ) )
                    // InternalReflex.g:1685:3: ( rule__TimeAmountOrRef__RefAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAmountOrRefAccess().getRefAssignment_2()); 
                    }
                    // InternalReflex.g:1686:3: ( rule__TimeAmountOrRef__RefAssignment_2 )
                    // InternalReflex.g:1686:4: rule__TimeAmountOrRef__RefAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeAmountOrRef__RefAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAmountOrRefAccess().getRefAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeAmountOrRef__Alternatives"


    // $ANTLR start "rule__Statement__Alternatives"
    // InternalReflex.g:1694:1: rule__Statement__Alternatives : ( ( ( rule__Statement__Group_0__0 ) ) | ( ruleCompoundStatement ) | ( ruleStartProcStat ) | ( ruleStopProcStat ) | ( ruleErrorStat ) | ( ruleRestartStat ) | ( ruleResetStat ) | ( ruleSetStateStat ) | ( ruleIfElseStat ) | ( ruleSwitchStat ) | ( ( rule__Statement__Group_10__0 ) ) );
    public final void rule__Statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1698:1: ( ( ( rule__Statement__Group_0__0 ) ) | ( ruleCompoundStatement ) | ( ruleStartProcStat ) | ( ruleStopProcStat ) | ( ruleErrorStat ) | ( ruleRestartStat ) | ( ruleResetStat ) | ( ruleSetStateStat ) | ( ruleIfElseStat ) | ( ruleSwitchStat ) | ( ( rule__Statement__Group_10__0 ) ) )
            int alt9=11;
            switch ( input.LA(1) ) {
            case 91:
                {
                alt9=1;
                }
                break;
            case 86:
                {
                alt9=2;
                }
                break;
            case 109:
                {
                alt9=3;
                }
                break;
            case 43:
                {
                alt9=4;
                }
                break;
            case 44:
                {
                alt9=5;
                }
                break;
            case 110:
                {
                alt9=6;
                }
                break;
            case 111:
                {
                alt9=7;
                }
                break;
            case 113:
                {
                alt9=8;
                }
                break;
            case 104:
                {
                alt9=9;
                }
                break;
            case 106:
                {
                alt9=10;
                }
                break;
            case RULE_ID:
            case RULE_INTEGER:
            case RULE_TIME:
            case RULE_FLOAT:
            case RULE_BOOL_LITERAL:
            case 45:
            case 46:
            case 57:
            case 58:
            case 59:
            case 60:
            case 92:
            case 100:
                {
                alt9=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalReflex.g:1699:2: ( ( rule__Statement__Group_0__0 ) )
                    {
                    // InternalReflex.g:1699:2: ( ( rule__Statement__Group_0__0 ) )
                    // InternalReflex.g:1700:3: ( rule__Statement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getGroup_0()); 
                    }
                    // InternalReflex.g:1701:3: ( rule__Statement__Group_0__0 )
                    // InternalReflex.g:1701:4: rule__Statement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1705:2: ( ruleCompoundStatement )
                    {
                    // InternalReflex.g:1705:2: ( ruleCompoundStatement )
                    // InternalReflex.g:1706:3: ruleCompoundStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCompoundStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:1711:2: ( ruleStartProcStat )
                    {
                    // InternalReflex.g:1711:2: ( ruleStartProcStat )
                    // InternalReflex.g:1712:3: ruleStartProcStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getStartProcStatParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleStartProcStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getStartProcStatParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:1717:2: ( ruleStopProcStat )
                    {
                    // InternalReflex.g:1717:2: ( ruleStopProcStat )
                    // InternalReflex.g:1718:3: ruleStopProcStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getStopProcStatParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleStopProcStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getStopProcStatParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReflex.g:1723:2: ( ruleErrorStat )
                    {
                    // InternalReflex.g:1723:2: ( ruleErrorStat )
                    // InternalReflex.g:1724:3: ruleErrorStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getErrorStatParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleErrorStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getErrorStatParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReflex.g:1729:2: ( ruleRestartStat )
                    {
                    // InternalReflex.g:1729:2: ( ruleRestartStat )
                    // InternalReflex.g:1730:3: ruleRestartStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getRestartStatParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleRestartStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getRestartStatParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalReflex.g:1735:2: ( ruleResetStat )
                    {
                    // InternalReflex.g:1735:2: ( ruleResetStat )
                    // InternalReflex.g:1736:3: ruleResetStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getResetStatParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleResetStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getResetStatParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalReflex.g:1741:2: ( ruleSetStateStat )
                    {
                    // InternalReflex.g:1741:2: ( ruleSetStateStat )
                    // InternalReflex.g:1742:3: ruleSetStateStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSetStateStatParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSetStateStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSetStateStatParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalReflex.g:1747:2: ( ruleIfElseStat )
                    {
                    // InternalReflex.g:1747:2: ( ruleIfElseStat )
                    // InternalReflex.g:1748:3: ruleIfElseStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getIfElseStatParserRuleCall_8()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleIfElseStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getIfElseStatParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalReflex.g:1753:2: ( ruleSwitchStat )
                    {
                    // InternalReflex.g:1753:2: ( ruleSwitchStat )
                    // InternalReflex.g:1754:3: ruleSwitchStat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSwitchStatParserRuleCall_9()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSwitchStat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSwitchStatParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalReflex.g:1759:2: ( ( rule__Statement__Group_10__0 ) )
                    {
                    // InternalReflex.g:1759:2: ( ( rule__Statement__Group_10__0 ) )
                    // InternalReflex.g:1760:3: ( rule__Statement__Group_10__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getGroup_10()); 
                    }
                    // InternalReflex.g:1761:3: ( rule__Statement__Group_10__0 )
                    // InternalReflex.g:1761:4: rule__Statement__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getGroup_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives"


    // $ANTLR start "rule__SetStateStat__Alternatives_2"
    // InternalReflex.g:1769:1: rule__SetStateStat__Alternatives_2 : ( ( ( rule__SetStateStat__Group_2_0__0 ) ) | ( ( rule__SetStateStat__Group_2_1__0 ) ) );
    public final void rule__SetStateStat__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1773:1: ( ( ( rule__SetStateStat__Group_2_0__0 ) ) | ( ( rule__SetStateStat__Group_2_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==116) ) {
                alt10=1;
            }
            else if ( (LA10_0==93) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalReflex.g:1774:2: ( ( rule__SetStateStat__Group_2_0__0 ) )
                    {
                    // InternalReflex.g:1774:2: ( ( rule__SetStateStat__Group_2_0__0 ) )
                    // InternalReflex.g:1775:3: ( rule__SetStateStat__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSetStateStatAccess().getGroup_2_0()); 
                    }
                    // InternalReflex.g:1776:3: ( rule__SetStateStat__Group_2_0__0 )
                    // InternalReflex.g:1776:4: rule__SetStateStat__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SetStateStat__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSetStateStatAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1780:2: ( ( rule__SetStateStat__Group_2_1__0 ) )
                    {
                    // InternalReflex.g:1780:2: ( ( rule__SetStateStat__Group_2_1__0 ) )
                    // InternalReflex.g:1781:3: ( rule__SetStateStat__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSetStateStatAccess().getGroup_2_1()); 
                    }
                    // InternalReflex.g:1782:3: ( rule__SetStateStat__Group_2_1__0 )
                    // InternalReflex.g:1782:4: rule__SetStateStat__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SetStateStat__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSetStateStatAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Alternatives_2"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // InternalReflex.g:1790:1: rule__PrimaryExpression__Alternatives : ( ( ( rule__PrimaryExpression__ReferenceAssignment_0 ) ) | ( ( rule__PrimaryExpression__Group_1__0 ) ) | ( ( rule__PrimaryExpression__Group_2__0 ) ) | ( ( rule__PrimaryExpression__Group_3__0 ) ) | ( ( rule__PrimaryExpression__Group_4__0 ) ) | ( ( rule__PrimaryExpression__Group_5__0 ) ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1794:1: ( ( ( rule__PrimaryExpression__ReferenceAssignment_0 ) ) | ( ( rule__PrimaryExpression__Group_1__0 ) ) | ( ( rule__PrimaryExpression__Group_2__0 ) ) | ( ( rule__PrimaryExpression__Group_3__0 ) ) | ( ( rule__PrimaryExpression__Group_4__0 ) ) | ( ( rule__PrimaryExpression__Group_5__0 ) ) )
            int alt11=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt11=1;
                }
                break;
            case RULE_INTEGER:
                {
                alt11=2;
                }
                break;
            case RULE_FLOAT:
                {
                alt11=3;
                }
                break;
            case RULE_BOOL_LITERAL:
                {
                alt11=4;
                }
                break;
            case RULE_TIME:
                {
                alt11=5;
                }
                break;
            case 100:
                {
                alt11=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalReflex.g:1795:2: ( ( rule__PrimaryExpression__ReferenceAssignment_0 ) )
                    {
                    // InternalReflex.g:1795:2: ( ( rule__PrimaryExpression__ReferenceAssignment_0 ) )
                    // InternalReflex.g:1796:3: ( rule__PrimaryExpression__ReferenceAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getReferenceAssignment_0()); 
                    }
                    // InternalReflex.g:1797:3: ( rule__PrimaryExpression__ReferenceAssignment_0 )
                    // InternalReflex.g:1797:4: rule__PrimaryExpression__ReferenceAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__ReferenceAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getReferenceAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1801:2: ( ( rule__PrimaryExpression__Group_1__0 ) )
                    {
                    // InternalReflex.g:1801:2: ( ( rule__PrimaryExpression__Group_1__0 ) )
                    // InternalReflex.g:1802:3: ( rule__PrimaryExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); 
                    }
                    // InternalReflex.g:1803:3: ( rule__PrimaryExpression__Group_1__0 )
                    // InternalReflex.g:1803:4: rule__PrimaryExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:1807:2: ( ( rule__PrimaryExpression__Group_2__0 ) )
                    {
                    // InternalReflex.g:1807:2: ( ( rule__PrimaryExpression__Group_2__0 ) )
                    // InternalReflex.g:1808:3: ( rule__PrimaryExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); 
                    }
                    // InternalReflex.g:1809:3: ( rule__PrimaryExpression__Group_2__0 )
                    // InternalReflex.g:1809:4: rule__PrimaryExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:1813:2: ( ( rule__PrimaryExpression__Group_3__0 ) )
                    {
                    // InternalReflex.g:1813:2: ( ( rule__PrimaryExpression__Group_3__0 ) )
                    // InternalReflex.g:1814:3: ( rule__PrimaryExpression__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); 
                    }
                    // InternalReflex.g:1815:3: ( rule__PrimaryExpression__Group_3__0 )
                    // InternalReflex.g:1815:4: rule__PrimaryExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReflex.g:1819:2: ( ( rule__PrimaryExpression__Group_4__0 ) )
                    {
                    // InternalReflex.g:1819:2: ( ( rule__PrimaryExpression__Group_4__0 ) )
                    // InternalReflex.g:1820:3: ( rule__PrimaryExpression__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); 
                    }
                    // InternalReflex.g:1821:3: ( rule__PrimaryExpression__Group_4__0 )
                    // InternalReflex.g:1821:4: rule__PrimaryExpression__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReflex.g:1825:2: ( ( rule__PrimaryExpression__Group_5__0 ) )
                    {
                    // InternalReflex.g:1825:2: ( ( rule__PrimaryExpression__Group_5__0 ) )
                    // InternalReflex.g:1826:3: ( rule__PrimaryExpression__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); 
                    }
                    // InternalReflex.g:1827:3: ( rule__PrimaryExpression__Group_5__0 )
                    // InternalReflex.g:1827:4: rule__PrimaryExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__UnaryExpression__Alternatives"
    // InternalReflex.g:1835:1: rule__UnaryExpression__Alternatives : ( ( rulePrimaryExpression ) | ( ruleFunctionCall ) | ( rulePostfixOp ) | ( ruleInfixOp ) | ( ( rule__UnaryExpression__Group_4__0 ) ) );
    public final void rule__UnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1839:1: ( ( rulePrimaryExpression ) | ( ruleFunctionCall ) | ( rulePostfixOp ) | ( ruleInfixOp ) | ( ( rule__UnaryExpression__Group_4__0 ) ) )
            int alt12=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case RULE_BIT_AND:
                case RULE_BIT_XOR:
                case RULE_BIT_OR:
                case RULE_LOGICAL_AND:
                case RULE_LOGICAL_OR:
                case 57:
                case 58:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 87:
                case 91:
                case 98:
                case 101:
                    {
                    alt12=1;
                    }
                    break;
                case 45:
                case 46:
                    {
                    alt12=3;
                    }
                    break;
                case 100:
                    {
                    alt12=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }

                }
                break;
            case RULE_INTEGER:
            case RULE_TIME:
            case RULE_FLOAT:
            case RULE_BOOL_LITERAL:
            case 100:
                {
                alt12=1;
                }
                break;
            case 45:
            case 46:
                {
                alt12=4;
                }
                break;
            case 57:
            case 58:
            case 59:
            case 60:
                {
                alt12=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalReflex.g:1840:2: ( rulePrimaryExpression )
                    {
                    // InternalReflex.g:1840:2: ( rulePrimaryExpression )
                    // InternalReflex.g:1841:3: rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1846:2: ( ruleFunctionCall )
                    {
                    // InternalReflex.g:1846:2: ( ruleFunctionCall )
                    // InternalReflex.g:1847:3: ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionCallParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionCallParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:1852:2: ( rulePostfixOp )
                    {
                    // InternalReflex.g:1852:2: ( rulePostfixOp )
                    // InternalReflex.g:1853:3: rulePostfixOp
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getPostfixOpParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePostfixOp();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getPostfixOpParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:1858:2: ( ruleInfixOp )
                    {
                    // InternalReflex.g:1858:2: ( ruleInfixOp )
                    // InternalReflex.g:1859:3: ruleInfixOp
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getInfixOpParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleInfixOp();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getInfixOpParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReflex.g:1864:2: ( ( rule__UnaryExpression__Group_4__0 ) )
                    {
                    // InternalReflex.g:1864:2: ( ( rule__UnaryExpression__Group_4__0 ) )
                    // InternalReflex.g:1865:3: ( rule__UnaryExpression__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getGroup_4()); 
                    }
                    // InternalReflex.g:1866:3: ( rule__UnaryExpression__Group_4__0 )
                    // InternalReflex.g:1866:4: rule__UnaryExpression__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnaryExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Alternatives"


    // $ANTLR start "rule__CastExpression__Alternatives"
    // InternalReflex.g:1874:1: rule__CastExpression__Alternatives : ( ( ruleUnaryExpression ) | ( ( rule__CastExpression__Group_1__0 ) ) );
    public final void rule__CastExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1878:1: ( ( ruleUnaryExpression ) | ( ( rule__CastExpression__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID||LA13_0==RULE_INTEGER||(LA13_0>=RULE_TIME && LA13_0<=RULE_BOOL_LITERAL)||(LA13_0>=45 && LA13_0<=46)||(LA13_0>=57 && LA13_0<=60)) ) {
                alt13=1;
            }
            else if ( (LA13_0==100) ) {
                int LA13_2 = input.LA(2);

                if ( ((LA13_2>=72 && LA13_2<=84)) ) {
                    alt13=2;
                }
                else if ( (LA13_2==RULE_ID||LA13_2==RULE_INTEGER||(LA13_2>=RULE_TIME && LA13_2<=RULE_BOOL_LITERAL)||(LA13_2>=45 && LA13_2<=46)||(LA13_2>=57 && LA13_2<=60)||LA13_2==92||LA13_2==100) ) {
                    alt13=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalReflex.g:1879:2: ( ruleUnaryExpression )
                    {
                    // InternalReflex.g:1879:2: ( ruleUnaryExpression )
                    // InternalReflex.g:1880:3: ruleUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1885:2: ( ( rule__CastExpression__Group_1__0 ) )
                    {
                    // InternalReflex.g:1885:2: ( ( rule__CastExpression__Group_1__0 ) )
                    // InternalReflex.g:1886:3: ( rule__CastExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCastExpressionAccess().getGroup_1()); 
                    }
                    // InternalReflex.g:1887:3: ( rule__CastExpression__Group_1__0 )
                    // InternalReflex.g:1887:4: rule__CastExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CastExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCastExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Alternatives"


    // $ANTLR start "rule__CompareExpression__Alternatives"
    // InternalReflex.g:1895:1: rule__CompareExpression__Alternatives : ( ( ruleCheckStateExpression ) | ( ( rule__CompareExpression__Group_1__0 ) ) );
    public final void rule__CompareExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1899:1: ( ( ruleCheckStateExpression ) | ( ( rule__CompareExpression__Group_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==92) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_ID||LA14_0==RULE_INTEGER||(LA14_0>=RULE_TIME && LA14_0<=RULE_BOOL_LITERAL)||(LA14_0>=45 && LA14_0<=46)||(LA14_0>=57 && LA14_0<=60)||LA14_0==100) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalReflex.g:1900:2: ( ruleCheckStateExpression )
                    {
                    // InternalReflex.g:1900:2: ( ruleCheckStateExpression )
                    // InternalReflex.g:1901:3: ruleCheckStateExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareExpressionAccess().getCheckStateExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCheckStateExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareExpressionAccess().getCheckStateExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1906:2: ( ( rule__CompareExpression__Group_1__0 ) )
                    {
                    // InternalReflex.g:1906:2: ( ( rule__CompareExpression__Group_1__0 ) )
                    // InternalReflex.g:1907:3: ( rule__CompareExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareExpressionAccess().getGroup_1()); 
                    }
                    // InternalReflex.g:1908:3: ( rule__CompareExpression__Group_1__0 )
                    // InternalReflex.g:1908:4: rule__CompareExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CompareExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Alternatives"


    // $ANTLR start "rule__PortType__Alternatives"
    // InternalReflex.g:1916:1: rule__PortType__Alternatives : ( ( ( 'input' ) ) | ( ( 'output' ) ) );
    public final void rule__PortType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1920:1: ( ( ( 'input' ) ) | ( ( 'output' ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==39) ) {
                alt15=1;
            }
            else if ( (LA15_0==40) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalReflex.g:1921:2: ( ( 'input' ) )
                    {
                    // InternalReflex.g:1921:2: ( ( 'input' ) )
                    // InternalReflex.g:1922:3: ( 'input' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPortTypeAccess().getINPUTEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:1923:3: ( 'input' )
                    // InternalReflex.g:1923:4: 'input'
                    {
                    match(input,39,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPortTypeAccess().getINPUTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1927:2: ( ( 'output' ) )
                    {
                    // InternalReflex.g:1927:2: ( ( 'output' ) )
                    // InternalReflex.g:1928:3: ( 'output' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPortTypeAccess().getOUTPUTEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:1929:3: ( 'output' )
                    // InternalReflex.g:1929:4: 'output'
                    {
                    match(input,40,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPortTypeAccess().getOUTPUTEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortType__Alternatives"


    // $ANTLR start "rule__StateQualifier__Alternatives"
    // InternalReflex.g:1937:1: rule__StateQualifier__Alternatives : ( ( ( 'active' ) ) | ( ( 'inactive' ) ) | ( ( 'stop' ) ) | ( ( 'error' ) ) );
    public final void rule__StateQualifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1941:1: ( ( ( 'active' ) ) | ( ( 'inactive' ) ) | ( ( 'stop' ) ) | ( ( 'error' ) ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case 41:
                {
                alt16=1;
                }
                break;
            case 42:
                {
                alt16=2;
                }
                break;
            case 43:
                {
                alt16=3;
                }
                break;
            case 44:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalReflex.g:1942:2: ( ( 'active' ) )
                    {
                    // InternalReflex.g:1942:2: ( ( 'active' ) )
                    // InternalReflex.g:1943:3: ( 'active' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStateQualifierAccess().getACTIVEEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:1944:3: ( 'active' )
                    // InternalReflex.g:1944:4: 'active'
                    {
                    match(input,41,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStateQualifierAccess().getACTIVEEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1948:2: ( ( 'inactive' ) )
                    {
                    // InternalReflex.g:1948:2: ( ( 'inactive' ) )
                    // InternalReflex.g:1949:3: ( 'inactive' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStateQualifierAccess().getINACTIVEEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:1950:3: ( 'inactive' )
                    // InternalReflex.g:1950:4: 'inactive'
                    {
                    match(input,42,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStateQualifierAccess().getINACTIVEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:1954:2: ( ( 'stop' ) )
                    {
                    // InternalReflex.g:1954:2: ( ( 'stop' ) )
                    // InternalReflex.g:1955:3: ( 'stop' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStateQualifierAccess().getSTOPEnumLiteralDeclaration_2()); 
                    }
                    // InternalReflex.g:1956:3: ( 'stop' )
                    // InternalReflex.g:1956:4: 'stop'
                    {
                    match(input,43,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStateQualifierAccess().getSTOPEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:1960:2: ( ( 'error' ) )
                    {
                    // InternalReflex.g:1960:2: ( ( 'error' ) )
                    // InternalReflex.g:1961:3: ( 'error' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStateQualifierAccess().getERROREnumLiteralDeclaration_3()); 
                    }
                    // InternalReflex.g:1962:3: ( 'error' )
                    // InternalReflex.g:1962:4: 'error'
                    {
                    match(input,44,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStateQualifierAccess().getERROREnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StateQualifier__Alternatives"


    // $ANTLR start "rule__InfixPostfixOp__Alternatives"
    // InternalReflex.g:1970:1: rule__InfixPostfixOp__Alternatives : ( ( ( '++' ) ) | ( ( '--' ) ) );
    public final void rule__InfixPostfixOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1974:1: ( ( ( '++' ) ) | ( ( '--' ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==45) ) {
                alt17=1;
            }
            else if ( (LA17_0==46) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalReflex.g:1975:2: ( ( '++' ) )
                    {
                    // InternalReflex.g:1975:2: ( ( '++' ) )
                    // InternalReflex.g:1976:3: ( '++' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixPostfixOpAccess().getINCEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:1977:3: ( '++' )
                    // InternalReflex.g:1977:4: '++'
                    {
                    match(input,45,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixPostfixOpAccess().getINCEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:1981:2: ( ( '--' ) )
                    {
                    // InternalReflex.g:1981:2: ( ( '--' ) )
                    // InternalReflex.g:1982:3: ( '--' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixPostfixOpAccess().getDECEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:1983:3: ( '--' )
                    // InternalReflex.g:1983:4: '--'
                    {
                    match(input,46,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixPostfixOpAccess().getDECEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixPostfixOp__Alternatives"


    // $ANTLR start "rule__AssignOperator__Alternatives"
    // InternalReflex.g:1991:1: rule__AssignOperator__Alternatives : ( ( ( '=' ) ) | ( ( '*=' ) ) | ( ( '/=' ) ) | ( ( '+=' ) ) | ( ( '-=' ) ) | ( ( '<<=' ) ) | ( ( '>>=' ) ) | ( ( '&=' ) ) | ( ( '^=' ) ) | ( ( '|=' ) ) );
    public final void rule__AssignOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:1995:1: ( ( ( '=' ) ) | ( ( '*=' ) ) | ( ( '/=' ) ) | ( ( '+=' ) ) | ( ( '-=' ) ) | ( ( '<<=' ) ) | ( ( '>>=' ) ) | ( ( '&=' ) ) | ( ( '^=' ) ) | ( ( '|=' ) ) )
            int alt18=10;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt18=1;
                }
                break;
            case 48:
                {
                alt18=2;
                }
                break;
            case 49:
                {
                alt18=3;
                }
                break;
            case 50:
                {
                alt18=4;
                }
                break;
            case 51:
                {
                alt18=5;
                }
                break;
            case 52:
                {
                alt18=6;
                }
                break;
            case 53:
                {
                alt18=7;
                }
                break;
            case 54:
                {
                alt18=8;
                }
                break;
            case 55:
                {
                alt18=9;
                }
                break;
            case 56:
                {
                alt18=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalReflex.g:1996:2: ( ( '=' ) )
                    {
                    // InternalReflex.g:1996:2: ( ( '=' ) )
                    // InternalReflex.g:1997:3: ( '=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:1998:3: ( '=' )
                    // InternalReflex.g:1998:4: '='
                    {
                    match(input,47,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2002:2: ( ( '*=' ) )
                    {
                    // InternalReflex.g:2002:2: ( ( '*=' ) )
                    // InternalReflex.g:2003:3: ( '*=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getMULEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2004:3: ( '*=' )
                    // InternalReflex.g:2004:4: '*='
                    {
                    match(input,48,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getMULEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:2008:2: ( ( '/=' ) )
                    {
                    // InternalReflex.g:2008:2: ( ( '/=' ) )
                    // InternalReflex.g:2009:3: ( '/=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getDIVEnumLiteralDeclaration_2()); 
                    }
                    // InternalReflex.g:2010:3: ( '/=' )
                    // InternalReflex.g:2010:4: '/='
                    {
                    match(input,49,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getDIVEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:2014:2: ( ( '+=' ) )
                    {
                    // InternalReflex.g:2014:2: ( ( '+=' ) )
                    // InternalReflex.g:2015:3: ( '+=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getMODEnumLiteralDeclaration_3()); 
                    }
                    // InternalReflex.g:2016:3: ( '+=' )
                    // InternalReflex.g:2016:4: '+='
                    {
                    match(input,50,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getMODEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReflex.g:2020:2: ( ( '-=' ) )
                    {
                    // InternalReflex.g:2020:2: ( ( '-=' ) )
                    // InternalReflex.g:2021:3: ( '-=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getSUBEnumLiteralDeclaration_4()); 
                    }
                    // InternalReflex.g:2022:3: ( '-=' )
                    // InternalReflex.g:2022:4: '-='
                    {
                    match(input,51,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getSUBEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReflex.g:2026:2: ( ( '<<=' ) )
                    {
                    // InternalReflex.g:2026:2: ( ( '<<=' ) )
                    // InternalReflex.g:2027:3: ( '<<=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getCINEnumLiteralDeclaration_5()); 
                    }
                    // InternalReflex.g:2028:3: ( '<<=' )
                    // InternalReflex.g:2028:4: '<<='
                    {
                    match(input,52,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getCINEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalReflex.g:2032:2: ( ( '>>=' ) )
                    {
                    // InternalReflex.g:2032:2: ( ( '>>=' ) )
                    // InternalReflex.g:2033:3: ( '>>=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getCOUTEnumLiteralDeclaration_6()); 
                    }
                    // InternalReflex.g:2034:3: ( '>>=' )
                    // InternalReflex.g:2034:4: '>>='
                    {
                    match(input,53,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getCOUTEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalReflex.g:2038:2: ( ( '&=' ) )
                    {
                    // InternalReflex.g:2038:2: ( ( '&=' ) )
                    // InternalReflex.g:2039:3: ( '&=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getBIT_ANDEnumLiteralDeclaration_7()); 
                    }
                    // InternalReflex.g:2040:3: ( '&=' )
                    // InternalReflex.g:2040:4: '&='
                    {
                    match(input,54,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getBIT_ANDEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalReflex.g:2044:2: ( ( '^=' ) )
                    {
                    // InternalReflex.g:2044:2: ( ( '^=' ) )
                    // InternalReflex.g:2045:3: ( '^=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getBIT_XOREnumLiteralDeclaration_8()); 
                    }
                    // InternalReflex.g:2046:3: ( '^=' )
                    // InternalReflex.g:2046:4: '^='
                    {
                    match(input,55,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getBIT_XOREnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalReflex.g:2050:2: ( ( '|=' ) )
                    {
                    // InternalReflex.g:2050:2: ( ( '|=' ) )
                    // InternalReflex.g:2051:3: ( '|=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOperatorAccess().getBIT_OREnumLiteralDeclaration_9()); 
                    }
                    // InternalReflex.g:2052:3: ( '|=' )
                    // InternalReflex.g:2052:4: '|='
                    {
                    match(input,56,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOperatorAccess().getBIT_OREnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignOperator__Alternatives"


    // $ANTLR start "rule__UnaryOp__Alternatives"
    // InternalReflex.g:2060:1: rule__UnaryOp__Alternatives : ( ( ( '+' ) ) | ( ( '-' ) ) | ( ( '~' ) ) | ( ( '!' ) ) );
    public final void rule__UnaryOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2064:1: ( ( ( '+' ) ) | ( ( '-' ) ) | ( ( '~' ) ) | ( ( '!' ) ) )
            int alt19=4;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt19=1;
                }
                break;
            case 58:
                {
                alt19=2;
                }
                break;
            case 59:
                {
                alt19=3;
                }
                break;
            case 60:
                {
                alt19=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalReflex.g:2065:2: ( ( '+' ) )
                    {
                    // InternalReflex.g:2065:2: ( ( '+' ) )
                    // InternalReflex.g:2066:3: ( '+' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOpAccess().getPLUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2067:3: ( '+' )
                    // InternalReflex.g:2067:4: '+'
                    {
                    match(input,57,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOpAccess().getPLUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2071:2: ( ( '-' ) )
                    {
                    // InternalReflex.g:2071:2: ( ( '-' ) )
                    // InternalReflex.g:2072:3: ( '-' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOpAccess().getMINUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2073:3: ( '-' )
                    // InternalReflex.g:2073:4: '-'
                    {
                    match(input,58,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOpAccess().getMINUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:2077:2: ( ( '~' ) )
                    {
                    // InternalReflex.g:2077:2: ( ( '~' ) )
                    // InternalReflex.g:2078:3: ( '~' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOpAccess().getBIT_NOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalReflex.g:2079:3: ( '~' )
                    // InternalReflex.g:2079:4: '~'
                    {
                    match(input,59,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOpAccess().getBIT_NOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:2083:2: ( ( '!' ) )
                    {
                    // InternalReflex.g:2083:2: ( ( '!' ) )
                    // InternalReflex.g:2084:3: ( '!' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOpAccess().getLOGICAL_NOTEnumLiteralDeclaration_3()); 
                    }
                    // InternalReflex.g:2085:3: ( '!' )
                    // InternalReflex.g:2085:4: '!'
                    {
                    match(input,60,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOpAccess().getLOGICAL_NOTEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOp__Alternatives"


    // $ANTLR start "rule__CompareOp__Alternatives"
    // InternalReflex.g:2093:1: rule__CompareOp__Alternatives : ( ( ( '<' ) ) | ( ( '>' ) ) | ( ( '=<' ) ) | ( ( '>=' ) ) );
    public final void rule__CompareOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2097:1: ( ( ( '<' ) ) | ( ( '>' ) ) | ( ( '=<' ) ) | ( ( '>=' ) ) )
            int alt20=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt20=1;
                }
                break;
            case 62:
                {
                alt20=2;
                }
                break;
            case 63:
                {
                alt20=3;
                }
                break;
            case 64:
                {
                alt20=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalReflex.g:2098:2: ( ( '<' ) )
                    {
                    // InternalReflex.g:2098:2: ( ( '<' ) )
                    // InternalReflex.g:2099:3: ( '<' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOpAccess().getLESSEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2100:3: ( '<' )
                    // InternalReflex.g:2100:4: '<'
                    {
                    match(input,61,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOpAccess().getLESSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2104:2: ( ( '>' ) )
                    {
                    // InternalReflex.g:2104:2: ( ( '>' ) )
                    // InternalReflex.g:2105:3: ( '>' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOpAccess().getGREATEREnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2106:3: ( '>' )
                    // InternalReflex.g:2106:4: '>'
                    {
                    match(input,62,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOpAccess().getGREATEREnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:2110:2: ( ( '=<' ) )
                    {
                    // InternalReflex.g:2110:2: ( ( '=<' ) )
                    // InternalReflex.g:2111:3: ( '=<' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOpAccess().getLESS_EQEnumLiteralDeclaration_2()); 
                    }
                    // InternalReflex.g:2112:3: ( '=<' )
                    // InternalReflex.g:2112:4: '=<'
                    {
                    match(input,63,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOpAccess().getLESS_EQEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:2116:2: ( ( '>=' ) )
                    {
                    // InternalReflex.g:2116:2: ( ( '>=' ) )
                    // InternalReflex.g:2117:3: ( '>=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOpAccess().getGREATER_EQEnumLiteralDeclaration_3()); 
                    }
                    // InternalReflex.g:2118:3: ( '>=' )
                    // InternalReflex.g:2118:4: '>='
                    {
                    match(input,64,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOpAccess().getGREATER_EQEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOp__Alternatives"


    // $ANTLR start "rule__CompareEqOp__Alternatives"
    // InternalReflex.g:2126:1: rule__CompareEqOp__Alternatives : ( ( ( '==' ) ) | ( ( '!=' ) ) );
    public final void rule__CompareEqOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2130:1: ( ( ( '==' ) ) | ( ( '!=' ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==65) ) {
                alt21=1;
            }
            else if ( (LA21_0==66) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalReflex.g:2131:2: ( ( '==' ) )
                    {
                    // InternalReflex.g:2131:2: ( ( '==' ) )
                    // InternalReflex.g:2132:3: ( '==' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareEqOpAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2133:3: ( '==' )
                    // InternalReflex.g:2133:4: '=='
                    {
                    match(input,65,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareEqOpAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2137:2: ( ( '!=' ) )
                    {
                    // InternalReflex.g:2137:2: ( ( '!=' ) )
                    // InternalReflex.g:2138:3: ( '!=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareEqOpAccess().getNOT_EQEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2139:3: ( '!=' )
                    // InternalReflex.g:2139:4: '!='
                    {
                    match(input,66,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareEqOpAccess().getNOT_EQEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareEqOp__Alternatives"


    // $ANTLR start "rule__ShiftOp__Alternatives"
    // InternalReflex.g:2147:1: rule__ShiftOp__Alternatives : ( ( ( '>>' ) ) | ( ( '<<' ) ) );
    public final void rule__ShiftOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2151:1: ( ( ( '>>' ) ) | ( ( '<<' ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==67) ) {
                alt22=1;
            }
            else if ( (LA22_0==68) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalReflex.g:2152:2: ( ( '>>' ) )
                    {
                    // InternalReflex.g:2152:2: ( ( '>>' ) )
                    // InternalReflex.g:2153:3: ( '>>' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShiftOpAccess().getLEFT_SHIFTEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2154:3: ( '>>' )
                    // InternalReflex.g:2154:4: '>>'
                    {
                    match(input,67,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShiftOpAccess().getLEFT_SHIFTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2158:2: ( ( '<<' ) )
                    {
                    // InternalReflex.g:2158:2: ( ( '<<' ) )
                    // InternalReflex.g:2159:3: ( '<<' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShiftOpAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2160:3: ( '<<' )
                    // InternalReflex.g:2160:4: '<<'
                    {
                    match(input,68,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShiftOpAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftOp__Alternatives"


    // $ANTLR start "rule__AdditiveOp__Alternatives"
    // InternalReflex.g:2168:1: rule__AdditiveOp__Alternatives : ( ( ( '+' ) ) | ( ( '-' ) ) );
    public final void rule__AdditiveOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2172:1: ( ( ( '+' ) ) | ( ( '-' ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==57) ) {
                alt23=1;
            }
            else if ( (LA23_0==58) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalReflex.g:2173:2: ( ( '+' ) )
                    {
                    // InternalReflex.g:2173:2: ( ( '+' ) )
                    // InternalReflex.g:2174:3: ( '+' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveOpAccess().getPLUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2175:3: ( '+' )
                    // InternalReflex.g:2175:4: '+'
                    {
                    match(input,57,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveOpAccess().getPLUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2179:2: ( ( '-' ) )
                    {
                    // InternalReflex.g:2179:2: ( ( '-' ) )
                    // InternalReflex.g:2180:3: ( '-' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveOpAccess().getMINUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2181:3: ( '-' )
                    // InternalReflex.g:2181:4: '-'
                    {
                    match(input,58,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveOpAccess().getMINUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveOp__Alternatives"


    // $ANTLR start "rule__MultiplicativeOp__Alternatives"
    // InternalReflex.g:2189:1: rule__MultiplicativeOp__Alternatives : ( ( ( '*' ) ) | ( ( '/' ) ) | ( ( '%' ) ) );
    public final void rule__MultiplicativeOp__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2193:1: ( ( ( '*' ) ) | ( ( '/' ) ) | ( ( '%' ) ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case 69:
                {
                alt24=1;
                }
                break;
            case 70:
                {
                alt24=2;
                }
                break;
            case 71:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalReflex.g:2194:2: ( ( '*' ) )
                    {
                    // InternalReflex.g:2194:2: ( ( '*' ) )
                    // InternalReflex.g:2195:3: ( '*' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeOpAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2196:3: ( '*' )
                    // InternalReflex.g:2196:4: '*'
                    {
                    match(input,69,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeOpAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2200:2: ( ( '/' ) )
                    {
                    // InternalReflex.g:2200:2: ( ( '/' ) )
                    // InternalReflex.g:2201:3: ( '/' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeOpAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2202:3: ( '/' )
                    // InternalReflex.g:2202:4: '/'
                    {
                    match(input,70,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeOpAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:2206:2: ( ( '%' ) )
                    {
                    // InternalReflex.g:2206:2: ( ( '%' ) )
                    // InternalReflex.g:2207:3: ( '%' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeOpAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalReflex.g:2208:3: ( '%' )
                    // InternalReflex.g:2208:4: '%'
                    {
                    match(input,71,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeOpAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeOp__Alternatives"


    // $ANTLR start "rule__Type__Alternatives"
    // InternalReflex.g:2216:1: rule__Type__Alternatives : ( ( ( 'void' ) ) | ( ( 'float' ) ) | ( ( 'double' ) ) | ( ( 'int8' ) ) | ( ( 'uint8' ) ) | ( ( 'int16' ) ) | ( ( 'uint16' ) ) | ( ( 'int32' ) ) | ( ( 'uint32' ) ) | ( ( 'int64' ) ) | ( ( 'uint64' ) ) | ( ( 'bool' ) ) | ( ( 'time' ) ) );
    public final void rule__Type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2220:1: ( ( ( 'void' ) ) | ( ( 'float' ) ) | ( ( 'double' ) ) | ( ( 'int8' ) ) | ( ( 'uint8' ) ) | ( ( 'int16' ) ) | ( ( 'uint16' ) ) | ( ( 'int32' ) ) | ( ( 'uint32' ) ) | ( ( 'int64' ) ) | ( ( 'uint64' ) ) | ( ( 'bool' ) ) | ( ( 'time' ) ) )
            int alt25=13;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt25=1;
                }
                break;
            case 73:
                {
                alt25=2;
                }
                break;
            case 74:
                {
                alt25=3;
                }
                break;
            case 75:
                {
                alt25=4;
                }
                break;
            case 76:
                {
                alt25=5;
                }
                break;
            case 77:
                {
                alt25=6;
                }
                break;
            case 78:
                {
                alt25=7;
                }
                break;
            case 79:
                {
                alt25=8;
                }
                break;
            case 80:
                {
                alt25=9;
                }
                break;
            case 81:
                {
                alt25=10;
                }
                break;
            case 82:
                {
                alt25=11;
                }
                break;
            case 83:
                {
                alt25=12;
                }
                break;
            case 84:
                {
                alt25=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalReflex.g:2221:2: ( ( 'void' ) )
                    {
                    // InternalReflex.g:2221:2: ( ( 'void' ) )
                    // InternalReflex.g:2222:3: ( 'void' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getVOID_C_TYPEEnumLiteralDeclaration_0()); 
                    }
                    // InternalReflex.g:2223:3: ( 'void' )
                    // InternalReflex.g:2223:4: 'void'
                    {
                    match(input,72,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getVOID_C_TYPEEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReflex.g:2227:2: ( ( 'float' ) )
                    {
                    // InternalReflex.g:2227:2: ( ( 'float' ) )
                    // InternalReflex.g:2228:3: ( 'float' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_1()); 
                    }
                    // InternalReflex.g:2229:3: ( 'float' )
                    // InternalReflex.g:2229:4: 'float'
                    {
                    match(input,73,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReflex.g:2233:2: ( ( 'double' ) )
                    {
                    // InternalReflex.g:2233:2: ( ( 'double' ) )
                    // InternalReflex.g:2234:3: ( 'double' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); 
                    }
                    // InternalReflex.g:2235:3: ( 'double' )
                    // InternalReflex.g:2235:4: 'double'
                    {
                    match(input,74,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReflex.g:2239:2: ( ( 'int8' ) )
                    {
                    // InternalReflex.g:2239:2: ( ( 'int8' ) )
                    // InternalReflex.g:2240:3: ( 'int8' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT8EnumLiteralDeclaration_3()); 
                    }
                    // InternalReflex.g:2241:3: ( 'int8' )
                    // InternalReflex.g:2241:4: 'int8'
                    {
                    match(input,75,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT8EnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReflex.g:2245:2: ( ( 'uint8' ) )
                    {
                    // InternalReflex.g:2245:2: ( ( 'uint8' ) )
                    // InternalReflex.g:2246:3: ( 'uint8' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT8_UEnumLiteralDeclaration_4()); 
                    }
                    // InternalReflex.g:2247:3: ( 'uint8' )
                    // InternalReflex.g:2247:4: 'uint8'
                    {
                    match(input,76,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT8_UEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReflex.g:2251:2: ( ( 'int16' ) )
                    {
                    // InternalReflex.g:2251:2: ( ( 'int16' ) )
                    // InternalReflex.g:2252:3: ( 'int16' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT16EnumLiteralDeclaration_5()); 
                    }
                    // InternalReflex.g:2253:3: ( 'int16' )
                    // InternalReflex.g:2253:4: 'int16'
                    {
                    match(input,77,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT16EnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalReflex.g:2257:2: ( ( 'uint16' ) )
                    {
                    // InternalReflex.g:2257:2: ( ( 'uint16' ) )
                    // InternalReflex.g:2258:3: ( 'uint16' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT16_UEnumLiteralDeclaration_6()); 
                    }
                    // InternalReflex.g:2259:3: ( 'uint16' )
                    // InternalReflex.g:2259:4: 'uint16'
                    {
                    match(input,78,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT16_UEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalReflex.g:2263:2: ( ( 'int32' ) )
                    {
                    // InternalReflex.g:2263:2: ( ( 'int32' ) )
                    // InternalReflex.g:2264:3: ( 'int32' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT32EnumLiteralDeclaration_7()); 
                    }
                    // InternalReflex.g:2265:3: ( 'int32' )
                    // InternalReflex.g:2265:4: 'int32'
                    {
                    match(input,79,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT32EnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalReflex.g:2269:2: ( ( 'uint32' ) )
                    {
                    // InternalReflex.g:2269:2: ( ( 'uint32' ) )
                    // InternalReflex.g:2270:3: ( 'uint32' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT32_UEnumLiteralDeclaration_8()); 
                    }
                    // InternalReflex.g:2271:3: ( 'uint32' )
                    // InternalReflex.g:2271:4: 'uint32'
                    {
                    match(input,80,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT32_UEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalReflex.g:2275:2: ( ( 'int64' ) )
                    {
                    // InternalReflex.g:2275:2: ( ( 'int64' ) )
                    // InternalReflex.g:2276:3: ( 'int64' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT64EnumLiteralDeclaration_9()); 
                    }
                    // InternalReflex.g:2277:3: ( 'int64' )
                    // InternalReflex.g:2277:4: 'int64'
                    {
                    match(input,81,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT64EnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalReflex.g:2281:2: ( ( 'uint64' ) )
                    {
                    // InternalReflex.g:2281:2: ( ( 'uint64' ) )
                    // InternalReflex.g:2282:3: ( 'uint64' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getINT64_UEnumLiteralDeclaration_10()); 
                    }
                    // InternalReflex.g:2283:3: ( 'uint64' )
                    // InternalReflex.g:2283:4: 'uint64'
                    {
                    match(input,82,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getINT64_UEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalReflex.g:2287:2: ( ( 'bool' ) )
                    {
                    // InternalReflex.g:2287:2: ( ( 'bool' ) )
                    // InternalReflex.g:2288:3: ( 'bool' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getBOOLEnumLiteralDeclaration_11()); 
                    }
                    // InternalReflex.g:2289:3: ( 'bool' )
                    // InternalReflex.g:2289:4: 'bool'
                    {
                    match(input,83,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getBOOLEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalReflex.g:2293:2: ( ( 'time' ) )
                    {
                    // InternalReflex.g:2293:2: ( ( 'time' ) )
                    // InternalReflex.g:2294:3: ( 'time' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getTIMEEnumLiteralDeclaration_12()); 
                    }
                    // InternalReflex.g:2295:3: ( 'time' )
                    // InternalReflex.g:2295:4: 'time'
                    {
                    match(input,84,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getTIMEEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // InternalReflex.g:2303:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2307:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // InternalReflex.g:2308:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Program__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // InternalReflex.g:2315:1: rule__Program__Group__0__Impl : ( ( rule__Program__Group_0__0 )* ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2319:1: ( ( ( rule__Program__Group_0__0 )* ) )
            // InternalReflex.g:2320:1: ( ( rule__Program__Group_0__0 )* )
            {
            // InternalReflex.g:2320:1: ( ( rule__Program__Group_0__0 )* )
            // InternalReflex.g:2321:2: ( rule__Program__Group_0__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getGroup_0()); 
            }
            // InternalReflex.g:2322:2: ( rule__Program__Group_0__0 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==88) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalReflex.g:2322:3: rule__Program__Group_0__0
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Program__Group_0__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // InternalReflex.g:2330:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2334:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // InternalReflex.g:2335:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Program__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // InternalReflex.g:2342:1: rule__Program__Group__1__Impl : ( 'program' ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2346:1: ( ( 'program' ) )
            // InternalReflex.g:2347:1: ( 'program' )
            {
            // InternalReflex.g:2347:1: ( 'program' )
            // InternalReflex.g:2348:2: 'program'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getProgramKeyword_1()); 
            }
            match(input,85,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getProgramKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // InternalReflex.g:2357:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2361:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // InternalReflex.g:2362:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // InternalReflex.g:2369:1: rule__Program__Group__2__Impl : ( ( rule__Program__NameAssignment_2 ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2373:1: ( ( ( rule__Program__NameAssignment_2 ) ) )
            // InternalReflex.g:2374:1: ( ( rule__Program__NameAssignment_2 ) )
            {
            // InternalReflex.g:2374:1: ( ( rule__Program__NameAssignment_2 ) )
            // InternalReflex.g:2375:2: ( rule__Program__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getNameAssignment_2()); 
            }
            // InternalReflex.g:2376:2: ( rule__Program__NameAssignment_2 )
            // InternalReflex.g:2376:3: rule__Program__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Program__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // InternalReflex.g:2384:1: rule__Program__Group__3 : rule__Program__Group__3__Impl rule__Program__Group__4 ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2388:1: ( rule__Program__Group__3__Impl rule__Program__Group__4 )
            // InternalReflex.g:2389:2: rule__Program__Group__3__Impl rule__Program__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__Program__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // InternalReflex.g:2396:1: rule__Program__Group__3__Impl : ( '{' ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2400:1: ( ( '{' ) )
            // InternalReflex.g:2401:1: ( '{' )
            {
            // InternalReflex.g:2401:1: ( '{' )
            // InternalReflex.g:2402:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__Program__Group__4"
    // InternalReflex.g:2411:1: rule__Program__Group__4 : rule__Program__Group__4__Impl rule__Program__Group__5 ;
    public final void rule__Program__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2415:1: ( rule__Program__Group__4__Impl rule__Program__Group__5 )
            // InternalReflex.g:2416:2: rule__Program__Group__4__Impl rule__Program__Group__5
            {
            pushFollow(FOLLOW_7);
            rule__Program__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4"


    // $ANTLR start "rule__Program__Group__4__Impl"
    // InternalReflex.g:2423:1: rule__Program__Group__4__Impl : ( ( rule__Program__TicksAssignment_4 )? ) ;
    public final void rule__Program__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2427:1: ( ( ( rule__Program__TicksAssignment_4 )? ) )
            // InternalReflex.g:2428:1: ( ( rule__Program__TicksAssignment_4 )? )
            {
            // InternalReflex.g:2428:1: ( ( rule__Program__TicksAssignment_4 )? )
            // InternalReflex.g:2429:2: ( rule__Program__TicksAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getTicksAssignment_4()); 
            }
            // InternalReflex.g:2430:2: ( rule__Program__TicksAssignment_4 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==90) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalReflex.g:2430:3: rule__Program__TicksAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Program__TicksAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getTicksAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4__Impl"


    // $ANTLR start "rule__Program__Group__5"
    // InternalReflex.g:2438:1: rule__Program__Group__5 : rule__Program__Group__5__Impl rule__Program__Group__6 ;
    public final void rule__Program__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2442:1: ( rule__Program__Group__5__Impl rule__Program__Group__6 )
            // InternalReflex.g:2443:2: rule__Program__Group__5__Impl rule__Program__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__Program__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__5"


    // $ANTLR start "rule__Program__Group__5__Impl"
    // InternalReflex.g:2450:1: rule__Program__Group__5__Impl : ( ( rule__Program__Alternatives_5 )* ) ;
    public final void rule__Program__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2454:1: ( ( ( rule__Program__Alternatives_5 )* ) )
            // InternalReflex.g:2455:1: ( ( rule__Program__Alternatives_5 )* )
            {
            // InternalReflex.g:2455:1: ( ( rule__Program__Alternatives_5 )* )
            // InternalReflex.g:2456:2: ( rule__Program__Alternatives_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getAlternatives_5()); 
            }
            // InternalReflex.g:2457:2: ( rule__Program__Alternatives_5 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( ((LA28_0>=39 && LA28_0<=40)||(LA28_0>=72 && LA28_0<=84)||LA28_0==88||LA28_0==92||(LA28_0>=102 && LA28_0<=103)) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalReflex.g:2457:3: rule__Program__Alternatives_5
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__Program__Alternatives_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__5__Impl"


    // $ANTLR start "rule__Program__Group__6"
    // InternalReflex.g:2465:1: rule__Program__Group__6 : rule__Program__Group__6__Impl ;
    public final void rule__Program__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2469:1: ( rule__Program__Group__6__Impl )
            // InternalReflex.g:2470:2: rule__Program__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__6"


    // $ANTLR start "rule__Program__Group__6__Impl"
    // InternalReflex.g:2476:1: rule__Program__Group__6__Impl : ( '}' ) ;
    public final void rule__Program__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2480:1: ( ( '}' ) )
            // InternalReflex.g:2481:1: ( '}' )
            {
            // InternalReflex.g:2481:1: ( '}' )
            // InternalReflex.g:2482:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__6__Impl"


    // $ANTLR start "rule__Program__Group_0__0"
    // InternalReflex.g:2492:1: rule__Program__Group_0__0 : rule__Program__Group_0__0__Impl rule__Program__Group_0__1 ;
    public final void rule__Program__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2496:1: ( rule__Program__Group_0__0__Impl rule__Program__Group_0__1 )
            // InternalReflex.g:2497:2: rule__Program__Group_0__0__Impl rule__Program__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Program__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group_0__0"


    // $ANTLR start "rule__Program__Group_0__0__Impl"
    // InternalReflex.g:2504:1: rule__Program__Group_0__0__Impl : ( '[' ) ;
    public final void rule__Program__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2508:1: ( ( '[' ) )
            // InternalReflex.g:2509:1: ( '[' )
            {
            // InternalReflex.g:2509:1: ( '[' )
            // InternalReflex.g:2510:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getLeftSquareBracketKeyword_0_0()); 
            }
            match(input,88,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getLeftSquareBracketKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group_0__0__Impl"


    // $ANTLR start "rule__Program__Group_0__1"
    // InternalReflex.g:2519:1: rule__Program__Group_0__1 : rule__Program__Group_0__1__Impl rule__Program__Group_0__2 ;
    public final void rule__Program__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2523:1: ( rule__Program__Group_0__1__Impl rule__Program__Group_0__2 )
            // InternalReflex.g:2524:2: rule__Program__Group_0__1__Impl rule__Program__Group_0__2
            {
            pushFollow(FOLLOW_9);
            rule__Program__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group_0__1"


    // $ANTLR start "rule__Program__Group_0__1__Impl"
    // InternalReflex.g:2531:1: rule__Program__Group_0__1__Impl : ( ( rule__Program__AnnotationsAssignment_0_1 ) ) ;
    public final void rule__Program__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2535:1: ( ( ( rule__Program__AnnotationsAssignment_0_1 ) ) )
            // InternalReflex.g:2536:1: ( ( rule__Program__AnnotationsAssignment_0_1 ) )
            {
            // InternalReflex.g:2536:1: ( ( rule__Program__AnnotationsAssignment_0_1 ) )
            // InternalReflex.g:2537:2: ( rule__Program__AnnotationsAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getAnnotationsAssignment_0_1()); 
            }
            // InternalReflex.g:2538:2: ( rule__Program__AnnotationsAssignment_0_1 )
            // InternalReflex.g:2538:3: rule__Program__AnnotationsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Program__AnnotationsAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getAnnotationsAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group_0__1__Impl"


    // $ANTLR start "rule__Program__Group_0__2"
    // InternalReflex.g:2546:1: rule__Program__Group_0__2 : rule__Program__Group_0__2__Impl ;
    public final void rule__Program__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2550:1: ( rule__Program__Group_0__2__Impl )
            // InternalReflex.g:2551:2: rule__Program__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group_0__2"


    // $ANTLR start "rule__Program__Group_0__2__Impl"
    // InternalReflex.g:2557:1: rule__Program__Group_0__2__Impl : ( ']' ) ;
    public final void rule__Program__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2561:1: ( ( ']' ) )
            // InternalReflex.g:2562:1: ( ']' )
            {
            // InternalReflex.g:2562:1: ( ']' )
            // InternalReflex.g:2563:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getRightSquareBracketKeyword_0_2()); 
            }
            match(input,89,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getRightSquareBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group_0__2__Impl"


    // $ANTLR start "rule__Tact__Group__0"
    // InternalReflex.g:2573:1: rule__Tact__Group__0 : rule__Tact__Group__0__Impl rule__Tact__Group__1 ;
    public final void rule__Tact__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2577:1: ( rule__Tact__Group__0__Impl rule__Tact__Group__1 )
            // InternalReflex.g:2578:2: rule__Tact__Group__0__Impl rule__Tact__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__Tact__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tact__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__Group__0"


    // $ANTLR start "rule__Tact__Group__0__Impl"
    // InternalReflex.g:2585:1: rule__Tact__Group__0__Impl : ( 'clock' ) ;
    public final void rule__Tact__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2589:1: ( ( 'clock' ) )
            // InternalReflex.g:2590:1: ( 'clock' )
            {
            // InternalReflex.g:2590:1: ( 'clock' )
            // InternalReflex.g:2591:2: 'clock'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTactAccess().getClockKeyword_0()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTactAccess().getClockKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__Group__0__Impl"


    // $ANTLR start "rule__Tact__Group__1"
    // InternalReflex.g:2600:1: rule__Tact__Group__1 : rule__Tact__Group__1__Impl rule__Tact__Group__2 ;
    public final void rule__Tact__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2604:1: ( rule__Tact__Group__1__Impl rule__Tact__Group__2 )
            // InternalReflex.g:2605:2: rule__Tact__Group__1__Impl rule__Tact__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__Tact__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tact__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__Group__1"


    // $ANTLR start "rule__Tact__Group__1__Impl"
    // InternalReflex.g:2612:1: rule__Tact__Group__1__Impl : ( ( rule__Tact__ValueAssignment_1 ) ) ;
    public final void rule__Tact__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2616:1: ( ( ( rule__Tact__ValueAssignment_1 ) ) )
            // InternalReflex.g:2617:1: ( ( rule__Tact__ValueAssignment_1 ) )
            {
            // InternalReflex.g:2617:1: ( ( rule__Tact__ValueAssignment_1 ) )
            // InternalReflex.g:2618:2: ( rule__Tact__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTactAccess().getValueAssignment_1()); 
            }
            // InternalReflex.g:2619:2: ( rule__Tact__ValueAssignment_1 )
            // InternalReflex.g:2619:3: rule__Tact__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Tact__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTactAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__Group__1__Impl"


    // $ANTLR start "rule__Tact__Group__2"
    // InternalReflex.g:2627:1: rule__Tact__Group__2 : rule__Tact__Group__2__Impl ;
    public final void rule__Tact__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2631:1: ( rule__Tact__Group__2__Impl )
            // InternalReflex.g:2632:2: rule__Tact__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tact__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__Group__2"


    // $ANTLR start "rule__Tact__Group__2__Impl"
    // InternalReflex.g:2638:1: rule__Tact__Group__2__Impl : ( ';' ) ;
    public final void rule__Tact__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2642:1: ( ( ';' ) )
            // InternalReflex.g:2643:1: ( ';' )
            {
            // InternalReflex.g:2643:1: ( ';' )
            // InternalReflex.g:2644:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTactAccess().getSemicolonKeyword_2()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTactAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__Group__2__Impl"


    // $ANTLR start "rule__Process__Group__0"
    // InternalReflex.g:2654:1: rule__Process__Group__0 : rule__Process__Group__0__Impl rule__Process__Group__1 ;
    public final void rule__Process__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2658:1: ( rule__Process__Group__0__Impl rule__Process__Group__1 )
            // InternalReflex.g:2659:2: rule__Process__Group__0__Impl rule__Process__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__Process__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__0"


    // $ANTLR start "rule__Process__Group__0__Impl"
    // InternalReflex.g:2666:1: rule__Process__Group__0__Impl : ( ( rule__Process__Group_0__0 )* ) ;
    public final void rule__Process__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2670:1: ( ( ( rule__Process__Group_0__0 )* ) )
            // InternalReflex.g:2671:1: ( ( rule__Process__Group_0__0 )* )
            {
            // InternalReflex.g:2671:1: ( ( rule__Process__Group_0__0 )* )
            // InternalReflex.g:2672:2: ( rule__Process__Group_0__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getGroup_0()); 
            }
            // InternalReflex.g:2673:2: ( rule__Process__Group_0__0 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==88) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalReflex.g:2673:3: rule__Process__Group_0__0
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Process__Group_0__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__0__Impl"


    // $ANTLR start "rule__Process__Group__1"
    // InternalReflex.g:2681:1: rule__Process__Group__1 : rule__Process__Group__1__Impl rule__Process__Group__2 ;
    public final void rule__Process__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2685:1: ( rule__Process__Group__1__Impl rule__Process__Group__2 )
            // InternalReflex.g:2686:2: rule__Process__Group__1__Impl rule__Process__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Process__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__1"


    // $ANTLR start "rule__Process__Group__1__Impl"
    // InternalReflex.g:2693:1: rule__Process__Group__1__Impl : ( 'process' ) ;
    public final void rule__Process__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2697:1: ( ( 'process' ) )
            // InternalReflex.g:2698:1: ( 'process' )
            {
            // InternalReflex.g:2698:1: ( 'process' )
            // InternalReflex.g:2699:2: 'process'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getProcessKeyword_1()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getProcessKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__1__Impl"


    // $ANTLR start "rule__Process__Group__2"
    // InternalReflex.g:2708:1: rule__Process__Group__2 : rule__Process__Group__2__Impl rule__Process__Group__3 ;
    public final void rule__Process__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2712:1: ( rule__Process__Group__2__Impl rule__Process__Group__3 )
            // InternalReflex.g:2713:2: rule__Process__Group__2__Impl rule__Process__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Process__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__2"


    // $ANTLR start "rule__Process__Group__2__Impl"
    // InternalReflex.g:2720:1: rule__Process__Group__2__Impl : ( ( rule__Process__NameAssignment_2 ) ) ;
    public final void rule__Process__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2724:1: ( ( ( rule__Process__NameAssignment_2 ) ) )
            // InternalReflex.g:2725:1: ( ( rule__Process__NameAssignment_2 ) )
            {
            // InternalReflex.g:2725:1: ( ( rule__Process__NameAssignment_2 ) )
            // InternalReflex.g:2726:2: ( rule__Process__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getNameAssignment_2()); 
            }
            // InternalReflex.g:2727:2: ( rule__Process__NameAssignment_2 )
            // InternalReflex.g:2727:3: rule__Process__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Process__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__2__Impl"


    // $ANTLR start "rule__Process__Group__3"
    // InternalReflex.g:2735:1: rule__Process__Group__3 : rule__Process__Group__3__Impl rule__Process__Group__4 ;
    public final void rule__Process__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2739:1: ( rule__Process__Group__3__Impl rule__Process__Group__4 )
            // InternalReflex.g:2740:2: rule__Process__Group__3__Impl rule__Process__Group__4
            {
            pushFollow(FOLLOW_13);
            rule__Process__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__3"


    // $ANTLR start "rule__Process__Group__3__Impl"
    // InternalReflex.g:2747:1: rule__Process__Group__3__Impl : ( '{' ) ;
    public final void rule__Process__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2751:1: ( ( '{' ) )
            // InternalReflex.g:2752:1: ( '{' )
            {
            // InternalReflex.g:2752:1: ( '{' )
            // InternalReflex.g:2753:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__3__Impl"


    // $ANTLR start "rule__Process__Group__4"
    // InternalReflex.g:2762:1: rule__Process__Group__4 : rule__Process__Group__4__Impl rule__Process__Group__5 ;
    public final void rule__Process__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2766:1: ( rule__Process__Group__4__Impl rule__Process__Group__5 )
            // InternalReflex.g:2767:2: rule__Process__Group__4__Impl rule__Process__Group__5
            {
            pushFollow(FOLLOW_13);
            rule__Process__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__4"


    // $ANTLR start "rule__Process__Group__4__Impl"
    // InternalReflex.g:2774:1: rule__Process__Group__4__Impl : ( ( rule__Process__Group_4__0 )* ) ;
    public final void rule__Process__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2778:1: ( ( ( rule__Process__Group_4__0 )* ) )
            // InternalReflex.g:2779:1: ( ( rule__Process__Group_4__0 )* )
            {
            // InternalReflex.g:2779:1: ( ( rule__Process__Group_4__0 )* )
            // InternalReflex.g:2780:2: ( rule__Process__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getGroup_4()); 
            }
            // InternalReflex.g:2781:2: ( rule__Process__Group_4__0 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( ((LA30_0>=72 && LA30_0<=84)||LA30_0==96) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalReflex.g:2781:3: rule__Process__Group_4__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Process__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__4__Impl"


    // $ANTLR start "rule__Process__Group__5"
    // InternalReflex.g:2789:1: rule__Process__Group__5 : rule__Process__Group__5__Impl rule__Process__Group__6 ;
    public final void rule__Process__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2793:1: ( rule__Process__Group__5__Impl rule__Process__Group__6 )
            // InternalReflex.g:2794:2: rule__Process__Group__5__Impl rule__Process__Group__6
            {
            pushFollow(FOLLOW_13);
            rule__Process__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__5"


    // $ANTLR start "rule__Process__Group__5__Impl"
    // InternalReflex.g:2801:1: rule__Process__Group__5__Impl : ( ( rule__Process__StatesAssignment_5 )* ) ;
    public final void rule__Process__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2805:1: ( ( ( rule__Process__StatesAssignment_5 )* ) )
            // InternalReflex.g:2806:1: ( ( rule__Process__StatesAssignment_5 )* )
            {
            // InternalReflex.g:2806:1: ( ( rule__Process__StatesAssignment_5 )* )
            // InternalReflex.g:2807:2: ( rule__Process__StatesAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getStatesAssignment_5()); 
            }
            // InternalReflex.g:2808:2: ( rule__Process__StatesAssignment_5 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==88||LA31_0==93) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalReflex.g:2808:3: rule__Process__StatesAssignment_5
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Process__StatesAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getStatesAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__5__Impl"


    // $ANTLR start "rule__Process__Group__6"
    // InternalReflex.g:2816:1: rule__Process__Group__6 : rule__Process__Group__6__Impl ;
    public final void rule__Process__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2820:1: ( rule__Process__Group__6__Impl )
            // InternalReflex.g:2821:2: rule__Process__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Process__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__6"


    // $ANTLR start "rule__Process__Group__6__Impl"
    // InternalReflex.g:2827:1: rule__Process__Group__6__Impl : ( '}' ) ;
    public final void rule__Process__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2831:1: ( ( '}' ) )
            // InternalReflex.g:2832:1: ( '}' )
            {
            // InternalReflex.g:2832:1: ( '}' )
            // InternalReflex.g:2833:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group__6__Impl"


    // $ANTLR start "rule__Process__Group_0__0"
    // InternalReflex.g:2843:1: rule__Process__Group_0__0 : rule__Process__Group_0__0__Impl rule__Process__Group_0__1 ;
    public final void rule__Process__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2847:1: ( rule__Process__Group_0__0__Impl rule__Process__Group_0__1 )
            // InternalReflex.g:2848:2: rule__Process__Group_0__0__Impl rule__Process__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Process__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_0__0"


    // $ANTLR start "rule__Process__Group_0__0__Impl"
    // InternalReflex.g:2855:1: rule__Process__Group_0__0__Impl : ( '[' ) ;
    public final void rule__Process__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2859:1: ( ( '[' ) )
            // InternalReflex.g:2860:1: ( '[' )
            {
            // InternalReflex.g:2860:1: ( '[' )
            // InternalReflex.g:2861:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getLeftSquareBracketKeyword_0_0()); 
            }
            match(input,88,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getLeftSquareBracketKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_0__0__Impl"


    // $ANTLR start "rule__Process__Group_0__1"
    // InternalReflex.g:2870:1: rule__Process__Group_0__1 : rule__Process__Group_0__1__Impl rule__Process__Group_0__2 ;
    public final void rule__Process__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2874:1: ( rule__Process__Group_0__1__Impl rule__Process__Group_0__2 )
            // InternalReflex.g:2875:2: rule__Process__Group_0__1__Impl rule__Process__Group_0__2
            {
            pushFollow(FOLLOW_9);
            rule__Process__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_0__1"


    // $ANTLR start "rule__Process__Group_0__1__Impl"
    // InternalReflex.g:2882:1: rule__Process__Group_0__1__Impl : ( ( rule__Process__AnnotationsAssignment_0_1 ) ) ;
    public final void rule__Process__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2886:1: ( ( ( rule__Process__AnnotationsAssignment_0_1 ) ) )
            // InternalReflex.g:2887:1: ( ( rule__Process__AnnotationsAssignment_0_1 ) )
            {
            // InternalReflex.g:2887:1: ( ( rule__Process__AnnotationsAssignment_0_1 ) )
            // InternalReflex.g:2888:2: ( rule__Process__AnnotationsAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getAnnotationsAssignment_0_1()); 
            }
            // InternalReflex.g:2889:2: ( rule__Process__AnnotationsAssignment_0_1 )
            // InternalReflex.g:2889:3: rule__Process__AnnotationsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Process__AnnotationsAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getAnnotationsAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_0__1__Impl"


    // $ANTLR start "rule__Process__Group_0__2"
    // InternalReflex.g:2897:1: rule__Process__Group_0__2 : rule__Process__Group_0__2__Impl ;
    public final void rule__Process__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2901:1: ( rule__Process__Group_0__2__Impl )
            // InternalReflex.g:2902:2: rule__Process__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Process__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_0__2"


    // $ANTLR start "rule__Process__Group_0__2__Impl"
    // InternalReflex.g:2908:1: rule__Process__Group_0__2__Impl : ( ']' ) ;
    public final void rule__Process__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2912:1: ( ( ']' ) )
            // InternalReflex.g:2913:1: ( ']' )
            {
            // InternalReflex.g:2913:1: ( ']' )
            // InternalReflex.g:2914:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getRightSquareBracketKeyword_0_2()); 
            }
            match(input,89,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getRightSquareBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_0__2__Impl"


    // $ANTLR start "rule__Process__Group_4__0"
    // InternalReflex.g:2924:1: rule__Process__Group_4__0 : rule__Process__Group_4__0__Impl rule__Process__Group_4__1 ;
    public final void rule__Process__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2928:1: ( rule__Process__Group_4__0__Impl rule__Process__Group_4__1 )
            // InternalReflex.g:2929:2: rule__Process__Group_4__0__Impl rule__Process__Group_4__1
            {
            pushFollow(FOLLOW_11);
            rule__Process__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Process__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_4__0"


    // $ANTLR start "rule__Process__Group_4__0__Impl"
    // InternalReflex.g:2936:1: rule__Process__Group_4__0__Impl : ( ( rule__Process__Alternatives_4_0 ) ) ;
    public final void rule__Process__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2940:1: ( ( ( rule__Process__Alternatives_4_0 ) ) )
            // InternalReflex.g:2941:1: ( ( rule__Process__Alternatives_4_0 ) )
            {
            // InternalReflex.g:2941:1: ( ( rule__Process__Alternatives_4_0 ) )
            // InternalReflex.g:2942:2: ( rule__Process__Alternatives_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getAlternatives_4_0()); 
            }
            // InternalReflex.g:2943:2: ( rule__Process__Alternatives_4_0 )
            // InternalReflex.g:2943:3: rule__Process__Alternatives_4_0
            {
            pushFollow(FOLLOW_2);
            rule__Process__Alternatives_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getAlternatives_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_4__0__Impl"


    // $ANTLR start "rule__Process__Group_4__1"
    // InternalReflex.g:2951:1: rule__Process__Group_4__1 : rule__Process__Group_4__1__Impl ;
    public final void rule__Process__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2955:1: ( rule__Process__Group_4__1__Impl )
            // InternalReflex.g:2956:2: rule__Process__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Process__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_4__1"


    // $ANTLR start "rule__Process__Group_4__1__Impl"
    // InternalReflex.g:2962:1: rule__Process__Group_4__1__Impl : ( ';' ) ;
    public final void rule__Process__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2966:1: ( ( ';' ) )
            // InternalReflex.g:2967:1: ( ';' )
            {
            // InternalReflex.g:2967:1: ( ';' )
            // InternalReflex.g:2968:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getSemicolonKeyword_4_1()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getSemicolonKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__Group_4__1__Impl"


    // $ANTLR start "rule__State__Group__0"
    // InternalReflex.g:2978:1: rule__State__Group__0 : rule__State__Group__0__Impl rule__State__Group__1 ;
    public final void rule__State__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2982:1: ( rule__State__Group__0__Impl rule__State__Group__1 )
            // InternalReflex.g:2983:2: rule__State__Group__0__Impl rule__State__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__State__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__0"


    // $ANTLR start "rule__State__Group__0__Impl"
    // InternalReflex.g:2990:1: rule__State__Group__0__Impl : ( ( rule__State__Group_0__0 )* ) ;
    public final void rule__State__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:2994:1: ( ( ( rule__State__Group_0__0 )* ) )
            // InternalReflex.g:2995:1: ( ( rule__State__Group_0__0 )* )
            {
            // InternalReflex.g:2995:1: ( ( rule__State__Group_0__0 )* )
            // InternalReflex.g:2996:2: ( rule__State__Group_0__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getGroup_0()); 
            }
            // InternalReflex.g:2997:2: ( rule__State__Group_0__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==88) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalReflex.g:2997:3: rule__State__Group_0__0
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__State__Group_0__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__0__Impl"


    // $ANTLR start "rule__State__Group__1"
    // InternalReflex.g:3005:1: rule__State__Group__1 : rule__State__Group__1__Impl rule__State__Group__2 ;
    public final void rule__State__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3009:1: ( rule__State__Group__1__Impl rule__State__Group__2 )
            // InternalReflex.g:3010:2: rule__State__Group__1__Impl rule__State__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__State__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__1"


    // $ANTLR start "rule__State__Group__1__Impl"
    // InternalReflex.g:3017:1: rule__State__Group__1__Impl : ( 'state' ) ;
    public final void rule__State__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3021:1: ( ( 'state' ) )
            // InternalReflex.g:3022:1: ( 'state' )
            {
            // InternalReflex.g:3022:1: ( 'state' )
            // InternalReflex.g:3023:2: 'state'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getStateKeyword_1()); 
            }
            match(input,93,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getStateKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__1__Impl"


    // $ANTLR start "rule__State__Group__2"
    // InternalReflex.g:3032:1: rule__State__Group__2 : rule__State__Group__2__Impl rule__State__Group__3 ;
    public final void rule__State__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3036:1: ( rule__State__Group__2__Impl rule__State__Group__3 )
            // InternalReflex.g:3037:2: rule__State__Group__2__Impl rule__State__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__State__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__2"


    // $ANTLR start "rule__State__Group__2__Impl"
    // InternalReflex.g:3044:1: rule__State__Group__2__Impl : ( ( rule__State__NameAssignment_2 ) ) ;
    public final void rule__State__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3048:1: ( ( ( rule__State__NameAssignment_2 ) ) )
            // InternalReflex.g:3049:1: ( ( rule__State__NameAssignment_2 ) )
            {
            // InternalReflex.g:3049:1: ( ( rule__State__NameAssignment_2 ) )
            // InternalReflex.g:3050:2: ( rule__State__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getNameAssignment_2()); 
            }
            // InternalReflex.g:3051:2: ( rule__State__NameAssignment_2 )
            // InternalReflex.g:3051:3: rule__State__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__State__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__2__Impl"


    // $ANTLR start "rule__State__Group__3"
    // InternalReflex.g:3059:1: rule__State__Group__3 : rule__State__Group__3__Impl rule__State__Group__4 ;
    public final void rule__State__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3063:1: ( rule__State__Group__3__Impl rule__State__Group__4 )
            // InternalReflex.g:3064:2: rule__State__Group__3__Impl rule__State__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__State__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__3"


    // $ANTLR start "rule__State__Group__3__Impl"
    // InternalReflex.g:3071:1: rule__State__Group__3__Impl : ( ( rule__State__LoopedAssignment_3 )? ) ;
    public final void rule__State__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3075:1: ( ( ( rule__State__LoopedAssignment_3 )? ) )
            // InternalReflex.g:3076:1: ( ( rule__State__LoopedAssignment_3 )? )
            {
            // InternalReflex.g:3076:1: ( ( rule__State__LoopedAssignment_3 )? )
            // InternalReflex.g:3077:2: ( rule__State__LoopedAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getLoopedAssignment_3()); 
            }
            // InternalReflex.g:3078:2: ( rule__State__LoopedAssignment_3 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==115) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalReflex.g:3078:3: rule__State__LoopedAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__State__LoopedAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getLoopedAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__3__Impl"


    // $ANTLR start "rule__State__Group__4"
    // InternalReflex.g:3086:1: rule__State__Group__4 : rule__State__Group__4__Impl rule__State__Group__5 ;
    public final void rule__State__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3090:1: ( rule__State__Group__4__Impl rule__State__Group__5 )
            // InternalReflex.g:3091:2: rule__State__Group__4__Impl rule__State__Group__5
            {
            pushFollow(FOLLOW_18);
            rule__State__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__4"


    // $ANTLR start "rule__State__Group__4__Impl"
    // InternalReflex.g:3098:1: rule__State__Group__4__Impl : ( '{' ) ;
    public final void rule__State__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3102:1: ( ( '{' ) )
            // InternalReflex.g:3103:1: ( '{' )
            {
            // InternalReflex.g:3103:1: ( '{' )
            // InternalReflex.g:3104:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__4__Impl"


    // $ANTLR start "rule__State__Group__5"
    // InternalReflex.g:3113:1: rule__State__Group__5 : rule__State__Group__5__Impl rule__State__Group__6 ;
    public final void rule__State__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3117:1: ( rule__State__Group__5__Impl rule__State__Group__6 )
            // InternalReflex.g:3118:2: rule__State__Group__5__Impl rule__State__Group__6
            {
            pushFollow(FOLLOW_19);
            rule__State__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__5"


    // $ANTLR start "rule__State__Group__5__Impl"
    // InternalReflex.g:3125:1: rule__State__Group__5__Impl : ( ( rule__State__StateFunctionAssignment_5 ) ) ;
    public final void rule__State__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3129:1: ( ( ( rule__State__StateFunctionAssignment_5 ) ) )
            // InternalReflex.g:3130:1: ( ( rule__State__StateFunctionAssignment_5 ) )
            {
            // InternalReflex.g:3130:1: ( ( rule__State__StateFunctionAssignment_5 ) )
            // InternalReflex.g:3131:2: ( rule__State__StateFunctionAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getStateFunctionAssignment_5()); 
            }
            // InternalReflex.g:3132:2: ( rule__State__StateFunctionAssignment_5 )
            // InternalReflex.g:3132:3: rule__State__StateFunctionAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__State__StateFunctionAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getStateFunctionAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__5__Impl"


    // $ANTLR start "rule__State__Group__6"
    // InternalReflex.g:3140:1: rule__State__Group__6 : rule__State__Group__6__Impl rule__State__Group__7 ;
    public final void rule__State__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3144:1: ( rule__State__Group__6__Impl rule__State__Group__7 )
            // InternalReflex.g:3145:2: rule__State__Group__6__Impl rule__State__Group__7
            {
            pushFollow(FOLLOW_19);
            rule__State__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__6"


    // $ANTLR start "rule__State__Group__6__Impl"
    // InternalReflex.g:3152:1: rule__State__Group__6__Impl : ( ( rule__State__TimeoutFunctionAssignment_6 )? ) ;
    public final void rule__State__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3156:1: ( ( ( rule__State__TimeoutFunctionAssignment_6 )? ) )
            // InternalReflex.g:3157:1: ( ( rule__State__TimeoutFunctionAssignment_6 )? )
            {
            // InternalReflex.g:3157:1: ( ( rule__State__TimeoutFunctionAssignment_6 )? )
            // InternalReflex.g:3158:2: ( rule__State__TimeoutFunctionAssignment_6 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getTimeoutFunctionAssignment_6()); 
            }
            // InternalReflex.g:3159:2: ( rule__State__TimeoutFunctionAssignment_6 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==99) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalReflex.g:3159:3: rule__State__TimeoutFunctionAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__State__TimeoutFunctionAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getTimeoutFunctionAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__6__Impl"


    // $ANTLR start "rule__State__Group__7"
    // InternalReflex.g:3167:1: rule__State__Group__7 : rule__State__Group__7__Impl ;
    public final void rule__State__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3171:1: ( rule__State__Group__7__Impl )
            // InternalReflex.g:3172:2: rule__State__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__State__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__7"


    // $ANTLR start "rule__State__Group__7__Impl"
    // InternalReflex.g:3178:1: rule__State__Group__7__Impl : ( '}' ) ;
    public final void rule__State__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3182:1: ( ( '}' ) )
            // InternalReflex.g:3183:1: ( '}' )
            {
            // InternalReflex.g:3183:1: ( '}' )
            // InternalReflex.g:3184:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_7()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group__7__Impl"


    // $ANTLR start "rule__State__Group_0__0"
    // InternalReflex.g:3194:1: rule__State__Group_0__0 : rule__State__Group_0__0__Impl rule__State__Group_0__1 ;
    public final void rule__State__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3198:1: ( rule__State__Group_0__0__Impl rule__State__Group_0__1 )
            // InternalReflex.g:3199:2: rule__State__Group_0__0__Impl rule__State__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__State__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group_0__0"


    // $ANTLR start "rule__State__Group_0__0__Impl"
    // InternalReflex.g:3206:1: rule__State__Group_0__0__Impl : ( '[' ) ;
    public final void rule__State__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3210:1: ( ( '[' ) )
            // InternalReflex.g:3211:1: ( '[' )
            {
            // InternalReflex.g:3211:1: ( '[' )
            // InternalReflex.g:3212:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getLeftSquareBracketKeyword_0_0()); 
            }
            match(input,88,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getLeftSquareBracketKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group_0__0__Impl"


    // $ANTLR start "rule__State__Group_0__1"
    // InternalReflex.g:3221:1: rule__State__Group_0__1 : rule__State__Group_0__1__Impl rule__State__Group_0__2 ;
    public final void rule__State__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3225:1: ( rule__State__Group_0__1__Impl rule__State__Group_0__2 )
            // InternalReflex.g:3226:2: rule__State__Group_0__1__Impl rule__State__Group_0__2
            {
            pushFollow(FOLLOW_9);
            rule__State__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__State__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group_0__1"


    // $ANTLR start "rule__State__Group_0__1__Impl"
    // InternalReflex.g:3233:1: rule__State__Group_0__1__Impl : ( ( rule__State__AnnotationsAssignment_0_1 ) ) ;
    public final void rule__State__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3237:1: ( ( ( rule__State__AnnotationsAssignment_0_1 ) ) )
            // InternalReflex.g:3238:1: ( ( rule__State__AnnotationsAssignment_0_1 ) )
            {
            // InternalReflex.g:3238:1: ( ( rule__State__AnnotationsAssignment_0_1 ) )
            // InternalReflex.g:3239:2: ( rule__State__AnnotationsAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getAnnotationsAssignment_0_1()); 
            }
            // InternalReflex.g:3240:2: ( rule__State__AnnotationsAssignment_0_1 )
            // InternalReflex.g:3240:3: rule__State__AnnotationsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__State__AnnotationsAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getAnnotationsAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group_0__1__Impl"


    // $ANTLR start "rule__State__Group_0__2"
    // InternalReflex.g:3248:1: rule__State__Group_0__2 : rule__State__Group_0__2__Impl ;
    public final void rule__State__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3252:1: ( rule__State__Group_0__2__Impl )
            // InternalReflex.g:3253:2: rule__State__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__State__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group_0__2"


    // $ANTLR start "rule__State__Group_0__2__Impl"
    // InternalReflex.g:3259:1: rule__State__Group_0__2__Impl : ( ']' ) ;
    public final void rule__State__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3263:1: ( ( ']' ) )
            // InternalReflex.g:3264:1: ( ']' )
            {
            // InternalReflex.g:3264:1: ( ']' )
            // InternalReflex.g:3265:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getRightSquareBracketKeyword_0_2()); 
            }
            match(input,89,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getRightSquareBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__Group_0__2__Impl"


    // $ANTLR start "rule__Annotation__Group_0__0"
    // InternalReflex.g:3275:1: rule__Annotation__Group_0__0 : rule__Annotation__Group_0__0__Impl rule__Annotation__Group_0__1 ;
    public final void rule__Annotation__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3279:1: ( rule__Annotation__Group_0__0__Impl rule__Annotation__Group_0__1 )
            // InternalReflex.g:3280:2: rule__Annotation__Group_0__0__Impl rule__Annotation__Group_0__1
            {
            pushFollow(FOLLOW_20);
            rule__Annotation__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Annotation__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Group_0__0"


    // $ANTLR start "rule__Annotation__Group_0__0__Impl"
    // InternalReflex.g:3287:1: rule__Annotation__Group_0__0__Impl : ( ( rule__Annotation__KeyAssignment_0_0 ) ) ;
    public final void rule__Annotation__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3291:1: ( ( ( rule__Annotation__KeyAssignment_0_0 ) ) )
            // InternalReflex.g:3292:1: ( ( rule__Annotation__KeyAssignment_0_0 ) )
            {
            // InternalReflex.g:3292:1: ( ( rule__Annotation__KeyAssignment_0_0 ) )
            // InternalReflex.g:3293:2: ( rule__Annotation__KeyAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getKeyAssignment_0_0()); 
            }
            // InternalReflex.g:3294:2: ( rule__Annotation__KeyAssignment_0_0 )
            // InternalReflex.g:3294:3: rule__Annotation__KeyAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Annotation__KeyAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getKeyAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Group_0__0__Impl"


    // $ANTLR start "rule__Annotation__Group_0__1"
    // InternalReflex.g:3302:1: rule__Annotation__Group_0__1 : rule__Annotation__Group_0__1__Impl rule__Annotation__Group_0__2 ;
    public final void rule__Annotation__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3306:1: ( rule__Annotation__Group_0__1__Impl rule__Annotation__Group_0__2 )
            // InternalReflex.g:3307:2: rule__Annotation__Group_0__1__Impl rule__Annotation__Group_0__2
            {
            pushFollow(FOLLOW_21);
            rule__Annotation__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Annotation__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Group_0__1"


    // $ANTLR start "rule__Annotation__Group_0__1__Impl"
    // InternalReflex.g:3314:1: rule__Annotation__Group_0__1__Impl : ( ':' ) ;
    public final void rule__Annotation__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3318:1: ( ( ':' ) )
            // InternalReflex.g:3319:1: ( ':' )
            {
            // InternalReflex.g:3319:1: ( ':' )
            // InternalReflex.g:3320:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getColonKeyword_0_1()); 
            }
            match(input,94,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getColonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Group_0__1__Impl"


    // $ANTLR start "rule__Annotation__Group_0__2"
    // InternalReflex.g:3329:1: rule__Annotation__Group_0__2 : rule__Annotation__Group_0__2__Impl ;
    public final void rule__Annotation__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3333:1: ( rule__Annotation__Group_0__2__Impl )
            // InternalReflex.g:3334:2: rule__Annotation__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Annotation__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Group_0__2"


    // $ANTLR start "rule__Annotation__Group_0__2__Impl"
    // InternalReflex.g:3340:1: rule__Annotation__Group_0__2__Impl : ( ( rule__Annotation__ValueAssignment_0_2 ) ) ;
    public final void rule__Annotation__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3344:1: ( ( ( rule__Annotation__ValueAssignment_0_2 ) ) )
            // InternalReflex.g:3345:1: ( ( rule__Annotation__ValueAssignment_0_2 ) )
            {
            // InternalReflex.g:3345:1: ( ( rule__Annotation__ValueAssignment_0_2 ) )
            // InternalReflex.g:3346:2: ( rule__Annotation__ValueAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getValueAssignment_0_2()); 
            }
            // InternalReflex.g:3347:2: ( rule__Annotation__ValueAssignment_0_2 )
            // InternalReflex.g:3347:3: rule__Annotation__ValueAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Annotation__ValueAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getValueAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Group_0__2__Impl"


    // $ANTLR start "rule__AnnotationKey__Group_0__0"
    // InternalReflex.g:3356:1: rule__AnnotationKey__Group_0__0 : rule__AnnotationKey__Group_0__0__Impl rule__AnnotationKey__Group_0__1 ;
    public final void rule__AnnotationKey__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3360:1: ( rule__AnnotationKey__Group_0__0__Impl rule__AnnotationKey__Group_0__1 )
            // InternalReflex.g:3361:2: rule__AnnotationKey__Group_0__0__Impl rule__AnnotationKey__Group_0__1
            {
            pushFollow(FOLLOW_22);
            rule__AnnotationKey__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnnotationKey__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Group_0__0"


    // $ANTLR start "rule__AnnotationKey__Group_0__0__Impl"
    // InternalReflex.g:3368:1: rule__AnnotationKey__Group_0__0__Impl : ( RULE_ID ) ;
    public final void rule__AnnotationKey__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3372:1: ( ( RULE_ID ) )
            // InternalReflex.g:3373:1: ( RULE_ID )
            {
            // InternalReflex.g:3373:1: ( RULE_ID )
            // InternalReflex.g:3374:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationKeyAccess().getIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationKeyAccess().getIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Group_0__0__Impl"


    // $ANTLR start "rule__AnnotationKey__Group_0__1"
    // InternalReflex.g:3383:1: rule__AnnotationKey__Group_0__1 : rule__AnnotationKey__Group_0__1__Impl rule__AnnotationKey__Group_0__2 ;
    public final void rule__AnnotationKey__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3387:1: ( rule__AnnotationKey__Group_0__1__Impl rule__AnnotationKey__Group_0__2 )
            // InternalReflex.g:3388:2: rule__AnnotationKey__Group_0__1__Impl rule__AnnotationKey__Group_0__2
            {
            pushFollow(FOLLOW_5);
            rule__AnnotationKey__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnnotationKey__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Group_0__1"


    // $ANTLR start "rule__AnnotationKey__Group_0__1__Impl"
    // InternalReflex.g:3395:1: rule__AnnotationKey__Group_0__1__Impl : ( '.' ) ;
    public final void rule__AnnotationKey__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3399:1: ( ( '.' ) )
            // InternalReflex.g:3400:1: ( '.' )
            {
            // InternalReflex.g:3400:1: ( '.' )
            // InternalReflex.g:3401:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationKeyAccess().getFullStopKeyword_0_1()); 
            }
            match(input,95,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationKeyAccess().getFullStopKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Group_0__1__Impl"


    // $ANTLR start "rule__AnnotationKey__Group_0__2"
    // InternalReflex.g:3410:1: rule__AnnotationKey__Group_0__2 : rule__AnnotationKey__Group_0__2__Impl ;
    public final void rule__AnnotationKey__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3414:1: ( rule__AnnotationKey__Group_0__2__Impl )
            // InternalReflex.g:3415:2: rule__AnnotationKey__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnnotationKey__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Group_0__2"


    // $ANTLR start "rule__AnnotationKey__Group_0__2__Impl"
    // InternalReflex.g:3421:1: rule__AnnotationKey__Group_0__2__Impl : ( RULE_ID ) ;
    public final void rule__AnnotationKey__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3425:1: ( ( RULE_ID ) )
            // InternalReflex.g:3426:1: ( RULE_ID )
            {
            // InternalReflex.g:3426:1: ( RULE_ID )
            // InternalReflex.g:3427:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationKeyAccess().getIDTerminalRuleCall_0_2()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationKeyAccess().getIDTerminalRuleCall_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnnotationKey__Group_0__2__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group__0"
    // InternalReflex.g:3437:1: rule__ImportedVariableList__Group__0 : rule__ImportedVariableList__Group__0__Impl rule__ImportedVariableList__Group__1 ;
    public final void rule__ImportedVariableList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3441:1: ( rule__ImportedVariableList__Group__0__Impl rule__ImportedVariableList__Group__1 )
            // InternalReflex.g:3442:2: rule__ImportedVariableList__Group__0__Impl rule__ImportedVariableList__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedVariableList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__0"


    // $ANTLR start "rule__ImportedVariableList__Group__0__Impl"
    // InternalReflex.g:3449:1: rule__ImportedVariableList__Group__0__Impl : ( 'shared' ) ;
    public final void rule__ImportedVariableList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3453:1: ( ( 'shared' ) )
            // InternalReflex.g:3454:1: ( 'shared' )
            {
            // InternalReflex.g:3454:1: ( 'shared' )
            // InternalReflex.g:3455:2: 'shared'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getSharedKeyword_0()); 
            }
            match(input,96,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getSharedKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__0__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group__1"
    // InternalReflex.g:3464:1: rule__ImportedVariableList__Group__1 : rule__ImportedVariableList__Group__1__Impl rule__ImportedVariableList__Group__2 ;
    public final void rule__ImportedVariableList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3468:1: ( rule__ImportedVariableList__Group__1__Impl rule__ImportedVariableList__Group__2 )
            // InternalReflex.g:3469:2: rule__ImportedVariableList__Group__1__Impl rule__ImportedVariableList__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__ImportedVariableList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__1"


    // $ANTLR start "rule__ImportedVariableList__Group__1__Impl"
    // InternalReflex.g:3476:1: rule__ImportedVariableList__Group__1__Impl : ( ( rule__ImportedVariableList__Group_1__0 ) ) ;
    public final void rule__ImportedVariableList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3480:1: ( ( ( rule__ImportedVariableList__Group_1__0 ) ) )
            // InternalReflex.g:3481:1: ( ( rule__ImportedVariableList__Group_1__0 ) )
            {
            // InternalReflex.g:3481:1: ( ( rule__ImportedVariableList__Group_1__0 ) )
            // InternalReflex.g:3482:2: ( rule__ImportedVariableList__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getGroup_1()); 
            }
            // InternalReflex.g:3483:2: ( rule__ImportedVariableList__Group_1__0 )
            // InternalReflex.g:3483:3: rule__ImportedVariableList__Group_1__0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__1__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group__2"
    // InternalReflex.g:3491:1: rule__ImportedVariableList__Group__2 : rule__ImportedVariableList__Group__2__Impl rule__ImportedVariableList__Group__3 ;
    public final void rule__ImportedVariableList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3495:1: ( rule__ImportedVariableList__Group__2__Impl rule__ImportedVariableList__Group__3 )
            // InternalReflex.g:3496:2: rule__ImportedVariableList__Group__2__Impl rule__ImportedVariableList__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__ImportedVariableList__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__2"


    // $ANTLR start "rule__ImportedVariableList__Group__2__Impl"
    // InternalReflex.g:3503:1: rule__ImportedVariableList__Group__2__Impl : ( 'from' ) ;
    public final void rule__ImportedVariableList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3507:1: ( ( 'from' ) )
            // InternalReflex.g:3508:1: ( 'from' )
            {
            // InternalReflex.g:3508:1: ( 'from' )
            // InternalReflex.g:3509:2: 'from'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getFromKeyword_2()); 
            }
            match(input,97,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getFromKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__2__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group__3"
    // InternalReflex.g:3518:1: rule__ImportedVariableList__Group__3 : rule__ImportedVariableList__Group__3__Impl rule__ImportedVariableList__Group__4 ;
    public final void rule__ImportedVariableList__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3522:1: ( rule__ImportedVariableList__Group__3__Impl rule__ImportedVariableList__Group__4 )
            // InternalReflex.g:3523:2: rule__ImportedVariableList__Group__3__Impl rule__ImportedVariableList__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__ImportedVariableList__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__3"


    // $ANTLR start "rule__ImportedVariableList__Group__3__Impl"
    // InternalReflex.g:3530:1: rule__ImportedVariableList__Group__3__Impl : ( 'process' ) ;
    public final void rule__ImportedVariableList__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3534:1: ( ( 'process' ) )
            // InternalReflex.g:3535:1: ( 'process' )
            {
            // InternalReflex.g:3535:1: ( 'process' )
            // InternalReflex.g:3536:2: 'process'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getProcessKeyword_3()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getProcessKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__3__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group__4"
    // InternalReflex.g:3545:1: rule__ImportedVariableList__Group__4 : rule__ImportedVariableList__Group__4__Impl ;
    public final void rule__ImportedVariableList__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3549:1: ( rule__ImportedVariableList__Group__4__Impl )
            // InternalReflex.g:3550:2: rule__ImportedVariableList__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__4"


    // $ANTLR start "rule__ImportedVariableList__Group__4__Impl"
    // InternalReflex.g:3556:1: rule__ImportedVariableList__Group__4__Impl : ( ( rule__ImportedVariableList__ProcessAssignment_4 ) ) ;
    public final void rule__ImportedVariableList__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3560:1: ( ( ( rule__ImportedVariableList__ProcessAssignment_4 ) ) )
            // InternalReflex.g:3561:1: ( ( rule__ImportedVariableList__ProcessAssignment_4 ) )
            {
            // InternalReflex.g:3561:1: ( ( rule__ImportedVariableList__ProcessAssignment_4 ) )
            // InternalReflex.g:3562:2: ( rule__ImportedVariableList__ProcessAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getProcessAssignment_4()); 
            }
            // InternalReflex.g:3563:2: ( rule__ImportedVariableList__ProcessAssignment_4 )
            // InternalReflex.g:3563:3: rule__ImportedVariableList__ProcessAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__ProcessAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getProcessAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group__4__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group_1__0"
    // InternalReflex.g:3572:1: rule__ImportedVariableList__Group_1__0 : rule__ImportedVariableList__Group_1__0__Impl rule__ImportedVariableList__Group_1__1 ;
    public final void rule__ImportedVariableList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3576:1: ( rule__ImportedVariableList__Group_1__0__Impl rule__ImportedVariableList__Group_1__1 )
            // InternalReflex.g:3577:2: rule__ImportedVariableList__Group_1__0__Impl rule__ImportedVariableList__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ImportedVariableList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1__0"


    // $ANTLR start "rule__ImportedVariableList__Group_1__0__Impl"
    // InternalReflex.g:3584:1: rule__ImportedVariableList__Group_1__0__Impl : ( ( rule__ImportedVariableList__VariablesAssignment_1_0 ) ) ;
    public final void rule__ImportedVariableList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3588:1: ( ( ( rule__ImportedVariableList__VariablesAssignment_1_0 ) ) )
            // InternalReflex.g:3589:1: ( ( rule__ImportedVariableList__VariablesAssignment_1_0 ) )
            {
            // InternalReflex.g:3589:1: ( ( rule__ImportedVariableList__VariablesAssignment_1_0 ) )
            // InternalReflex.g:3590:2: ( rule__ImportedVariableList__VariablesAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_1_0()); 
            }
            // InternalReflex.g:3591:2: ( rule__ImportedVariableList__VariablesAssignment_1_0 )
            // InternalReflex.g:3591:3: rule__ImportedVariableList__VariablesAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__VariablesAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1__0__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group_1__1"
    // InternalReflex.g:3599:1: rule__ImportedVariableList__Group_1__1 : rule__ImportedVariableList__Group_1__1__Impl ;
    public final void rule__ImportedVariableList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3603:1: ( rule__ImportedVariableList__Group_1__1__Impl )
            // InternalReflex.g:3604:2: rule__ImportedVariableList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1__1"


    // $ANTLR start "rule__ImportedVariableList__Group_1__1__Impl"
    // InternalReflex.g:3610:1: rule__ImportedVariableList__Group_1__1__Impl : ( ( rule__ImportedVariableList__Group_1_1__0 )* ) ;
    public final void rule__ImportedVariableList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3614:1: ( ( ( rule__ImportedVariableList__Group_1_1__0 )* ) )
            // InternalReflex.g:3615:1: ( ( rule__ImportedVariableList__Group_1_1__0 )* )
            {
            // InternalReflex.g:3615:1: ( ( rule__ImportedVariableList__Group_1_1__0 )* )
            // InternalReflex.g:3616:2: ( rule__ImportedVariableList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getGroup_1_1()); 
            }
            // InternalReflex.g:3617:2: ( rule__ImportedVariableList__Group_1_1__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==98) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalReflex.g:3617:3: rule__ImportedVariableList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__ImportedVariableList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1__1__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group_1_1__0"
    // InternalReflex.g:3626:1: rule__ImportedVariableList__Group_1_1__0 : rule__ImportedVariableList__Group_1_1__0__Impl rule__ImportedVariableList__Group_1_1__1 ;
    public final void rule__ImportedVariableList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3630:1: ( rule__ImportedVariableList__Group_1_1__0__Impl rule__ImportedVariableList__Group_1_1__1 )
            // InternalReflex.g:3631:2: rule__ImportedVariableList__Group_1_1__0__Impl rule__ImportedVariableList__Group_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedVariableList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1_1__0"


    // $ANTLR start "rule__ImportedVariableList__Group_1_1__0__Impl"
    // InternalReflex.g:3638:1: rule__ImportedVariableList__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__ImportedVariableList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3642:1: ( ( ',' ) )
            // InternalReflex.g:3643:1: ( ',' )
            {
            // InternalReflex.g:3643:1: ( ',' )
            // InternalReflex.g:3644:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,98,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1_1__0__Impl"


    // $ANTLR start "rule__ImportedVariableList__Group_1_1__1"
    // InternalReflex.g:3653:1: rule__ImportedVariableList__Group_1_1__1 : rule__ImportedVariableList__Group_1_1__1__Impl ;
    public final void rule__ImportedVariableList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3657:1: ( rule__ImportedVariableList__Group_1_1__1__Impl )
            // InternalReflex.g:3658:2: rule__ImportedVariableList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1_1__1"


    // $ANTLR start "rule__ImportedVariableList__Group_1_1__1__Impl"
    // InternalReflex.g:3664:1: rule__ImportedVariableList__Group_1_1__1__Impl : ( ( rule__ImportedVariableList__VariablesAssignment_1_1_1 ) ) ;
    public final void rule__ImportedVariableList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3668:1: ( ( ( rule__ImportedVariableList__VariablesAssignment_1_1_1 ) ) )
            // InternalReflex.g:3669:1: ( ( rule__ImportedVariableList__VariablesAssignment_1_1_1 ) )
            {
            // InternalReflex.g:3669:1: ( ( rule__ImportedVariableList__VariablesAssignment_1_1_1 ) )
            // InternalReflex.g:3670:2: ( rule__ImportedVariableList__VariablesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_1_1_1()); 
            }
            // InternalReflex.g:3671:2: ( rule__ImportedVariableList__VariablesAssignment_1_1_1 )
            // InternalReflex.g:3671:3: rule__ImportedVariableList__VariablesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedVariableList__VariablesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__Group_1_1__1__Impl"


    // $ANTLR start "rule__ProcessVariable__Group__0"
    // InternalReflex.g:3680:1: rule__ProcessVariable__Group__0 : rule__ProcessVariable__Group__0__Impl rule__ProcessVariable__Group__1 ;
    public final void rule__ProcessVariable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3684:1: ( rule__ProcessVariable__Group__0__Impl rule__ProcessVariable__Group__1 )
            // InternalReflex.g:3685:2: rule__ProcessVariable__Group__0__Impl rule__ProcessVariable__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__ProcessVariable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProcessVariable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessVariable__Group__0"


    // $ANTLR start "rule__ProcessVariable__Group__0__Impl"
    // InternalReflex.g:3692:1: rule__ProcessVariable__Group__0__Impl : ( ( rule__ProcessVariable__Alternatives_0 ) ) ;
    public final void rule__ProcessVariable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3696:1: ( ( ( rule__ProcessVariable__Alternatives_0 ) ) )
            // InternalReflex.g:3697:1: ( ( rule__ProcessVariable__Alternatives_0 ) )
            {
            // InternalReflex.g:3697:1: ( ( rule__ProcessVariable__Alternatives_0 ) )
            // InternalReflex.g:3698:2: ( rule__ProcessVariable__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessVariableAccess().getAlternatives_0()); 
            }
            // InternalReflex.g:3699:2: ( rule__ProcessVariable__Alternatives_0 )
            // InternalReflex.g:3699:3: rule__ProcessVariable__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__ProcessVariable__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessVariableAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessVariable__Group__0__Impl"


    // $ANTLR start "rule__ProcessVariable__Group__1"
    // InternalReflex.g:3707:1: rule__ProcessVariable__Group__1 : rule__ProcessVariable__Group__1__Impl ;
    public final void rule__ProcessVariable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3711:1: ( rule__ProcessVariable__Group__1__Impl )
            // InternalReflex.g:3712:2: rule__ProcessVariable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProcessVariable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessVariable__Group__1"


    // $ANTLR start "rule__ProcessVariable__Group__1__Impl"
    // InternalReflex.g:3718:1: rule__ProcessVariable__Group__1__Impl : ( ( rule__ProcessVariable__SharedAssignment_1 )? ) ;
    public final void rule__ProcessVariable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3722:1: ( ( ( rule__ProcessVariable__SharedAssignment_1 )? ) )
            // InternalReflex.g:3723:1: ( ( rule__ProcessVariable__SharedAssignment_1 )? )
            {
            // InternalReflex.g:3723:1: ( ( rule__ProcessVariable__SharedAssignment_1 )? )
            // InternalReflex.g:3724:2: ( rule__ProcessVariable__SharedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessVariableAccess().getSharedAssignment_1()); 
            }
            // InternalReflex.g:3725:2: ( rule__ProcessVariable__SharedAssignment_1 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==96) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalReflex.g:3725:3: rule__ProcessVariable__SharedAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ProcessVariable__SharedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessVariableAccess().getSharedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessVariable__Group__1__Impl"


    // $ANTLR start "rule__GlobalVariable__Group__0"
    // InternalReflex.g:3734:1: rule__GlobalVariable__Group__0 : rule__GlobalVariable__Group__0__Impl rule__GlobalVariable__Group__1 ;
    public final void rule__GlobalVariable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3738:1: ( rule__GlobalVariable__Group__0__Impl rule__GlobalVariable__Group__1 )
            // InternalReflex.g:3739:2: rule__GlobalVariable__Group__0__Impl rule__GlobalVariable__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__GlobalVariable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GlobalVariable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GlobalVariable__Group__0"


    // $ANTLR start "rule__GlobalVariable__Group__0__Impl"
    // InternalReflex.g:3746:1: rule__GlobalVariable__Group__0__Impl : ( ( rule__GlobalVariable__Alternatives_0 ) ) ;
    public final void rule__GlobalVariable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3750:1: ( ( ( rule__GlobalVariable__Alternatives_0 ) ) )
            // InternalReflex.g:3751:1: ( ( rule__GlobalVariable__Alternatives_0 ) )
            {
            // InternalReflex.g:3751:1: ( ( rule__GlobalVariable__Alternatives_0 ) )
            // InternalReflex.g:3752:2: ( rule__GlobalVariable__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGlobalVariableAccess().getAlternatives_0()); 
            }
            // InternalReflex.g:3753:2: ( rule__GlobalVariable__Alternatives_0 )
            // InternalReflex.g:3753:3: rule__GlobalVariable__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__GlobalVariable__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGlobalVariableAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GlobalVariable__Group__0__Impl"


    // $ANTLR start "rule__GlobalVariable__Group__1"
    // InternalReflex.g:3761:1: rule__GlobalVariable__Group__1 : rule__GlobalVariable__Group__1__Impl ;
    public final void rule__GlobalVariable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3765:1: ( rule__GlobalVariable__Group__1__Impl )
            // InternalReflex.g:3766:2: rule__GlobalVariable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GlobalVariable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GlobalVariable__Group__1"


    // $ANTLR start "rule__GlobalVariable__Group__1__Impl"
    // InternalReflex.g:3772:1: rule__GlobalVariable__Group__1__Impl : ( ';' ) ;
    public final void rule__GlobalVariable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3776:1: ( ( ';' ) )
            // InternalReflex.g:3777:1: ( ';' )
            {
            // InternalReflex.g:3777:1: ( ';' )
            // InternalReflex.g:3778:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGlobalVariableAccess().getSemicolonKeyword_1()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGlobalVariableAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GlobalVariable__Group__1__Impl"


    // $ANTLR start "rule__PhysicalVariable__Group__0"
    // InternalReflex.g:3788:1: rule__PhysicalVariable__Group__0 : rule__PhysicalVariable__Group__0__Impl rule__PhysicalVariable__Group__1 ;
    public final void rule__PhysicalVariable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3792:1: ( rule__PhysicalVariable__Group__0__Impl rule__PhysicalVariable__Group__1 )
            // InternalReflex.g:3793:2: rule__PhysicalVariable__Group__0__Impl rule__PhysicalVariable__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__PhysicalVariable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__0"


    // $ANTLR start "rule__PhysicalVariable__Group__0__Impl"
    // InternalReflex.g:3800:1: rule__PhysicalVariable__Group__0__Impl : ( ( rule__PhysicalVariable__TypeAssignment_0 ) ) ;
    public final void rule__PhysicalVariable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3804:1: ( ( ( rule__PhysicalVariable__TypeAssignment_0 ) ) )
            // InternalReflex.g:3805:1: ( ( rule__PhysicalVariable__TypeAssignment_0 ) )
            {
            // InternalReflex.g:3805:1: ( ( rule__PhysicalVariable__TypeAssignment_0 ) )
            // InternalReflex.g:3806:2: ( rule__PhysicalVariable__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getTypeAssignment_0()); 
            }
            // InternalReflex.g:3807:2: ( rule__PhysicalVariable__TypeAssignment_0 )
            // InternalReflex.g:3807:3: rule__PhysicalVariable__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__0__Impl"


    // $ANTLR start "rule__PhysicalVariable__Group__1"
    // InternalReflex.g:3815:1: rule__PhysicalVariable__Group__1 : rule__PhysicalVariable__Group__1__Impl rule__PhysicalVariable__Group__2 ;
    public final void rule__PhysicalVariable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3819:1: ( rule__PhysicalVariable__Group__1__Impl rule__PhysicalVariable__Group__2 )
            // InternalReflex.g:3820:2: rule__PhysicalVariable__Group__1__Impl rule__PhysicalVariable__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__PhysicalVariable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__1"


    // $ANTLR start "rule__PhysicalVariable__Group__1__Impl"
    // InternalReflex.g:3827:1: rule__PhysicalVariable__Group__1__Impl : ( ( rule__PhysicalVariable__NameAssignment_1 ) ) ;
    public final void rule__PhysicalVariable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3831:1: ( ( ( rule__PhysicalVariable__NameAssignment_1 ) ) )
            // InternalReflex.g:3832:1: ( ( rule__PhysicalVariable__NameAssignment_1 ) )
            {
            // InternalReflex.g:3832:1: ( ( rule__PhysicalVariable__NameAssignment_1 ) )
            // InternalReflex.g:3833:2: ( rule__PhysicalVariable__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getNameAssignment_1()); 
            }
            // InternalReflex.g:3834:2: ( rule__PhysicalVariable__NameAssignment_1 )
            // InternalReflex.g:3834:3: rule__PhysicalVariable__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__1__Impl"


    // $ANTLR start "rule__PhysicalVariable__Group__2"
    // InternalReflex.g:3842:1: rule__PhysicalVariable__Group__2 : rule__PhysicalVariable__Group__2__Impl rule__PhysicalVariable__Group__3 ;
    public final void rule__PhysicalVariable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3846:1: ( rule__PhysicalVariable__Group__2__Impl rule__PhysicalVariable__Group__3 )
            // InternalReflex.g:3847:2: rule__PhysicalVariable__Group__2__Impl rule__PhysicalVariable__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__PhysicalVariable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__2"


    // $ANTLR start "rule__PhysicalVariable__Group__2__Impl"
    // InternalReflex.g:3854:1: rule__PhysicalVariable__Group__2__Impl : ( '=' ) ;
    public final void rule__PhysicalVariable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3858:1: ( ( '=' ) )
            // InternalReflex.g:3859:1: ( '=' )
            {
            // InternalReflex.g:3859:1: ( '=' )
            // InternalReflex.g:3860:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getEqualsSignKeyword_2()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__2__Impl"


    // $ANTLR start "rule__PhysicalVariable__Group__3"
    // InternalReflex.g:3869:1: rule__PhysicalVariable__Group__3 : rule__PhysicalVariable__Group__3__Impl ;
    public final void rule__PhysicalVariable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3873:1: ( rule__PhysicalVariable__Group__3__Impl )
            // InternalReflex.g:3874:2: rule__PhysicalVariable__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__3"


    // $ANTLR start "rule__PhysicalVariable__Group__3__Impl"
    // InternalReflex.g:3880:1: rule__PhysicalVariable__Group__3__Impl : ( ( rule__PhysicalVariable__MappingAssignment_3 ) ) ;
    public final void rule__PhysicalVariable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3884:1: ( ( ( rule__PhysicalVariable__MappingAssignment_3 ) ) )
            // InternalReflex.g:3885:1: ( ( rule__PhysicalVariable__MappingAssignment_3 ) )
            {
            // InternalReflex.g:3885:1: ( ( rule__PhysicalVariable__MappingAssignment_3 ) )
            // InternalReflex.g:3886:2: ( rule__PhysicalVariable__MappingAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getMappingAssignment_3()); 
            }
            // InternalReflex.g:3887:2: ( rule__PhysicalVariable__MappingAssignment_3 )
            // InternalReflex.g:3887:3: rule__PhysicalVariable__MappingAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PhysicalVariable__MappingAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getMappingAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__Group__3__Impl"


    // $ANTLR start "rule__PortMapping__Group__0"
    // InternalReflex.g:3896:1: rule__PortMapping__Group__0 : rule__PortMapping__Group__0__Impl rule__PortMapping__Group__1 ;
    public final void rule__PortMapping__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3900:1: ( rule__PortMapping__Group__0__Impl rule__PortMapping__Group__1 )
            // InternalReflex.g:3901:2: rule__PortMapping__Group__0__Impl rule__PortMapping__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__PortMapping__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PortMapping__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__0"


    // $ANTLR start "rule__PortMapping__Group__0__Impl"
    // InternalReflex.g:3908:1: rule__PortMapping__Group__0__Impl : ( ( rule__PortMapping__PortAssignment_0 ) ) ;
    public final void rule__PortMapping__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3912:1: ( ( ( rule__PortMapping__PortAssignment_0 ) ) )
            // InternalReflex.g:3913:1: ( ( rule__PortMapping__PortAssignment_0 ) )
            {
            // InternalReflex.g:3913:1: ( ( rule__PortMapping__PortAssignment_0 ) )
            // InternalReflex.g:3914:2: ( rule__PortMapping__PortAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getPortAssignment_0()); 
            }
            // InternalReflex.g:3915:2: ( rule__PortMapping__PortAssignment_0 )
            // InternalReflex.g:3915:3: rule__PortMapping__PortAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PortMapping__PortAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getPortAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__0__Impl"


    // $ANTLR start "rule__PortMapping__Group__1"
    // InternalReflex.g:3923:1: rule__PortMapping__Group__1 : rule__PortMapping__Group__1__Impl rule__PortMapping__Group__2 ;
    public final void rule__PortMapping__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3927:1: ( rule__PortMapping__Group__1__Impl rule__PortMapping__Group__2 )
            // InternalReflex.g:3928:2: rule__PortMapping__Group__1__Impl rule__PortMapping__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__PortMapping__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PortMapping__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__1"


    // $ANTLR start "rule__PortMapping__Group__1__Impl"
    // InternalReflex.g:3935:1: rule__PortMapping__Group__1__Impl : ( '[' ) ;
    public final void rule__PortMapping__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3939:1: ( ( '[' ) )
            // InternalReflex.g:3940:1: ( '[' )
            {
            // InternalReflex.g:3940:1: ( '[' )
            // InternalReflex.g:3941:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,88,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__1__Impl"


    // $ANTLR start "rule__PortMapping__Group__2"
    // InternalReflex.g:3950:1: rule__PortMapping__Group__2 : rule__PortMapping__Group__2__Impl rule__PortMapping__Group__3 ;
    public final void rule__PortMapping__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3954:1: ( rule__PortMapping__Group__2__Impl rule__PortMapping__Group__3 )
            // InternalReflex.g:3955:2: rule__PortMapping__Group__2__Impl rule__PortMapping__Group__3
            {
            pushFollow(FOLLOW_30);
            rule__PortMapping__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PortMapping__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__2"


    // $ANTLR start "rule__PortMapping__Group__2__Impl"
    // InternalReflex.g:3962:1: rule__PortMapping__Group__2__Impl : ( ( rule__PortMapping__BitAssignment_2 )? ) ;
    public final void rule__PortMapping__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3966:1: ( ( ( rule__PortMapping__BitAssignment_2 )? ) )
            // InternalReflex.g:3967:1: ( ( rule__PortMapping__BitAssignment_2 )? )
            {
            // InternalReflex.g:3967:1: ( ( rule__PortMapping__BitAssignment_2 )? )
            // InternalReflex.g:3968:2: ( rule__PortMapping__BitAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getBitAssignment_2()); 
            }
            // InternalReflex.g:3969:2: ( rule__PortMapping__BitAssignment_2 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_INTEGER) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalReflex.g:3969:3: rule__PortMapping__BitAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PortMapping__BitAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getBitAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__2__Impl"


    // $ANTLR start "rule__PortMapping__Group__3"
    // InternalReflex.g:3977:1: rule__PortMapping__Group__3 : rule__PortMapping__Group__3__Impl ;
    public final void rule__PortMapping__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3981:1: ( rule__PortMapping__Group__3__Impl )
            // InternalReflex.g:3982:2: rule__PortMapping__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PortMapping__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__3"


    // $ANTLR start "rule__PortMapping__Group__3__Impl"
    // InternalReflex.g:3988:1: rule__PortMapping__Group__3__Impl : ( ']' ) ;
    public final void rule__PortMapping__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:3992:1: ( ( ']' ) )
            // InternalReflex.g:3993:1: ( ']' )
            {
            // InternalReflex.g:3993:1: ( ']' )
            // InternalReflex.g:3994:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,89,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__Group__3__Impl"


    // $ANTLR start "rule__ProgramVariable__Group__0"
    // InternalReflex.g:4004:1: rule__ProgramVariable__Group__0 : rule__ProgramVariable__Group__0__Impl rule__ProgramVariable__Group__1 ;
    public final void rule__ProgramVariable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4008:1: ( rule__ProgramVariable__Group__0__Impl rule__ProgramVariable__Group__1 )
            // InternalReflex.g:4009:2: rule__ProgramVariable__Group__0__Impl rule__ProgramVariable__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ProgramVariable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ProgramVariable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProgramVariable__Group__0"


    // $ANTLR start "rule__ProgramVariable__Group__0__Impl"
    // InternalReflex.g:4016:1: rule__ProgramVariable__Group__0__Impl : ( ( rule__ProgramVariable__TypeAssignment_0 ) ) ;
    public final void rule__ProgramVariable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4020:1: ( ( ( rule__ProgramVariable__TypeAssignment_0 ) ) )
            // InternalReflex.g:4021:1: ( ( rule__ProgramVariable__TypeAssignment_0 ) )
            {
            // InternalReflex.g:4021:1: ( ( rule__ProgramVariable__TypeAssignment_0 ) )
            // InternalReflex.g:4022:2: ( rule__ProgramVariable__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramVariableAccess().getTypeAssignment_0()); 
            }
            // InternalReflex.g:4023:2: ( rule__ProgramVariable__TypeAssignment_0 )
            // InternalReflex.g:4023:3: rule__ProgramVariable__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ProgramVariable__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramVariableAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProgramVariable__Group__0__Impl"


    // $ANTLR start "rule__ProgramVariable__Group__1"
    // InternalReflex.g:4031:1: rule__ProgramVariable__Group__1 : rule__ProgramVariable__Group__1__Impl ;
    public final void rule__ProgramVariable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4035:1: ( rule__ProgramVariable__Group__1__Impl )
            // InternalReflex.g:4036:2: rule__ProgramVariable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ProgramVariable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProgramVariable__Group__1"


    // $ANTLR start "rule__ProgramVariable__Group__1__Impl"
    // InternalReflex.g:4042:1: rule__ProgramVariable__Group__1__Impl : ( ( rule__ProgramVariable__NameAssignment_1 ) ) ;
    public final void rule__ProgramVariable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4046:1: ( ( ( rule__ProgramVariable__NameAssignment_1 ) ) )
            // InternalReflex.g:4047:1: ( ( rule__ProgramVariable__NameAssignment_1 ) )
            {
            // InternalReflex.g:4047:1: ( ( rule__ProgramVariable__NameAssignment_1 ) )
            // InternalReflex.g:4048:2: ( rule__ProgramVariable__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramVariableAccess().getNameAssignment_1()); 
            }
            // InternalReflex.g:4049:2: ( rule__ProgramVariable__NameAssignment_1 )
            // InternalReflex.g:4049:3: rule__ProgramVariable__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ProgramVariable__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramVariableAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProgramVariable__Group__1__Impl"


    // $ANTLR start "rule__TimeoutFunction__Group__0"
    // InternalReflex.g:4058:1: rule__TimeoutFunction__Group__0 : rule__TimeoutFunction__Group__0__Impl rule__TimeoutFunction__Group__1 ;
    public final void rule__TimeoutFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4062:1: ( rule__TimeoutFunction__Group__0__Impl rule__TimeoutFunction__Group__1 )
            // InternalReflex.g:4063:2: rule__TimeoutFunction__Group__0__Impl rule__TimeoutFunction__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__TimeoutFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group__0"


    // $ANTLR start "rule__TimeoutFunction__Group__0__Impl"
    // InternalReflex.g:4070:1: rule__TimeoutFunction__Group__0__Impl : ( 'timeout' ) ;
    public final void rule__TimeoutFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4074:1: ( ( 'timeout' ) )
            // InternalReflex.g:4075:1: ( 'timeout' )
            {
            // InternalReflex.g:4075:1: ( 'timeout' )
            // InternalReflex.g:4076:2: 'timeout'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getTimeoutKeyword_0()); 
            }
            match(input,99,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getTimeoutKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group__0__Impl"


    // $ANTLR start "rule__TimeoutFunction__Group__1"
    // InternalReflex.g:4085:1: rule__TimeoutFunction__Group__1 : rule__TimeoutFunction__Group__1__Impl rule__TimeoutFunction__Group__2 ;
    public final void rule__TimeoutFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4089:1: ( rule__TimeoutFunction__Group__1__Impl rule__TimeoutFunction__Group__2 )
            // InternalReflex.g:4090:2: rule__TimeoutFunction__Group__1__Impl rule__TimeoutFunction__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__TimeoutFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group__1"


    // $ANTLR start "rule__TimeoutFunction__Group__1__Impl"
    // InternalReflex.g:4097:1: rule__TimeoutFunction__Group__1__Impl : ( ( rule__TimeoutFunction__Alternatives_1 ) ) ;
    public final void rule__TimeoutFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4101:1: ( ( ( rule__TimeoutFunction__Alternatives_1 ) ) )
            // InternalReflex.g:4102:1: ( ( rule__TimeoutFunction__Alternatives_1 ) )
            {
            // InternalReflex.g:4102:1: ( ( rule__TimeoutFunction__Alternatives_1 ) )
            // InternalReflex.g:4103:2: ( rule__TimeoutFunction__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getAlternatives_1()); 
            }
            // InternalReflex.g:4104:2: ( rule__TimeoutFunction__Alternatives_1 )
            // InternalReflex.g:4104:3: rule__TimeoutFunction__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group__1__Impl"


    // $ANTLR start "rule__TimeoutFunction__Group__2"
    // InternalReflex.g:4112:1: rule__TimeoutFunction__Group__2 : rule__TimeoutFunction__Group__2__Impl ;
    public final void rule__TimeoutFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4116:1: ( rule__TimeoutFunction__Group__2__Impl )
            // InternalReflex.g:4117:2: rule__TimeoutFunction__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group__2"


    // $ANTLR start "rule__TimeoutFunction__Group__2__Impl"
    // InternalReflex.g:4123:1: rule__TimeoutFunction__Group__2__Impl : ( ( rule__TimeoutFunction__BodyAssignment_2 ) ) ;
    public final void rule__TimeoutFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4127:1: ( ( ( rule__TimeoutFunction__BodyAssignment_2 ) ) )
            // InternalReflex.g:4128:1: ( ( rule__TimeoutFunction__BodyAssignment_2 ) )
            {
            // InternalReflex.g:4128:1: ( ( rule__TimeoutFunction__BodyAssignment_2 ) )
            // InternalReflex.g:4129:2: ( rule__TimeoutFunction__BodyAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getBodyAssignment_2()); 
            }
            // InternalReflex.g:4130:2: ( rule__TimeoutFunction__BodyAssignment_2 )
            // InternalReflex.g:4130:3: rule__TimeoutFunction__BodyAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__BodyAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getBodyAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group__2__Impl"


    // $ANTLR start "rule__TimeoutFunction__Group_1_1__0"
    // InternalReflex.g:4139:1: rule__TimeoutFunction__Group_1_1__0 : rule__TimeoutFunction__Group_1_1__0__Impl rule__TimeoutFunction__Group_1_1__1 ;
    public final void rule__TimeoutFunction__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4143:1: ( rule__TimeoutFunction__Group_1_1__0__Impl rule__TimeoutFunction__Group_1_1__1 )
            // InternalReflex.g:4144:2: rule__TimeoutFunction__Group_1_1__0__Impl rule__TimeoutFunction__Group_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__TimeoutFunction__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group_1_1__0"


    // $ANTLR start "rule__TimeoutFunction__Group_1_1__0__Impl"
    // InternalReflex.g:4151:1: rule__TimeoutFunction__Group_1_1__0__Impl : ( '(' ) ;
    public final void rule__TimeoutFunction__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4155:1: ( ( '(' ) )
            // InternalReflex.g:4156:1: ( '(' )
            {
            // InternalReflex.g:4156:1: ( '(' )
            // InternalReflex.g:4157:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group_1_1__0__Impl"


    // $ANTLR start "rule__TimeoutFunction__Group_1_1__1"
    // InternalReflex.g:4166:1: rule__TimeoutFunction__Group_1_1__1 : rule__TimeoutFunction__Group_1_1__1__Impl rule__TimeoutFunction__Group_1_1__2 ;
    public final void rule__TimeoutFunction__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4170:1: ( rule__TimeoutFunction__Group_1_1__1__Impl rule__TimeoutFunction__Group_1_1__2 )
            // InternalReflex.g:4171:2: rule__TimeoutFunction__Group_1_1__1__Impl rule__TimeoutFunction__Group_1_1__2
            {
            pushFollow(FOLLOW_33);
            rule__TimeoutFunction__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group_1_1__1"


    // $ANTLR start "rule__TimeoutFunction__Group_1_1__1__Impl"
    // InternalReflex.g:4178:1: rule__TimeoutFunction__Group_1_1__1__Impl : ( ruleTimeAmountOrRef ) ;
    public final void rule__TimeoutFunction__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4182:1: ( ( ruleTimeAmountOrRef ) )
            // InternalReflex.g:4183:1: ( ruleTimeAmountOrRef )
            {
            // InternalReflex.g:4183:1: ( ruleTimeAmountOrRef )
            // InternalReflex.g:4184:2: ruleTimeAmountOrRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeAmountOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group_1_1__1__Impl"


    // $ANTLR start "rule__TimeoutFunction__Group_1_1__2"
    // InternalReflex.g:4193:1: rule__TimeoutFunction__Group_1_1__2 : rule__TimeoutFunction__Group_1_1__2__Impl ;
    public final void rule__TimeoutFunction__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4197:1: ( rule__TimeoutFunction__Group_1_1__2__Impl )
            // InternalReflex.g:4198:2: rule__TimeoutFunction__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeoutFunction__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group_1_1__2"


    // $ANTLR start "rule__TimeoutFunction__Group_1_1__2__Impl"
    // InternalReflex.g:4204:1: rule__TimeoutFunction__Group_1_1__2__Impl : ( ')' ) ;
    public final void rule__TimeoutFunction__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4208:1: ( ( ')' ) )
            // InternalReflex.g:4209:1: ( ')' )
            {
            // InternalReflex.g:4209:1: ( ')' )
            // InternalReflex.g:4210:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__Group_1_1__2__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalReflex.g:4220:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4224:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalReflex.g:4225:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalReflex.g:4232:1: rule__Function__Group__0__Impl : ( ( rule__Function__ReturnTypeAssignment_0 ) ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4236:1: ( ( ( rule__Function__ReturnTypeAssignment_0 ) ) )
            // InternalReflex.g:4237:1: ( ( rule__Function__ReturnTypeAssignment_0 ) )
            {
            // InternalReflex.g:4237:1: ( ( rule__Function__ReturnTypeAssignment_0 ) )
            // InternalReflex.g:4238:2: ( rule__Function__ReturnTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_0()); 
            }
            // InternalReflex.g:4239:2: ( rule__Function__ReturnTypeAssignment_0 )
            // InternalReflex.g:4239:3: rule__Function__ReturnTypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Function__ReturnTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalReflex.g:4247:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4251:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalReflex.g:4252:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalReflex.g:4259:1: rule__Function__Group__1__Impl : ( ( rule__Function__NameAssignment_1 ) ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4263:1: ( ( ( rule__Function__NameAssignment_1 ) ) )
            // InternalReflex.g:4264:1: ( ( rule__Function__NameAssignment_1 ) )
            {
            // InternalReflex.g:4264:1: ( ( rule__Function__NameAssignment_1 ) )
            // InternalReflex.g:4265:2: ( rule__Function__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            }
            // InternalReflex.g:4266:2: ( rule__Function__NameAssignment_1 )
            // InternalReflex.g:4266:3: rule__Function__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalReflex.g:4274:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4278:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalReflex.g:4279:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalReflex.g:4286:1: rule__Function__Group__2__Impl : ( '(' ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4290:1: ( ( '(' ) )
            // InternalReflex.g:4291:1: ( '(' )
            {
            // InternalReflex.g:4291:1: ( '(' )
            // InternalReflex.g:4292:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalReflex.g:4301:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4305:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalReflex.g:4306:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalReflex.g:4313:1: rule__Function__Group__3__Impl : ( ( rule__Function__ArgTypesAssignment_3 ) ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4317:1: ( ( ( rule__Function__ArgTypesAssignment_3 ) ) )
            // InternalReflex.g:4318:1: ( ( rule__Function__ArgTypesAssignment_3 ) )
            {
            // InternalReflex.g:4318:1: ( ( rule__Function__ArgTypesAssignment_3 ) )
            // InternalReflex.g:4319:2: ( rule__Function__ArgTypesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgTypesAssignment_3()); 
            }
            // InternalReflex.g:4320:2: ( rule__Function__ArgTypesAssignment_3 )
            // InternalReflex.g:4320:3: rule__Function__ArgTypesAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Function__ArgTypesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgTypesAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalReflex.g:4328:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4332:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalReflex.g:4333:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FOLLOW_36);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalReflex.g:4340:1: rule__Function__Group__4__Impl : ( ( rule__Function__Group_4__0 )* ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4344:1: ( ( ( rule__Function__Group_4__0 )* ) )
            // InternalReflex.g:4345:1: ( ( rule__Function__Group_4__0 )* )
            {
            // InternalReflex.g:4345:1: ( ( rule__Function__Group_4__0 )* )
            // InternalReflex.g:4346:2: ( rule__Function__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_4()); 
            }
            // InternalReflex.g:4347:2: ( rule__Function__Group_4__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==98) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalReflex.g:4347:3: rule__Function__Group_4__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__Function__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalReflex.g:4355:1: rule__Function__Group__5 : rule__Function__Group__5__Impl rule__Function__Group__6 ;
    public final void rule__Function__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4359:1: ( rule__Function__Group__5__Impl rule__Function__Group__6 )
            // InternalReflex.g:4360:2: rule__Function__Group__5__Impl rule__Function__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalReflex.g:4367:1: rule__Function__Group__5__Impl : ( ')' ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4371:1: ( ( ')' ) )
            // InternalReflex.g:4372:1: ( ')' )
            {
            // InternalReflex.g:4372:1: ( ')' )
            // InternalReflex.g:4373:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group__6"
    // InternalReflex.g:4382:1: rule__Function__Group__6 : rule__Function__Group__6__Impl ;
    public final void rule__Function__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4386:1: ( rule__Function__Group__6__Impl )
            // InternalReflex.g:4387:2: rule__Function__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6"


    // $ANTLR start "rule__Function__Group__6__Impl"
    // InternalReflex.g:4393:1: rule__Function__Group__6__Impl : ( ';' ) ;
    public final void rule__Function__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4397:1: ( ( ';' ) )
            // InternalReflex.g:4398:1: ( ';' )
            {
            // InternalReflex.g:4398:1: ( ';' )
            // InternalReflex.g:4399:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_6()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6__Impl"


    // $ANTLR start "rule__Function__Group_4__0"
    // InternalReflex.g:4409:1: rule__Function__Group_4__0 : rule__Function__Group_4__0__Impl rule__Function__Group_4__1 ;
    public final void rule__Function__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4413:1: ( rule__Function__Group_4__0__Impl rule__Function__Group_4__1 )
            // InternalReflex.g:4414:2: rule__Function__Group_4__0__Impl rule__Function__Group_4__1
            {
            pushFollow(FOLLOW_35);
            rule__Function__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__0"


    // $ANTLR start "rule__Function__Group_4__0__Impl"
    // InternalReflex.g:4421:1: rule__Function__Group_4__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4425:1: ( ( ',' ) )
            // InternalReflex.g:4426:1: ( ',' )
            {
            // InternalReflex.g:4426:1: ( ',' )
            // InternalReflex.g:4427:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_4_0()); 
            }
            match(input,98,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__0__Impl"


    // $ANTLR start "rule__Function__Group_4__1"
    // InternalReflex.g:4436:1: rule__Function__Group_4__1 : rule__Function__Group_4__1__Impl ;
    public final void rule__Function__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4440:1: ( rule__Function__Group_4__1__Impl )
            // InternalReflex.g:4441:2: rule__Function__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__1"


    // $ANTLR start "rule__Function__Group_4__1__Impl"
    // InternalReflex.g:4447:1: rule__Function__Group_4__1__Impl : ( ( rule__Function__ArgTypesAssignment_4_1 ) ) ;
    public final void rule__Function__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4451:1: ( ( ( rule__Function__ArgTypesAssignment_4_1 ) ) )
            // InternalReflex.g:4452:1: ( ( rule__Function__ArgTypesAssignment_4_1 ) )
            {
            // InternalReflex.g:4452:1: ( ( rule__Function__ArgTypesAssignment_4_1 ) )
            // InternalReflex.g:4453:2: ( rule__Function__ArgTypesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgTypesAssignment_4_1()); 
            }
            // InternalReflex.g:4454:2: ( rule__Function__ArgTypesAssignment_4_1 )
            // InternalReflex.g:4454:3: rule__Function__ArgTypesAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__ArgTypesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgTypesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__1__Impl"


    // $ANTLR start "rule__Port__Group__0"
    // InternalReflex.g:4463:1: rule__Port__Group__0 : rule__Port__Group__0__Impl rule__Port__Group__1 ;
    public final void rule__Port__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4467:1: ( rule__Port__Group__0__Impl rule__Port__Group__1 )
            // InternalReflex.g:4468:2: rule__Port__Group__0__Impl rule__Port__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Port__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Port__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0"


    // $ANTLR start "rule__Port__Group__0__Impl"
    // InternalReflex.g:4475:1: rule__Port__Group__0__Impl : ( ( rule__Port__TypeAssignment_0 ) ) ;
    public final void rule__Port__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4479:1: ( ( ( rule__Port__TypeAssignment_0 ) ) )
            // InternalReflex.g:4480:1: ( ( rule__Port__TypeAssignment_0 ) )
            {
            // InternalReflex.g:4480:1: ( ( rule__Port__TypeAssignment_0 ) )
            // InternalReflex.g:4481:2: ( rule__Port__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getTypeAssignment_0()); 
            }
            // InternalReflex.g:4482:2: ( rule__Port__TypeAssignment_0 )
            // InternalReflex.g:4482:3: rule__Port__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Port__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0__Impl"


    // $ANTLR start "rule__Port__Group__1"
    // InternalReflex.g:4490:1: rule__Port__Group__1 : rule__Port__Group__1__Impl rule__Port__Group__2 ;
    public final void rule__Port__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4494:1: ( rule__Port__Group__1__Impl rule__Port__Group__2 )
            // InternalReflex.g:4495:2: rule__Port__Group__1__Impl rule__Port__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Port__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Port__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1"


    // $ANTLR start "rule__Port__Group__1__Impl"
    // InternalReflex.g:4502:1: rule__Port__Group__1__Impl : ( ( rule__Port__NameAssignment_1 ) ) ;
    public final void rule__Port__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4506:1: ( ( ( rule__Port__NameAssignment_1 ) ) )
            // InternalReflex.g:4507:1: ( ( rule__Port__NameAssignment_1 ) )
            {
            // InternalReflex.g:4507:1: ( ( rule__Port__NameAssignment_1 ) )
            // InternalReflex.g:4508:2: ( rule__Port__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getNameAssignment_1()); 
            }
            // InternalReflex.g:4509:2: ( rule__Port__NameAssignment_1 )
            // InternalReflex.g:4509:3: rule__Port__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Port__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1__Impl"


    // $ANTLR start "rule__Port__Group__2"
    // InternalReflex.g:4517:1: rule__Port__Group__2 : rule__Port__Group__2__Impl rule__Port__Group__3 ;
    public final void rule__Port__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4521:1: ( rule__Port__Group__2__Impl rule__Port__Group__3 )
            // InternalReflex.g:4522:2: rule__Port__Group__2__Impl rule__Port__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__Port__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Port__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__2"


    // $ANTLR start "rule__Port__Group__2__Impl"
    // InternalReflex.g:4529:1: rule__Port__Group__2__Impl : ( ( rule__Port__Addr1Assignment_2 ) ) ;
    public final void rule__Port__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4533:1: ( ( ( rule__Port__Addr1Assignment_2 ) ) )
            // InternalReflex.g:4534:1: ( ( rule__Port__Addr1Assignment_2 ) )
            {
            // InternalReflex.g:4534:1: ( ( rule__Port__Addr1Assignment_2 ) )
            // InternalReflex.g:4535:2: ( rule__Port__Addr1Assignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getAddr1Assignment_2()); 
            }
            // InternalReflex.g:4536:2: ( rule__Port__Addr1Assignment_2 )
            // InternalReflex.g:4536:3: rule__Port__Addr1Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Port__Addr1Assignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getAddr1Assignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__2__Impl"


    // $ANTLR start "rule__Port__Group__3"
    // InternalReflex.g:4544:1: rule__Port__Group__3 : rule__Port__Group__3__Impl rule__Port__Group__4 ;
    public final void rule__Port__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4548:1: ( rule__Port__Group__3__Impl rule__Port__Group__4 )
            // InternalReflex.g:4549:2: rule__Port__Group__3__Impl rule__Port__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__Port__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Port__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__3"


    // $ANTLR start "rule__Port__Group__3__Impl"
    // InternalReflex.g:4556:1: rule__Port__Group__3__Impl : ( ( rule__Port__Addr2Assignment_3 ) ) ;
    public final void rule__Port__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4560:1: ( ( ( rule__Port__Addr2Assignment_3 ) ) )
            // InternalReflex.g:4561:1: ( ( rule__Port__Addr2Assignment_3 ) )
            {
            // InternalReflex.g:4561:1: ( ( rule__Port__Addr2Assignment_3 ) )
            // InternalReflex.g:4562:2: ( rule__Port__Addr2Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getAddr2Assignment_3()); 
            }
            // InternalReflex.g:4563:2: ( rule__Port__Addr2Assignment_3 )
            // InternalReflex.g:4563:3: rule__Port__Addr2Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Port__Addr2Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getAddr2Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__3__Impl"


    // $ANTLR start "rule__Port__Group__4"
    // InternalReflex.g:4571:1: rule__Port__Group__4 : rule__Port__Group__4__Impl rule__Port__Group__5 ;
    public final void rule__Port__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4575:1: ( rule__Port__Group__4__Impl rule__Port__Group__5 )
            // InternalReflex.g:4576:2: rule__Port__Group__4__Impl rule__Port__Group__5
            {
            pushFollow(FOLLOW_11);
            rule__Port__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Port__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__4"


    // $ANTLR start "rule__Port__Group__4__Impl"
    // InternalReflex.g:4583:1: rule__Port__Group__4__Impl : ( ( rule__Port__SizeAssignment_4 ) ) ;
    public final void rule__Port__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4587:1: ( ( ( rule__Port__SizeAssignment_4 ) ) )
            // InternalReflex.g:4588:1: ( ( rule__Port__SizeAssignment_4 ) )
            {
            // InternalReflex.g:4588:1: ( ( rule__Port__SizeAssignment_4 ) )
            // InternalReflex.g:4589:2: ( rule__Port__SizeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getSizeAssignment_4()); 
            }
            // InternalReflex.g:4590:2: ( rule__Port__SizeAssignment_4 )
            // InternalReflex.g:4590:3: rule__Port__SizeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Port__SizeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getSizeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__4__Impl"


    // $ANTLR start "rule__Port__Group__5"
    // InternalReflex.g:4598:1: rule__Port__Group__5 : rule__Port__Group__5__Impl ;
    public final void rule__Port__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4602:1: ( rule__Port__Group__5__Impl )
            // InternalReflex.g:4603:2: rule__Port__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__5"


    // $ANTLR start "rule__Port__Group__5__Impl"
    // InternalReflex.g:4609:1: rule__Port__Group__5__Impl : ( ';' ) ;
    public final void rule__Port__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4613:1: ( ( ';' ) )
            // InternalReflex.g:4614:1: ( ';' )
            {
            // InternalReflex.g:4614:1: ( ';' )
            // InternalReflex.g:4615:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getSemicolonKeyword_5()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__5__Impl"


    // $ANTLR start "rule__Const__Group__0"
    // InternalReflex.g:4625:1: rule__Const__Group__0 : rule__Const__Group__0__Impl rule__Const__Group__1 ;
    public final void rule__Const__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4629:1: ( rule__Const__Group__0__Impl rule__Const__Group__1 )
            // InternalReflex.g:4630:2: rule__Const__Group__0__Impl rule__Const__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__Const__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Const__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__0"


    // $ANTLR start "rule__Const__Group__0__Impl"
    // InternalReflex.g:4637:1: rule__Const__Group__0__Impl : ( 'const' ) ;
    public final void rule__Const__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4641:1: ( ( 'const' ) )
            // InternalReflex.g:4642:1: ( 'const' )
            {
            // InternalReflex.g:4642:1: ( 'const' )
            // InternalReflex.g:4643:2: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getConstKeyword_0()); 
            }
            match(input,102,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getConstKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__0__Impl"


    // $ANTLR start "rule__Const__Group__1"
    // InternalReflex.g:4652:1: rule__Const__Group__1 : rule__Const__Group__1__Impl rule__Const__Group__2 ;
    public final void rule__Const__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4656:1: ( rule__Const__Group__1__Impl rule__Const__Group__2 )
            // InternalReflex.g:4657:2: rule__Const__Group__1__Impl rule__Const__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Const__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Const__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__1"


    // $ANTLR start "rule__Const__Group__1__Impl"
    // InternalReflex.g:4664:1: rule__Const__Group__1__Impl : ( ( rule__Const__TypeAssignment_1 ) ) ;
    public final void rule__Const__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4668:1: ( ( ( rule__Const__TypeAssignment_1 ) ) )
            // InternalReflex.g:4669:1: ( ( rule__Const__TypeAssignment_1 ) )
            {
            // InternalReflex.g:4669:1: ( ( rule__Const__TypeAssignment_1 ) )
            // InternalReflex.g:4670:2: ( rule__Const__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getTypeAssignment_1()); 
            }
            // InternalReflex.g:4671:2: ( rule__Const__TypeAssignment_1 )
            // InternalReflex.g:4671:3: rule__Const__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Const__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__1__Impl"


    // $ANTLR start "rule__Const__Group__2"
    // InternalReflex.g:4679:1: rule__Const__Group__2 : rule__Const__Group__2__Impl rule__Const__Group__3 ;
    public final void rule__Const__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4683:1: ( rule__Const__Group__2__Impl rule__Const__Group__3 )
            // InternalReflex.g:4684:2: rule__Const__Group__2__Impl rule__Const__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__Const__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Const__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__2"


    // $ANTLR start "rule__Const__Group__2__Impl"
    // InternalReflex.g:4691:1: rule__Const__Group__2__Impl : ( ( rule__Const__NameAssignment_2 ) ) ;
    public final void rule__Const__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4695:1: ( ( ( rule__Const__NameAssignment_2 ) ) )
            // InternalReflex.g:4696:1: ( ( rule__Const__NameAssignment_2 ) )
            {
            // InternalReflex.g:4696:1: ( ( rule__Const__NameAssignment_2 ) )
            // InternalReflex.g:4697:2: ( rule__Const__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getNameAssignment_2()); 
            }
            // InternalReflex.g:4698:2: ( rule__Const__NameAssignment_2 )
            // InternalReflex.g:4698:3: rule__Const__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Const__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__2__Impl"


    // $ANTLR start "rule__Const__Group__3"
    // InternalReflex.g:4706:1: rule__Const__Group__3 : rule__Const__Group__3__Impl rule__Const__Group__4 ;
    public final void rule__Const__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4710:1: ( rule__Const__Group__3__Impl rule__Const__Group__4 )
            // InternalReflex.g:4711:2: rule__Const__Group__3__Impl rule__Const__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__Const__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Const__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__3"


    // $ANTLR start "rule__Const__Group__3__Impl"
    // InternalReflex.g:4718:1: rule__Const__Group__3__Impl : ( '=' ) ;
    public final void rule__Const__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4722:1: ( ( '=' ) )
            // InternalReflex.g:4723:1: ( '=' )
            {
            // InternalReflex.g:4723:1: ( '=' )
            // InternalReflex.g:4724:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getEqualsSignKeyword_3()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__3__Impl"


    // $ANTLR start "rule__Const__Group__4"
    // InternalReflex.g:4733:1: rule__Const__Group__4 : rule__Const__Group__4__Impl rule__Const__Group__5 ;
    public final void rule__Const__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4737:1: ( rule__Const__Group__4__Impl rule__Const__Group__5 )
            // InternalReflex.g:4738:2: rule__Const__Group__4__Impl rule__Const__Group__5
            {
            pushFollow(FOLLOW_11);
            rule__Const__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Const__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__4"


    // $ANTLR start "rule__Const__Group__4__Impl"
    // InternalReflex.g:4745:1: rule__Const__Group__4__Impl : ( ( rule__Const__ValueAssignment_4 ) ) ;
    public final void rule__Const__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4749:1: ( ( ( rule__Const__ValueAssignment_4 ) ) )
            // InternalReflex.g:4750:1: ( ( rule__Const__ValueAssignment_4 ) )
            {
            // InternalReflex.g:4750:1: ( ( rule__Const__ValueAssignment_4 ) )
            // InternalReflex.g:4751:2: ( rule__Const__ValueAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getValueAssignment_4()); 
            }
            // InternalReflex.g:4752:2: ( rule__Const__ValueAssignment_4 )
            // InternalReflex.g:4752:3: rule__Const__ValueAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Const__ValueAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getValueAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__4__Impl"


    // $ANTLR start "rule__Const__Group__5"
    // InternalReflex.g:4760:1: rule__Const__Group__5 : rule__Const__Group__5__Impl ;
    public final void rule__Const__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4764:1: ( rule__Const__Group__5__Impl )
            // InternalReflex.g:4765:2: rule__Const__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Const__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__5"


    // $ANTLR start "rule__Const__Group__5__Impl"
    // InternalReflex.g:4771:1: rule__Const__Group__5__Impl : ( ';' ) ;
    public final void rule__Const__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4775:1: ( ( ';' ) )
            // InternalReflex.g:4776:1: ( ';' )
            {
            // InternalReflex.g:4776:1: ( ';' )
            // InternalReflex.g:4777:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getSemicolonKeyword_5()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__Group__5__Impl"


    // $ANTLR start "rule__Enum__Group__0"
    // InternalReflex.g:4787:1: rule__Enum__Group__0 : rule__Enum__Group__0__Impl rule__Enum__Group__1 ;
    public final void rule__Enum__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4791:1: ( rule__Enum__Group__0__Impl rule__Enum__Group__1 )
            // InternalReflex.g:4792:2: rule__Enum__Group__0__Impl rule__Enum__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Enum__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enum__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__0"


    // $ANTLR start "rule__Enum__Group__0__Impl"
    // InternalReflex.g:4799:1: rule__Enum__Group__0__Impl : ( 'enum' ) ;
    public final void rule__Enum__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4803:1: ( ( 'enum' ) )
            // InternalReflex.g:4804:1: ( 'enum' )
            {
            // InternalReflex.g:4804:1: ( 'enum' )
            // InternalReflex.g:4805:2: 'enum'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getEnumKeyword_0()); 
            }
            match(input,103,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getEnumKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__0__Impl"


    // $ANTLR start "rule__Enum__Group__1"
    // InternalReflex.g:4814:1: rule__Enum__Group__1 : rule__Enum__Group__1__Impl rule__Enum__Group__2 ;
    public final void rule__Enum__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4818:1: ( rule__Enum__Group__1__Impl rule__Enum__Group__2 )
            // InternalReflex.g:4819:2: rule__Enum__Group__1__Impl rule__Enum__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Enum__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enum__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__1"


    // $ANTLR start "rule__Enum__Group__1__Impl"
    // InternalReflex.g:4826:1: rule__Enum__Group__1__Impl : ( ( rule__Enum__IdentifierAssignment_1 ) ) ;
    public final void rule__Enum__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4830:1: ( ( ( rule__Enum__IdentifierAssignment_1 ) ) )
            // InternalReflex.g:4831:1: ( ( rule__Enum__IdentifierAssignment_1 ) )
            {
            // InternalReflex.g:4831:1: ( ( rule__Enum__IdentifierAssignment_1 ) )
            // InternalReflex.g:4832:2: ( rule__Enum__IdentifierAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getIdentifierAssignment_1()); 
            }
            // InternalReflex.g:4833:2: ( rule__Enum__IdentifierAssignment_1 )
            // InternalReflex.g:4833:3: rule__Enum__IdentifierAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Enum__IdentifierAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getIdentifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__1__Impl"


    // $ANTLR start "rule__Enum__Group__2"
    // InternalReflex.g:4841:1: rule__Enum__Group__2 : rule__Enum__Group__2__Impl rule__Enum__Group__3 ;
    public final void rule__Enum__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4845:1: ( rule__Enum__Group__2__Impl rule__Enum__Group__3 )
            // InternalReflex.g:4846:2: rule__Enum__Group__2__Impl rule__Enum__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__Enum__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enum__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__2"


    // $ANTLR start "rule__Enum__Group__2__Impl"
    // InternalReflex.g:4853:1: rule__Enum__Group__2__Impl : ( '{' ) ;
    public final void rule__Enum__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4857:1: ( ( '{' ) )
            // InternalReflex.g:4858:1: ( '{' )
            {
            // InternalReflex.g:4858:1: ( '{' )
            // InternalReflex.g:4859:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__2__Impl"


    // $ANTLR start "rule__Enum__Group__3"
    // InternalReflex.g:4868:1: rule__Enum__Group__3 : rule__Enum__Group__3__Impl rule__Enum__Group__4 ;
    public final void rule__Enum__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4872:1: ( rule__Enum__Group__3__Impl rule__Enum__Group__4 )
            // InternalReflex.g:4873:2: rule__Enum__Group__3__Impl rule__Enum__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__Enum__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enum__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__3"


    // $ANTLR start "rule__Enum__Group__3__Impl"
    // InternalReflex.g:4880:1: rule__Enum__Group__3__Impl : ( ( rule__Enum__EnumMembersAssignment_3 ) ) ;
    public final void rule__Enum__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4884:1: ( ( ( rule__Enum__EnumMembersAssignment_3 ) ) )
            // InternalReflex.g:4885:1: ( ( rule__Enum__EnumMembersAssignment_3 ) )
            {
            // InternalReflex.g:4885:1: ( ( rule__Enum__EnumMembersAssignment_3 ) )
            // InternalReflex.g:4886:2: ( rule__Enum__EnumMembersAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getEnumMembersAssignment_3()); 
            }
            // InternalReflex.g:4887:2: ( rule__Enum__EnumMembersAssignment_3 )
            // InternalReflex.g:4887:3: rule__Enum__EnumMembersAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Enum__EnumMembersAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getEnumMembersAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__3__Impl"


    // $ANTLR start "rule__Enum__Group__4"
    // InternalReflex.g:4895:1: rule__Enum__Group__4 : rule__Enum__Group__4__Impl rule__Enum__Group__5 ;
    public final void rule__Enum__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4899:1: ( rule__Enum__Group__4__Impl rule__Enum__Group__5 )
            // InternalReflex.g:4900:2: rule__Enum__Group__4__Impl rule__Enum__Group__5
            {
            pushFollow(FOLLOW_37);
            rule__Enum__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enum__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__4"


    // $ANTLR start "rule__Enum__Group__4__Impl"
    // InternalReflex.g:4907:1: rule__Enum__Group__4__Impl : ( ( rule__Enum__Group_4__0 )* ) ;
    public final void rule__Enum__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4911:1: ( ( ( rule__Enum__Group_4__0 )* ) )
            // InternalReflex.g:4912:1: ( ( rule__Enum__Group_4__0 )* )
            {
            // InternalReflex.g:4912:1: ( ( rule__Enum__Group_4__0 )* )
            // InternalReflex.g:4913:2: ( rule__Enum__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getGroup_4()); 
            }
            // InternalReflex.g:4914:2: ( rule__Enum__Group_4__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==98) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalReflex.g:4914:3: rule__Enum__Group_4__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__Enum__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__4__Impl"


    // $ANTLR start "rule__Enum__Group__5"
    // InternalReflex.g:4922:1: rule__Enum__Group__5 : rule__Enum__Group__5__Impl ;
    public final void rule__Enum__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4926:1: ( rule__Enum__Group__5__Impl )
            // InternalReflex.g:4927:2: rule__Enum__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Enum__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__5"


    // $ANTLR start "rule__Enum__Group__5__Impl"
    // InternalReflex.g:4933:1: rule__Enum__Group__5__Impl : ( '}' ) ;
    public final void rule__Enum__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4937:1: ( ( '}' ) )
            // InternalReflex.g:4938:1: ( '}' )
            {
            // InternalReflex.g:4938:1: ( '}' )
            // InternalReflex.g:4939:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group__5__Impl"


    // $ANTLR start "rule__Enum__Group_4__0"
    // InternalReflex.g:4949:1: rule__Enum__Group_4__0 : rule__Enum__Group_4__0__Impl rule__Enum__Group_4__1 ;
    public final void rule__Enum__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4953:1: ( rule__Enum__Group_4__0__Impl rule__Enum__Group_4__1 )
            // InternalReflex.g:4954:2: rule__Enum__Group_4__0__Impl rule__Enum__Group_4__1
            {
            pushFollow(FOLLOW_5);
            rule__Enum__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Enum__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group_4__0"


    // $ANTLR start "rule__Enum__Group_4__0__Impl"
    // InternalReflex.g:4961:1: rule__Enum__Group_4__0__Impl : ( ',' ) ;
    public final void rule__Enum__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4965:1: ( ( ',' ) )
            // InternalReflex.g:4966:1: ( ',' )
            {
            // InternalReflex.g:4966:1: ( ',' )
            // InternalReflex.g:4967:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getCommaKeyword_4_0()); 
            }
            match(input,98,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getCommaKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group_4__0__Impl"


    // $ANTLR start "rule__Enum__Group_4__1"
    // InternalReflex.g:4976:1: rule__Enum__Group_4__1 : rule__Enum__Group_4__1__Impl ;
    public final void rule__Enum__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4980:1: ( rule__Enum__Group_4__1__Impl )
            // InternalReflex.g:4981:2: rule__Enum__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Enum__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group_4__1"


    // $ANTLR start "rule__Enum__Group_4__1__Impl"
    // InternalReflex.g:4987:1: rule__Enum__Group_4__1__Impl : ( ( rule__Enum__EnumMembersAssignment_4_1 ) ) ;
    public final void rule__Enum__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:4991:1: ( ( ( rule__Enum__EnumMembersAssignment_4_1 ) ) )
            // InternalReflex.g:4992:1: ( ( rule__Enum__EnumMembersAssignment_4_1 ) )
            {
            // InternalReflex.g:4992:1: ( ( rule__Enum__EnumMembersAssignment_4_1 ) )
            // InternalReflex.g:4993:2: ( rule__Enum__EnumMembersAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getEnumMembersAssignment_4_1()); 
            }
            // InternalReflex.g:4994:2: ( rule__Enum__EnumMembersAssignment_4_1 )
            // InternalReflex.g:4994:3: rule__Enum__EnumMembersAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Enum__EnumMembersAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getEnumMembersAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__Group_4__1__Impl"


    // $ANTLR start "rule__EnumMember__Group__0"
    // InternalReflex.g:5003:1: rule__EnumMember__Group__0 : rule__EnumMember__Group__0__Impl rule__EnumMember__Group__1 ;
    public final void rule__EnumMember__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5007:1: ( rule__EnumMember__Group__0__Impl rule__EnumMember__Group__1 )
            // InternalReflex.g:5008:2: rule__EnumMember__Group__0__Impl rule__EnumMember__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__EnumMember__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EnumMember__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group__0"


    // $ANTLR start "rule__EnumMember__Group__0__Impl"
    // InternalReflex.g:5015:1: rule__EnumMember__Group__0__Impl : ( ( rule__EnumMember__NameAssignment_0 ) ) ;
    public final void rule__EnumMember__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5019:1: ( ( ( rule__EnumMember__NameAssignment_0 ) ) )
            // InternalReflex.g:5020:1: ( ( rule__EnumMember__NameAssignment_0 ) )
            {
            // InternalReflex.g:5020:1: ( ( rule__EnumMember__NameAssignment_0 ) )
            // InternalReflex.g:5021:2: ( rule__EnumMember__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getNameAssignment_0()); 
            }
            // InternalReflex.g:5022:2: ( rule__EnumMember__NameAssignment_0 )
            // InternalReflex.g:5022:3: rule__EnumMember__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__EnumMember__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group__0__Impl"


    // $ANTLR start "rule__EnumMember__Group__1"
    // InternalReflex.g:5030:1: rule__EnumMember__Group__1 : rule__EnumMember__Group__1__Impl ;
    public final void rule__EnumMember__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5034:1: ( rule__EnumMember__Group__1__Impl )
            // InternalReflex.g:5035:2: rule__EnumMember__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnumMember__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group__1"


    // $ANTLR start "rule__EnumMember__Group__1__Impl"
    // InternalReflex.g:5041:1: rule__EnumMember__Group__1__Impl : ( ( rule__EnumMember__Group_1__0 )? ) ;
    public final void rule__EnumMember__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5045:1: ( ( ( rule__EnumMember__Group_1__0 )? ) )
            // InternalReflex.g:5046:1: ( ( rule__EnumMember__Group_1__0 )? )
            {
            // InternalReflex.g:5046:1: ( ( rule__EnumMember__Group_1__0 )? )
            // InternalReflex.g:5047:2: ( rule__EnumMember__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getGroup_1()); 
            }
            // InternalReflex.g:5048:2: ( rule__EnumMember__Group_1__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==47) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalReflex.g:5048:3: rule__EnumMember__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnumMember__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group__1__Impl"


    // $ANTLR start "rule__EnumMember__Group_1__0"
    // InternalReflex.g:5057:1: rule__EnumMember__Group_1__0 : rule__EnumMember__Group_1__0__Impl rule__EnumMember__Group_1__1 ;
    public final void rule__EnumMember__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5061:1: ( rule__EnumMember__Group_1__0__Impl rule__EnumMember__Group_1__1 )
            // InternalReflex.g:5062:2: rule__EnumMember__Group_1__0__Impl rule__EnumMember__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__EnumMember__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EnumMember__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group_1__0"


    // $ANTLR start "rule__EnumMember__Group_1__0__Impl"
    // InternalReflex.g:5069:1: rule__EnumMember__Group_1__0__Impl : ( '=' ) ;
    public final void rule__EnumMember__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5073:1: ( ( '=' ) )
            // InternalReflex.g:5074:1: ( '=' )
            {
            // InternalReflex.g:5074:1: ( '=' )
            // InternalReflex.g:5075:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group_1__0__Impl"


    // $ANTLR start "rule__EnumMember__Group_1__1"
    // InternalReflex.g:5084:1: rule__EnumMember__Group_1__1 : rule__EnumMember__Group_1__1__Impl ;
    public final void rule__EnumMember__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5088:1: ( rule__EnumMember__Group_1__1__Impl )
            // InternalReflex.g:5089:2: rule__EnumMember__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnumMember__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group_1__1"


    // $ANTLR start "rule__EnumMember__Group_1__1__Impl"
    // InternalReflex.g:5095:1: rule__EnumMember__Group_1__1__Impl : ( ( rule__EnumMember__ValueAssignment_1_1 ) ) ;
    public final void rule__EnumMember__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5099:1: ( ( ( rule__EnumMember__ValueAssignment_1_1 ) ) )
            // InternalReflex.g:5100:1: ( ( rule__EnumMember__ValueAssignment_1_1 ) )
            {
            // InternalReflex.g:5100:1: ( ( rule__EnumMember__ValueAssignment_1_1 ) )
            // InternalReflex.g:5101:2: ( rule__EnumMember__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getValueAssignment_1_1()); 
            }
            // InternalReflex.g:5102:2: ( rule__EnumMember__ValueAssignment_1_1 )
            // InternalReflex.g:5102:3: rule__EnumMember__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__EnumMember__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__Group_1__1__Impl"


    // $ANTLR start "rule__Statement__Group_0__0"
    // InternalReflex.g:5111:1: rule__Statement__Group_0__0 : rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1 ;
    public final void rule__Statement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5115:1: ( rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1 )
            // InternalReflex.g:5116:2: rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1
            {
            pushFollow(FOLLOW_11);
            rule__Statement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__0"


    // $ANTLR start "rule__Statement__Group_0__0__Impl"
    // InternalReflex.g:5123:1: rule__Statement__Group_0__0__Impl : ( () ) ;
    public final void rule__Statement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5127:1: ( ( () ) )
            // InternalReflex.g:5128:1: ( () )
            {
            // InternalReflex.g:5128:1: ( () )
            // InternalReflex.g:5129:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getStatementAction_0_0()); 
            }
            // InternalReflex.g:5130:2: ()
            // InternalReflex.g:5130:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getStatementAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__0__Impl"


    // $ANTLR start "rule__Statement__Group_0__1"
    // InternalReflex.g:5138:1: rule__Statement__Group_0__1 : rule__Statement__Group_0__1__Impl ;
    public final void rule__Statement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5142:1: ( rule__Statement__Group_0__1__Impl )
            // InternalReflex.g:5143:2: rule__Statement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__1"


    // $ANTLR start "rule__Statement__Group_0__1__Impl"
    // InternalReflex.g:5149:1: rule__Statement__Group_0__1__Impl : ( ';' ) ;
    public final void rule__Statement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5153:1: ( ( ';' ) )
            // InternalReflex.g:5154:1: ( ';' )
            {
            // InternalReflex.g:5154:1: ( ';' )
            // InternalReflex.g:5155:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__1__Impl"


    // $ANTLR start "rule__Statement__Group_10__0"
    // InternalReflex.g:5165:1: rule__Statement__Group_10__0 : rule__Statement__Group_10__0__Impl rule__Statement__Group_10__1 ;
    public final void rule__Statement__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5169:1: ( rule__Statement__Group_10__0__Impl rule__Statement__Group_10__1 )
            // InternalReflex.g:5170:2: rule__Statement__Group_10__0__Impl rule__Statement__Group_10__1
            {
            pushFollow(FOLLOW_11);
            rule__Statement__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Statement__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_10__0"


    // $ANTLR start "rule__Statement__Group_10__0__Impl"
    // InternalReflex.g:5177:1: rule__Statement__Group_10__0__Impl : ( ruleExpression ) ;
    public final void rule__Statement__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5181:1: ( ( ruleExpression ) )
            // InternalReflex.g:5182:1: ( ruleExpression )
            {
            // InternalReflex.g:5182:1: ( ruleExpression )
            // InternalReflex.g:5183:2: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_10_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_10__0__Impl"


    // $ANTLR start "rule__Statement__Group_10__1"
    // InternalReflex.g:5192:1: rule__Statement__Group_10__1 : rule__Statement__Group_10__1__Impl ;
    public final void rule__Statement__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5196:1: ( rule__Statement__Group_10__1__Impl )
            // InternalReflex.g:5197:2: rule__Statement__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_10__1"


    // $ANTLR start "rule__Statement__Group_10__1__Impl"
    // InternalReflex.g:5203:1: rule__Statement__Group_10__1__Impl : ( ';' ) ;
    public final void rule__Statement__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5207:1: ( ( ';' ) )
            // InternalReflex.g:5208:1: ( ';' )
            {
            // InternalReflex.g:5208:1: ( ';' )
            // InternalReflex.g:5209:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getSemicolonKeyword_10_1()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getSemicolonKeyword_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_10__1__Impl"


    // $ANTLR start "rule__StatementSequence__Group__0"
    // InternalReflex.g:5219:1: rule__StatementSequence__Group__0 : rule__StatementSequence__Group__0__Impl rule__StatementSequence__Group__1 ;
    public final void rule__StatementSequence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5223:1: ( rule__StatementSequence__Group__0__Impl rule__StatementSequence__Group__1 )
            // InternalReflex.g:5224:2: rule__StatementSequence__Group__0__Impl rule__StatementSequence__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__StatementSequence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StatementSequence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatementSequence__Group__0"


    // $ANTLR start "rule__StatementSequence__Group__0__Impl"
    // InternalReflex.g:5231:1: rule__StatementSequence__Group__0__Impl : ( () ) ;
    public final void rule__StatementSequence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5235:1: ( ( () ) )
            // InternalReflex.g:5236:1: ( () )
            {
            // InternalReflex.g:5236:1: ( () )
            // InternalReflex.g:5237:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0()); 
            }
            // InternalReflex.g:5238:2: ()
            // InternalReflex.g:5238:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatementSequence__Group__0__Impl"


    // $ANTLR start "rule__StatementSequence__Group__1"
    // InternalReflex.g:5246:1: rule__StatementSequence__Group__1 : rule__StatementSequence__Group__1__Impl ;
    public final void rule__StatementSequence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5250:1: ( rule__StatementSequence__Group__1__Impl )
            // InternalReflex.g:5251:2: rule__StatementSequence__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StatementSequence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatementSequence__Group__1"


    // $ANTLR start "rule__StatementSequence__Group__1__Impl"
    // InternalReflex.g:5257:1: rule__StatementSequence__Group__1__Impl : ( ( rule__StatementSequence__StatementsAssignment_1 )* ) ;
    public final void rule__StatementSequence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5261:1: ( ( ( rule__StatementSequence__StatementsAssignment_1 )* ) )
            // InternalReflex.g:5262:1: ( ( rule__StatementSequence__StatementsAssignment_1 )* )
            {
            // InternalReflex.g:5262:1: ( ( rule__StatementSequence__StatementsAssignment_1 )* )
            // InternalReflex.g:5263:2: ( rule__StatementSequence__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementSequenceAccess().getStatementsAssignment_1()); 
            }
            // InternalReflex.g:5264:2: ( rule__StatementSequence__StatementsAssignment_1 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_ID||LA41_0==RULE_INTEGER||(LA41_0>=RULE_TIME && LA41_0<=RULE_BOOL_LITERAL)||(LA41_0>=43 && LA41_0<=46)||(LA41_0>=57 && LA41_0<=60)||LA41_0==86||(LA41_0>=91 && LA41_0<=92)||LA41_0==100||LA41_0==104||LA41_0==106||(LA41_0>=109 && LA41_0<=111)||LA41_0==113) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalReflex.g:5264:3: rule__StatementSequence__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__StatementSequence__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementSequenceAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatementSequence__Group__1__Impl"


    // $ANTLR start "rule__CompoundStatement__Group__0"
    // InternalReflex.g:5273:1: rule__CompoundStatement__Group__0 : rule__CompoundStatement__Group__0__Impl rule__CompoundStatement__Group__1 ;
    public final void rule__CompoundStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5277:1: ( rule__CompoundStatement__Group__0__Impl rule__CompoundStatement__Group__1 )
            // InternalReflex.g:5278:2: rule__CompoundStatement__Group__0__Impl rule__CompoundStatement__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__CompoundStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__0"


    // $ANTLR start "rule__CompoundStatement__Group__0__Impl"
    // InternalReflex.g:5285:1: rule__CompoundStatement__Group__0__Impl : ( () ) ;
    public final void rule__CompoundStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5289:1: ( ( () ) )
            // InternalReflex.g:5290:1: ( () )
            {
            // InternalReflex.g:5290:1: ( () )
            // InternalReflex.g:5291:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); 
            }
            // InternalReflex.g:5292:2: ()
            // InternalReflex.g:5292:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__0__Impl"


    // $ANTLR start "rule__CompoundStatement__Group__1"
    // InternalReflex.g:5300:1: rule__CompoundStatement__Group__1 : rule__CompoundStatement__Group__1__Impl rule__CompoundStatement__Group__2 ;
    public final void rule__CompoundStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5304:1: ( rule__CompoundStatement__Group__1__Impl rule__CompoundStatement__Group__2 )
            // InternalReflex.g:5305:2: rule__CompoundStatement__Group__1__Impl rule__CompoundStatement__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__CompoundStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__1"


    // $ANTLR start "rule__CompoundStatement__Group__1__Impl"
    // InternalReflex.g:5312:1: rule__CompoundStatement__Group__1__Impl : ( '{' ) ;
    public final void rule__CompoundStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5316:1: ( ( '{' ) )
            // InternalReflex.g:5317:1: ( '{' )
            {
            // InternalReflex.g:5317:1: ( '{' )
            // InternalReflex.g:5318:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__1__Impl"


    // $ANTLR start "rule__CompoundStatement__Group__2"
    // InternalReflex.g:5327:1: rule__CompoundStatement__Group__2 : rule__CompoundStatement__Group__2__Impl rule__CompoundStatement__Group__3 ;
    public final void rule__CompoundStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5331:1: ( rule__CompoundStatement__Group__2__Impl rule__CompoundStatement__Group__3 )
            // InternalReflex.g:5332:2: rule__CompoundStatement__Group__2__Impl rule__CompoundStatement__Group__3
            {
            pushFollow(FOLLOW_39);
            rule__CompoundStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompoundStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__2"


    // $ANTLR start "rule__CompoundStatement__Group__2__Impl"
    // InternalReflex.g:5339:1: rule__CompoundStatement__Group__2__Impl : ( ( rule__CompoundStatement__StatementsAssignment_2 )* ) ;
    public final void rule__CompoundStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5343:1: ( ( ( rule__CompoundStatement__StatementsAssignment_2 )* ) )
            // InternalReflex.g:5344:1: ( ( rule__CompoundStatement__StatementsAssignment_2 )* )
            {
            // InternalReflex.g:5344:1: ( ( rule__CompoundStatement__StatementsAssignment_2 )* )
            // InternalReflex.g:5345:2: ( rule__CompoundStatement__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_2()); 
            }
            // InternalReflex.g:5346:2: ( rule__CompoundStatement__StatementsAssignment_2 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_ID||LA42_0==RULE_INTEGER||(LA42_0>=RULE_TIME && LA42_0<=RULE_BOOL_LITERAL)||(LA42_0>=43 && LA42_0<=46)||(LA42_0>=57 && LA42_0<=60)||LA42_0==86||(LA42_0>=91 && LA42_0<=92)||LA42_0==100||LA42_0==104||LA42_0==106||(LA42_0>=109 && LA42_0<=111)||LA42_0==113) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalReflex.g:5346:3: rule__CompoundStatement__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__CompoundStatement__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__2__Impl"


    // $ANTLR start "rule__CompoundStatement__Group__3"
    // InternalReflex.g:5354:1: rule__CompoundStatement__Group__3 : rule__CompoundStatement__Group__3__Impl ;
    public final void rule__CompoundStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5358:1: ( rule__CompoundStatement__Group__3__Impl )
            // InternalReflex.g:5359:2: rule__CompoundStatement__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompoundStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__3"


    // $ANTLR start "rule__CompoundStatement__Group__3__Impl"
    // InternalReflex.g:5365:1: rule__CompoundStatement__Group__3__Impl : ( '}' ) ;
    public final void rule__CompoundStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5369:1: ( ( '}' ) )
            // InternalReflex.g:5370:1: ( '}' )
            {
            // InternalReflex.g:5370:1: ( '}' )
            // InternalReflex.g:5371:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__Group__3__Impl"


    // $ANTLR start "rule__IfElseStat__Group__0"
    // InternalReflex.g:5381:1: rule__IfElseStat__Group__0 : rule__IfElseStat__Group__0__Impl rule__IfElseStat__Group__1 ;
    public final void rule__IfElseStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5385:1: ( rule__IfElseStat__Group__0__Impl rule__IfElseStat__Group__1 )
            // InternalReflex.g:5386:2: rule__IfElseStat__Group__0__Impl rule__IfElseStat__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__IfElseStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__0"


    // $ANTLR start "rule__IfElseStat__Group__0__Impl"
    // InternalReflex.g:5393:1: rule__IfElseStat__Group__0__Impl : ( 'if' ) ;
    public final void rule__IfElseStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5397:1: ( ( 'if' ) )
            // InternalReflex.g:5398:1: ( 'if' )
            {
            // InternalReflex.g:5398:1: ( 'if' )
            // InternalReflex.g:5399:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getIfKeyword_0()); 
            }
            match(input,104,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getIfKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__0__Impl"


    // $ANTLR start "rule__IfElseStat__Group__1"
    // InternalReflex.g:5408:1: rule__IfElseStat__Group__1 : rule__IfElseStat__Group__1__Impl rule__IfElseStat__Group__2 ;
    public final void rule__IfElseStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5412:1: ( rule__IfElseStat__Group__1__Impl rule__IfElseStat__Group__2 )
            // InternalReflex.g:5413:2: rule__IfElseStat__Group__1__Impl rule__IfElseStat__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__IfElseStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__1"


    // $ANTLR start "rule__IfElseStat__Group__1__Impl"
    // InternalReflex.g:5420:1: rule__IfElseStat__Group__1__Impl : ( '(' ) ;
    public final void rule__IfElseStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5424:1: ( ( '(' ) )
            // InternalReflex.g:5425:1: ( '(' )
            {
            // InternalReflex.g:5425:1: ( '(' )
            // InternalReflex.g:5426:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__1__Impl"


    // $ANTLR start "rule__IfElseStat__Group__2"
    // InternalReflex.g:5435:1: rule__IfElseStat__Group__2 : rule__IfElseStat__Group__2__Impl rule__IfElseStat__Group__3 ;
    public final void rule__IfElseStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5439:1: ( rule__IfElseStat__Group__2__Impl rule__IfElseStat__Group__3 )
            // InternalReflex.g:5440:2: rule__IfElseStat__Group__2__Impl rule__IfElseStat__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__IfElseStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__2"


    // $ANTLR start "rule__IfElseStat__Group__2__Impl"
    // InternalReflex.g:5447:1: rule__IfElseStat__Group__2__Impl : ( ( rule__IfElseStat__CondAssignment_2 ) ) ;
    public final void rule__IfElseStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5451:1: ( ( ( rule__IfElseStat__CondAssignment_2 ) ) )
            // InternalReflex.g:5452:1: ( ( rule__IfElseStat__CondAssignment_2 ) )
            {
            // InternalReflex.g:5452:1: ( ( rule__IfElseStat__CondAssignment_2 ) )
            // InternalReflex.g:5453:2: ( rule__IfElseStat__CondAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getCondAssignment_2()); 
            }
            // InternalReflex.g:5454:2: ( rule__IfElseStat__CondAssignment_2 )
            // InternalReflex.g:5454:3: rule__IfElseStat__CondAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__IfElseStat__CondAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getCondAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__2__Impl"


    // $ANTLR start "rule__IfElseStat__Group__3"
    // InternalReflex.g:5462:1: rule__IfElseStat__Group__3 : rule__IfElseStat__Group__3__Impl rule__IfElseStat__Group__4 ;
    public final void rule__IfElseStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5466:1: ( rule__IfElseStat__Group__3__Impl rule__IfElseStat__Group__4 )
            // InternalReflex.g:5467:2: rule__IfElseStat__Group__3__Impl rule__IfElseStat__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__IfElseStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__3"


    // $ANTLR start "rule__IfElseStat__Group__3__Impl"
    // InternalReflex.g:5474:1: rule__IfElseStat__Group__3__Impl : ( ')' ) ;
    public final void rule__IfElseStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5478:1: ( ( ')' ) )
            // InternalReflex.g:5479:1: ( ')' )
            {
            // InternalReflex.g:5479:1: ( ')' )
            // InternalReflex.g:5480:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__3__Impl"


    // $ANTLR start "rule__IfElseStat__Group__4"
    // InternalReflex.g:5489:1: rule__IfElseStat__Group__4 : rule__IfElseStat__Group__4__Impl rule__IfElseStat__Group__5 ;
    public final void rule__IfElseStat__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5493:1: ( rule__IfElseStat__Group__4__Impl rule__IfElseStat__Group__5 )
            // InternalReflex.g:5494:2: rule__IfElseStat__Group__4__Impl rule__IfElseStat__Group__5
            {
            pushFollow(FOLLOW_40);
            rule__IfElseStat__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__4"


    // $ANTLR start "rule__IfElseStat__Group__4__Impl"
    // InternalReflex.g:5501:1: rule__IfElseStat__Group__4__Impl : ( ( rule__IfElseStat__ThenAssignment_4 ) ) ;
    public final void rule__IfElseStat__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5505:1: ( ( ( rule__IfElseStat__ThenAssignment_4 ) ) )
            // InternalReflex.g:5506:1: ( ( rule__IfElseStat__ThenAssignment_4 ) )
            {
            // InternalReflex.g:5506:1: ( ( rule__IfElseStat__ThenAssignment_4 ) )
            // InternalReflex.g:5507:2: ( rule__IfElseStat__ThenAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getThenAssignment_4()); 
            }
            // InternalReflex.g:5508:2: ( rule__IfElseStat__ThenAssignment_4 )
            // InternalReflex.g:5508:3: rule__IfElseStat__ThenAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__IfElseStat__ThenAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getThenAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__4__Impl"


    // $ANTLR start "rule__IfElseStat__Group__5"
    // InternalReflex.g:5516:1: rule__IfElseStat__Group__5 : rule__IfElseStat__Group__5__Impl ;
    public final void rule__IfElseStat__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5520:1: ( rule__IfElseStat__Group__5__Impl )
            // InternalReflex.g:5521:2: rule__IfElseStat__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__5"


    // $ANTLR start "rule__IfElseStat__Group__5__Impl"
    // InternalReflex.g:5527:1: rule__IfElseStat__Group__5__Impl : ( ( rule__IfElseStat__Group_5__0 )? ) ;
    public final void rule__IfElseStat__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5531:1: ( ( ( rule__IfElseStat__Group_5__0 )? ) )
            // InternalReflex.g:5532:1: ( ( rule__IfElseStat__Group_5__0 )? )
            {
            // InternalReflex.g:5532:1: ( ( rule__IfElseStat__Group_5__0 )? )
            // InternalReflex.g:5533:2: ( rule__IfElseStat__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getGroup_5()); 
            }
            // InternalReflex.g:5534:2: ( rule__IfElseStat__Group_5__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==105) ) {
                int LA43_1 = input.LA(2);

                if ( (synpred90_InternalReflex()) ) {
                    alt43=1;
                }
            }
            switch (alt43) {
                case 1 :
                    // InternalReflex.g:5534:3: rule__IfElseStat__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IfElseStat__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group__5__Impl"


    // $ANTLR start "rule__IfElseStat__Group_5__0"
    // InternalReflex.g:5543:1: rule__IfElseStat__Group_5__0 : rule__IfElseStat__Group_5__0__Impl rule__IfElseStat__Group_5__1 ;
    public final void rule__IfElseStat__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5547:1: ( rule__IfElseStat__Group_5__0__Impl rule__IfElseStat__Group_5__1 )
            // InternalReflex.g:5548:2: rule__IfElseStat__Group_5__0__Impl rule__IfElseStat__Group_5__1
            {
            pushFollow(FOLLOW_18);
            rule__IfElseStat__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group_5__0"


    // $ANTLR start "rule__IfElseStat__Group_5__0__Impl"
    // InternalReflex.g:5555:1: rule__IfElseStat__Group_5__0__Impl : ( ( 'else' ) ) ;
    public final void rule__IfElseStat__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5559:1: ( ( ( 'else' ) ) )
            // InternalReflex.g:5560:1: ( ( 'else' ) )
            {
            // InternalReflex.g:5560:1: ( ( 'else' ) )
            // InternalReflex.g:5561:2: ( 'else' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getElseKeyword_5_0()); 
            }
            // InternalReflex.g:5562:2: ( 'else' )
            // InternalReflex.g:5562:3: 'else'
            {
            match(input,105,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getElseKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group_5__0__Impl"


    // $ANTLR start "rule__IfElseStat__Group_5__1"
    // InternalReflex.g:5570:1: rule__IfElseStat__Group_5__1 : rule__IfElseStat__Group_5__1__Impl ;
    public final void rule__IfElseStat__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5574:1: ( rule__IfElseStat__Group_5__1__Impl )
            // InternalReflex.g:5575:2: rule__IfElseStat__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IfElseStat__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group_5__1"


    // $ANTLR start "rule__IfElseStat__Group_5__1__Impl"
    // InternalReflex.g:5581:1: rule__IfElseStat__Group_5__1__Impl : ( ( rule__IfElseStat__ElseAssignment_5_1 ) ) ;
    public final void rule__IfElseStat__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5585:1: ( ( ( rule__IfElseStat__ElseAssignment_5_1 ) ) )
            // InternalReflex.g:5586:1: ( ( rule__IfElseStat__ElseAssignment_5_1 ) )
            {
            // InternalReflex.g:5586:1: ( ( rule__IfElseStat__ElseAssignment_5_1 ) )
            // InternalReflex.g:5587:2: ( rule__IfElseStat__ElseAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getElseAssignment_5_1()); 
            }
            // InternalReflex.g:5588:2: ( rule__IfElseStat__ElseAssignment_5_1 )
            // InternalReflex.g:5588:3: rule__IfElseStat__ElseAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__IfElseStat__ElseAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getElseAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__Group_5__1__Impl"


    // $ANTLR start "rule__SwitchStat__Group__0"
    // InternalReflex.g:5597:1: rule__SwitchStat__Group__0 : rule__SwitchStat__Group__0__Impl rule__SwitchStat__Group__1 ;
    public final void rule__SwitchStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5601:1: ( rule__SwitchStat__Group__0__Impl rule__SwitchStat__Group__1 )
            // InternalReflex.g:5602:2: rule__SwitchStat__Group__0__Impl rule__SwitchStat__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__SwitchStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__0"


    // $ANTLR start "rule__SwitchStat__Group__0__Impl"
    // InternalReflex.g:5609:1: rule__SwitchStat__Group__0__Impl : ( 'switch' ) ;
    public final void rule__SwitchStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5613:1: ( ( 'switch' ) )
            // InternalReflex.g:5614:1: ( 'switch' )
            {
            // InternalReflex.g:5614:1: ( 'switch' )
            // InternalReflex.g:5615:2: 'switch'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getSwitchKeyword_0()); 
            }
            match(input,106,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getSwitchKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__0__Impl"


    // $ANTLR start "rule__SwitchStat__Group__1"
    // InternalReflex.g:5624:1: rule__SwitchStat__Group__1 : rule__SwitchStat__Group__1__Impl rule__SwitchStat__Group__2 ;
    public final void rule__SwitchStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5628:1: ( rule__SwitchStat__Group__1__Impl rule__SwitchStat__Group__2 )
            // InternalReflex.g:5629:2: rule__SwitchStat__Group__1__Impl rule__SwitchStat__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__SwitchStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__1"


    // $ANTLR start "rule__SwitchStat__Group__1__Impl"
    // InternalReflex.g:5636:1: rule__SwitchStat__Group__1__Impl : ( '(' ) ;
    public final void rule__SwitchStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5640:1: ( ( '(' ) )
            // InternalReflex.g:5641:1: ( '(' )
            {
            // InternalReflex.g:5641:1: ( '(' )
            // InternalReflex.g:5642:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__1__Impl"


    // $ANTLR start "rule__SwitchStat__Group__2"
    // InternalReflex.g:5651:1: rule__SwitchStat__Group__2 : rule__SwitchStat__Group__2__Impl rule__SwitchStat__Group__3 ;
    public final void rule__SwitchStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5655:1: ( rule__SwitchStat__Group__2__Impl rule__SwitchStat__Group__3 )
            // InternalReflex.g:5656:2: rule__SwitchStat__Group__2__Impl rule__SwitchStat__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__SwitchStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__2"


    // $ANTLR start "rule__SwitchStat__Group__2__Impl"
    // InternalReflex.g:5663:1: rule__SwitchStat__Group__2__Impl : ( ( rule__SwitchStat__ExprAssignment_2 ) ) ;
    public final void rule__SwitchStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5667:1: ( ( ( rule__SwitchStat__ExprAssignment_2 ) ) )
            // InternalReflex.g:5668:1: ( ( rule__SwitchStat__ExprAssignment_2 ) )
            {
            // InternalReflex.g:5668:1: ( ( rule__SwitchStat__ExprAssignment_2 ) )
            // InternalReflex.g:5669:2: ( rule__SwitchStat__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getExprAssignment_2()); 
            }
            // InternalReflex.g:5670:2: ( rule__SwitchStat__ExprAssignment_2 )
            // InternalReflex.g:5670:3: rule__SwitchStat__ExprAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SwitchStat__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__2__Impl"


    // $ANTLR start "rule__SwitchStat__Group__3"
    // InternalReflex.g:5678:1: rule__SwitchStat__Group__3 : rule__SwitchStat__Group__3__Impl rule__SwitchStat__Group__4 ;
    public final void rule__SwitchStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5682:1: ( rule__SwitchStat__Group__3__Impl rule__SwitchStat__Group__4 )
            // InternalReflex.g:5683:2: rule__SwitchStat__Group__3__Impl rule__SwitchStat__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__SwitchStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__3"


    // $ANTLR start "rule__SwitchStat__Group__3__Impl"
    // InternalReflex.g:5690:1: rule__SwitchStat__Group__3__Impl : ( ')' ) ;
    public final void rule__SwitchStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5694:1: ( ( ')' ) )
            // InternalReflex.g:5695:1: ( ')' )
            {
            // InternalReflex.g:5695:1: ( ')' )
            // InternalReflex.g:5696:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__3__Impl"


    // $ANTLR start "rule__SwitchStat__Group__4"
    // InternalReflex.g:5705:1: rule__SwitchStat__Group__4 : rule__SwitchStat__Group__4__Impl rule__SwitchStat__Group__5 ;
    public final void rule__SwitchStat__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5709:1: ( rule__SwitchStat__Group__4__Impl rule__SwitchStat__Group__5 )
            // InternalReflex.g:5710:2: rule__SwitchStat__Group__4__Impl rule__SwitchStat__Group__5
            {
            pushFollow(FOLLOW_41);
            rule__SwitchStat__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__4"


    // $ANTLR start "rule__SwitchStat__Group__4__Impl"
    // InternalReflex.g:5717:1: rule__SwitchStat__Group__4__Impl : ( '{' ) ;
    public final void rule__SwitchStat__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5721:1: ( ( '{' ) )
            // InternalReflex.g:5722:1: ( '{' )
            {
            // InternalReflex.g:5722:1: ( '{' )
            // InternalReflex.g:5723:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getLeftCurlyBracketKeyword_4()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getLeftCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__4__Impl"


    // $ANTLR start "rule__SwitchStat__Group__5"
    // InternalReflex.g:5732:1: rule__SwitchStat__Group__5 : rule__SwitchStat__Group__5__Impl rule__SwitchStat__Group__6 ;
    public final void rule__SwitchStat__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5736:1: ( rule__SwitchStat__Group__5__Impl rule__SwitchStat__Group__6 )
            // InternalReflex.g:5737:2: rule__SwitchStat__Group__5__Impl rule__SwitchStat__Group__6
            {
            pushFollow(FOLLOW_41);
            rule__SwitchStat__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__5"


    // $ANTLR start "rule__SwitchStat__Group__5__Impl"
    // InternalReflex.g:5744:1: rule__SwitchStat__Group__5__Impl : ( ( rule__SwitchStat__OptionsAssignment_5 )* ) ;
    public final void rule__SwitchStat__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5748:1: ( ( ( rule__SwitchStat__OptionsAssignment_5 )* ) )
            // InternalReflex.g:5749:1: ( ( rule__SwitchStat__OptionsAssignment_5 )* )
            {
            // InternalReflex.g:5749:1: ( ( rule__SwitchStat__OptionsAssignment_5 )* )
            // InternalReflex.g:5750:2: ( rule__SwitchStat__OptionsAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getOptionsAssignment_5()); 
            }
            // InternalReflex.g:5751:2: ( rule__SwitchStat__OptionsAssignment_5 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==107) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalReflex.g:5751:3: rule__SwitchStat__OptionsAssignment_5
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__SwitchStat__OptionsAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getOptionsAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__5__Impl"


    // $ANTLR start "rule__SwitchStat__Group__6"
    // InternalReflex.g:5759:1: rule__SwitchStat__Group__6 : rule__SwitchStat__Group__6__Impl ;
    public final void rule__SwitchStat__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5763:1: ( rule__SwitchStat__Group__6__Impl )
            // InternalReflex.g:5764:2: rule__SwitchStat__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SwitchStat__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__6"


    // $ANTLR start "rule__SwitchStat__Group__6__Impl"
    // InternalReflex.g:5770:1: rule__SwitchStat__Group__6__Impl : ( '}' ) ;
    public final void rule__SwitchStat__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5774:1: ( ( '}' ) )
            // InternalReflex.g:5775:1: ( '}' )
            {
            // InternalReflex.g:5775:1: ( '}' )
            // InternalReflex.g:5776:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__Group__6__Impl"


    // $ANTLR start "rule__CaseStat__Group__0"
    // InternalReflex.g:5786:1: rule__CaseStat__Group__0 : rule__CaseStat__Group__0__Impl rule__CaseStat__Group__1 ;
    public final void rule__CaseStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5790:1: ( rule__CaseStat__Group__0__Impl rule__CaseStat__Group__1 )
            // InternalReflex.g:5791:2: rule__CaseStat__Group__0__Impl rule__CaseStat__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__CaseStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__0"


    // $ANTLR start "rule__CaseStat__Group__0__Impl"
    // InternalReflex.g:5798:1: rule__CaseStat__Group__0__Impl : ( 'case' ) ;
    public final void rule__CaseStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5802:1: ( ( 'case' ) )
            // InternalReflex.g:5803:1: ( 'case' )
            {
            // InternalReflex.g:5803:1: ( 'case' )
            // InternalReflex.g:5804:2: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getCaseKeyword_0()); 
            }
            match(input,107,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getCaseKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__0__Impl"


    // $ANTLR start "rule__CaseStat__Group__1"
    // InternalReflex.g:5813:1: rule__CaseStat__Group__1 : rule__CaseStat__Group__1__Impl rule__CaseStat__Group__2 ;
    public final void rule__CaseStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5817:1: ( rule__CaseStat__Group__1__Impl rule__CaseStat__Group__2 )
            // InternalReflex.g:5818:2: rule__CaseStat__Group__1__Impl rule__CaseStat__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__CaseStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__1"


    // $ANTLR start "rule__CaseStat__Group__1__Impl"
    // InternalReflex.g:5825:1: rule__CaseStat__Group__1__Impl : ( ( rule__CaseStat__OptionAssignment_1 ) ) ;
    public final void rule__CaseStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5829:1: ( ( ( rule__CaseStat__OptionAssignment_1 ) ) )
            // InternalReflex.g:5830:1: ( ( rule__CaseStat__OptionAssignment_1 ) )
            {
            // InternalReflex.g:5830:1: ( ( rule__CaseStat__OptionAssignment_1 ) )
            // InternalReflex.g:5831:2: ( rule__CaseStat__OptionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getOptionAssignment_1()); 
            }
            // InternalReflex.g:5832:2: ( rule__CaseStat__OptionAssignment_1 )
            // InternalReflex.g:5832:3: rule__CaseStat__OptionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CaseStat__OptionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getOptionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__1__Impl"


    // $ANTLR start "rule__CaseStat__Group__2"
    // InternalReflex.g:5840:1: rule__CaseStat__Group__2 : rule__CaseStat__Group__2__Impl rule__CaseStat__Group__3 ;
    public final void rule__CaseStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5844:1: ( rule__CaseStat__Group__2__Impl rule__CaseStat__Group__3 )
            // InternalReflex.g:5845:2: rule__CaseStat__Group__2__Impl rule__CaseStat__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__CaseStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__2"


    // $ANTLR start "rule__CaseStat__Group__2__Impl"
    // InternalReflex.g:5852:1: rule__CaseStat__Group__2__Impl : ( ':' ) ;
    public final void rule__CaseStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5856:1: ( ( ':' ) )
            // InternalReflex.g:5857:1: ( ':' )
            {
            // InternalReflex.g:5857:1: ( ':' )
            // InternalReflex.g:5858:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getColonKeyword_2()); 
            }
            match(input,94,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__2__Impl"


    // $ANTLR start "rule__CaseStat__Group__3"
    // InternalReflex.g:5867:1: rule__CaseStat__Group__3 : rule__CaseStat__Group__3__Impl rule__CaseStat__Group__4 ;
    public final void rule__CaseStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5871:1: ( rule__CaseStat__Group__3__Impl rule__CaseStat__Group__4 )
            // InternalReflex.g:5872:2: rule__CaseStat__Group__3__Impl rule__CaseStat__Group__4
            {
            pushFollow(FOLLOW_43);
            rule__CaseStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__3"


    // $ANTLR start "rule__CaseStat__Group__3__Impl"
    // InternalReflex.g:5879:1: rule__CaseStat__Group__3__Impl : ( ( rule__CaseStat__BodyAssignment_3 ) ) ;
    public final void rule__CaseStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5883:1: ( ( ( rule__CaseStat__BodyAssignment_3 ) ) )
            // InternalReflex.g:5884:1: ( ( rule__CaseStat__BodyAssignment_3 ) )
            {
            // InternalReflex.g:5884:1: ( ( rule__CaseStat__BodyAssignment_3 ) )
            // InternalReflex.g:5885:2: ( rule__CaseStat__BodyAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getBodyAssignment_3()); 
            }
            // InternalReflex.g:5886:2: ( rule__CaseStat__BodyAssignment_3 )
            // InternalReflex.g:5886:3: rule__CaseStat__BodyAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__CaseStat__BodyAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getBodyAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__3__Impl"


    // $ANTLR start "rule__CaseStat__Group__4"
    // InternalReflex.g:5894:1: rule__CaseStat__Group__4 : rule__CaseStat__Group__4__Impl rule__CaseStat__Group__5 ;
    public final void rule__CaseStat__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5898:1: ( rule__CaseStat__Group__4__Impl rule__CaseStat__Group__5 )
            // InternalReflex.g:5899:2: rule__CaseStat__Group__4__Impl rule__CaseStat__Group__5
            {
            pushFollow(FOLLOW_44);
            rule__CaseStat__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__4"


    // $ANTLR start "rule__CaseStat__Group__4__Impl"
    // InternalReflex.g:5906:1: rule__CaseStat__Group__4__Impl : ( ( rule__CaseStat__HasBreakAssignment_4 ) ) ;
    public final void rule__CaseStat__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5910:1: ( ( ( rule__CaseStat__HasBreakAssignment_4 ) ) )
            // InternalReflex.g:5911:1: ( ( rule__CaseStat__HasBreakAssignment_4 ) )
            {
            // InternalReflex.g:5911:1: ( ( rule__CaseStat__HasBreakAssignment_4 ) )
            // InternalReflex.g:5912:2: ( rule__CaseStat__HasBreakAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getHasBreakAssignment_4()); 
            }
            // InternalReflex.g:5913:2: ( rule__CaseStat__HasBreakAssignment_4 )
            // InternalReflex.g:5913:3: rule__CaseStat__HasBreakAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__CaseStat__HasBreakAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getHasBreakAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__4__Impl"


    // $ANTLR start "rule__CaseStat__Group__5"
    // InternalReflex.g:5921:1: rule__CaseStat__Group__5 : rule__CaseStat__Group__5__Impl ;
    public final void rule__CaseStat__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5925:1: ( rule__CaseStat__Group__5__Impl )
            // InternalReflex.g:5926:2: rule__CaseStat__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CaseStat__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__5"


    // $ANTLR start "rule__CaseStat__Group__5__Impl"
    // InternalReflex.g:5932:1: rule__CaseStat__Group__5__Impl : ( '}' ) ;
    public final void rule__CaseStat__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5936:1: ( ( '}' ) )
            // InternalReflex.g:5937:1: ( '}' )
            {
            // InternalReflex.g:5937:1: ( '}' )
            // InternalReflex.g:5938:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__Group__5__Impl"


    // $ANTLR start "rule__BreakStat__Group__0"
    // InternalReflex.g:5948:1: rule__BreakStat__Group__0 : rule__BreakStat__Group__0__Impl rule__BreakStat__Group__1 ;
    public final void rule__BreakStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5952:1: ( rule__BreakStat__Group__0__Impl rule__BreakStat__Group__1 )
            // InternalReflex.g:5953:2: rule__BreakStat__Group__0__Impl rule__BreakStat__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__BreakStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStat__Group__0"


    // $ANTLR start "rule__BreakStat__Group__0__Impl"
    // InternalReflex.g:5960:1: rule__BreakStat__Group__0__Impl : ( 'break' ) ;
    public final void rule__BreakStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5964:1: ( ( 'break' ) )
            // InternalReflex.g:5965:1: ( 'break' )
            {
            // InternalReflex.g:5965:1: ( 'break' )
            // InternalReflex.g:5966:2: 'break'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStatAccess().getBreakKeyword_0()); 
            }
            match(input,108,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStatAccess().getBreakKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStat__Group__0__Impl"


    // $ANTLR start "rule__BreakStat__Group__1"
    // InternalReflex.g:5975:1: rule__BreakStat__Group__1 : rule__BreakStat__Group__1__Impl ;
    public final void rule__BreakStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5979:1: ( rule__BreakStat__Group__1__Impl )
            // InternalReflex.g:5980:2: rule__BreakStat__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BreakStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStat__Group__1"


    // $ANTLR start "rule__BreakStat__Group__1__Impl"
    // InternalReflex.g:5986:1: rule__BreakStat__Group__1__Impl : ( ';' ) ;
    public final void rule__BreakStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:5990:1: ( ( ';' ) )
            // InternalReflex.g:5991:1: ( ';' )
            {
            // InternalReflex.g:5991:1: ( ';' )
            // InternalReflex.g:5992:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStatAccess().getSemicolonKeyword_1()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStatAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStat__Group__1__Impl"


    // $ANTLR start "rule__StartProcStat__Group__0"
    // InternalReflex.g:6002:1: rule__StartProcStat__Group__0 : rule__StartProcStat__Group__0__Impl rule__StartProcStat__Group__1 ;
    public final void rule__StartProcStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6006:1: ( rule__StartProcStat__Group__0__Impl rule__StartProcStat__Group__1 )
            // InternalReflex.g:6007:2: rule__StartProcStat__Group__0__Impl rule__StartProcStat__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__StartProcStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StartProcStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__0"


    // $ANTLR start "rule__StartProcStat__Group__0__Impl"
    // InternalReflex.g:6014:1: rule__StartProcStat__Group__0__Impl : ( 'start' ) ;
    public final void rule__StartProcStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6018:1: ( ( 'start' ) )
            // InternalReflex.g:6019:1: ( 'start' )
            {
            // InternalReflex.g:6019:1: ( 'start' )
            // InternalReflex.g:6020:2: 'start'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getStartKeyword_0()); 
            }
            match(input,109,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getStartKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__0__Impl"


    // $ANTLR start "rule__StartProcStat__Group__1"
    // InternalReflex.g:6029:1: rule__StartProcStat__Group__1 : rule__StartProcStat__Group__1__Impl rule__StartProcStat__Group__2 ;
    public final void rule__StartProcStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6033:1: ( rule__StartProcStat__Group__1__Impl rule__StartProcStat__Group__2 )
            // InternalReflex.g:6034:2: rule__StartProcStat__Group__1__Impl rule__StartProcStat__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__StartProcStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StartProcStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__1"


    // $ANTLR start "rule__StartProcStat__Group__1__Impl"
    // InternalReflex.g:6041:1: rule__StartProcStat__Group__1__Impl : ( 'process' ) ;
    public final void rule__StartProcStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6045:1: ( ( 'process' ) )
            // InternalReflex.g:6046:1: ( 'process' )
            {
            // InternalReflex.g:6046:1: ( 'process' )
            // InternalReflex.g:6047:2: 'process'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getProcessKeyword_1()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getProcessKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__1__Impl"


    // $ANTLR start "rule__StartProcStat__Group__2"
    // InternalReflex.g:6056:1: rule__StartProcStat__Group__2 : rule__StartProcStat__Group__2__Impl rule__StartProcStat__Group__3 ;
    public final void rule__StartProcStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6060:1: ( rule__StartProcStat__Group__2__Impl rule__StartProcStat__Group__3 )
            // InternalReflex.g:6061:2: rule__StartProcStat__Group__2__Impl rule__StartProcStat__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__StartProcStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StartProcStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__2"


    // $ANTLR start "rule__StartProcStat__Group__2__Impl"
    // InternalReflex.g:6068:1: rule__StartProcStat__Group__2__Impl : ( ( rule__StartProcStat__ProcessAssignment_2 ) ) ;
    public final void rule__StartProcStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6072:1: ( ( ( rule__StartProcStat__ProcessAssignment_2 ) ) )
            // InternalReflex.g:6073:1: ( ( rule__StartProcStat__ProcessAssignment_2 ) )
            {
            // InternalReflex.g:6073:1: ( ( rule__StartProcStat__ProcessAssignment_2 ) )
            // InternalReflex.g:6074:2: ( rule__StartProcStat__ProcessAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getProcessAssignment_2()); 
            }
            // InternalReflex.g:6075:2: ( rule__StartProcStat__ProcessAssignment_2 )
            // InternalReflex.g:6075:3: rule__StartProcStat__ProcessAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__StartProcStat__ProcessAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getProcessAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__2__Impl"


    // $ANTLR start "rule__StartProcStat__Group__3"
    // InternalReflex.g:6083:1: rule__StartProcStat__Group__3 : rule__StartProcStat__Group__3__Impl ;
    public final void rule__StartProcStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6087:1: ( rule__StartProcStat__Group__3__Impl )
            // InternalReflex.g:6088:2: rule__StartProcStat__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StartProcStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__3"


    // $ANTLR start "rule__StartProcStat__Group__3__Impl"
    // InternalReflex.g:6094:1: rule__StartProcStat__Group__3__Impl : ( ';' ) ;
    public final void rule__StartProcStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6098:1: ( ( ';' ) )
            // InternalReflex.g:6099:1: ( ';' )
            {
            // InternalReflex.g:6099:1: ( ';' )
            // InternalReflex.g:6100:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getSemicolonKeyword_3()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__Group__3__Impl"


    // $ANTLR start "rule__StopProcStat__Group__0"
    // InternalReflex.g:6110:1: rule__StopProcStat__Group__0 : rule__StopProcStat__Group__0__Impl rule__StopProcStat__Group__1 ;
    public final void rule__StopProcStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6114:1: ( rule__StopProcStat__Group__0__Impl rule__StopProcStat__Group__1 )
            // InternalReflex.g:6115:2: rule__StopProcStat__Group__0__Impl rule__StopProcStat__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__StopProcStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__0"


    // $ANTLR start "rule__StopProcStat__Group__0__Impl"
    // InternalReflex.g:6122:1: rule__StopProcStat__Group__0__Impl : ( () ) ;
    public final void rule__StopProcStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6126:1: ( ( () ) )
            // InternalReflex.g:6127:1: ( () )
            {
            // InternalReflex.g:6127:1: ( () )
            // InternalReflex.g:6128:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getStopProcStatAction_0()); 
            }
            // InternalReflex.g:6129:2: ()
            // InternalReflex.g:6129:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getStopProcStatAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__0__Impl"


    // $ANTLR start "rule__StopProcStat__Group__1"
    // InternalReflex.g:6137:1: rule__StopProcStat__Group__1 : rule__StopProcStat__Group__1__Impl rule__StopProcStat__Group__2 ;
    public final void rule__StopProcStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6141:1: ( rule__StopProcStat__Group__1__Impl rule__StopProcStat__Group__2 )
            // InternalReflex.g:6142:2: rule__StopProcStat__Group__1__Impl rule__StopProcStat__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__StopProcStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__1"


    // $ANTLR start "rule__StopProcStat__Group__1__Impl"
    // InternalReflex.g:6149:1: rule__StopProcStat__Group__1__Impl : ( 'stop' ) ;
    public final void rule__StopProcStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6153:1: ( ( 'stop' ) )
            // InternalReflex.g:6154:1: ( 'stop' )
            {
            // InternalReflex.g:6154:1: ( 'stop' )
            // InternalReflex.g:6155:2: 'stop'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getStopKeyword_1()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__1__Impl"


    // $ANTLR start "rule__StopProcStat__Group__2"
    // InternalReflex.g:6164:1: rule__StopProcStat__Group__2 : rule__StopProcStat__Group__2__Impl rule__StopProcStat__Group__3 ;
    public final void rule__StopProcStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6168:1: ( rule__StopProcStat__Group__2__Impl rule__StopProcStat__Group__3 )
            // InternalReflex.g:6169:2: rule__StopProcStat__Group__2__Impl rule__StopProcStat__Group__3
            {
            pushFollow(FOLLOW_46);
            rule__StopProcStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__2"


    // $ANTLR start "rule__StopProcStat__Group__2__Impl"
    // InternalReflex.g:6176:1: rule__StopProcStat__Group__2__Impl : ( ( rule__StopProcStat__Group_2__0 )? ) ;
    public final void rule__StopProcStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6180:1: ( ( ( rule__StopProcStat__Group_2__0 )? ) )
            // InternalReflex.g:6181:1: ( ( rule__StopProcStat__Group_2__0 )? )
            {
            // InternalReflex.g:6181:1: ( ( rule__StopProcStat__Group_2__0 )? )
            // InternalReflex.g:6182:2: ( rule__StopProcStat__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getGroup_2()); 
            }
            // InternalReflex.g:6183:2: ( rule__StopProcStat__Group_2__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==92) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalReflex.g:6183:3: rule__StopProcStat__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__StopProcStat__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__2__Impl"


    // $ANTLR start "rule__StopProcStat__Group__3"
    // InternalReflex.g:6191:1: rule__StopProcStat__Group__3 : rule__StopProcStat__Group__3__Impl ;
    public final void rule__StopProcStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6195:1: ( rule__StopProcStat__Group__3__Impl )
            // InternalReflex.g:6196:2: rule__StopProcStat__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__3"


    // $ANTLR start "rule__StopProcStat__Group__3__Impl"
    // InternalReflex.g:6202:1: rule__StopProcStat__Group__3__Impl : ( ';' ) ;
    public final void rule__StopProcStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6206:1: ( ( ';' ) )
            // InternalReflex.g:6207:1: ( ';' )
            {
            // InternalReflex.g:6207:1: ( ';' )
            // InternalReflex.g:6208:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getSemicolonKeyword_3()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group__3__Impl"


    // $ANTLR start "rule__StopProcStat__Group_2__0"
    // InternalReflex.g:6218:1: rule__StopProcStat__Group_2__0 : rule__StopProcStat__Group_2__0__Impl rule__StopProcStat__Group_2__1 ;
    public final void rule__StopProcStat__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6222:1: ( rule__StopProcStat__Group_2__0__Impl rule__StopProcStat__Group_2__1 )
            // InternalReflex.g:6223:2: rule__StopProcStat__Group_2__0__Impl rule__StopProcStat__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__StopProcStat__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group_2__0"


    // $ANTLR start "rule__StopProcStat__Group_2__0__Impl"
    // InternalReflex.g:6230:1: rule__StopProcStat__Group_2__0__Impl : ( 'process' ) ;
    public final void rule__StopProcStat__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6234:1: ( ( 'process' ) )
            // InternalReflex.g:6235:1: ( 'process' )
            {
            // InternalReflex.g:6235:1: ( 'process' )
            // InternalReflex.g:6236:2: 'process'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getProcessKeyword_2_0()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getProcessKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group_2__0__Impl"


    // $ANTLR start "rule__StopProcStat__Group_2__1"
    // InternalReflex.g:6245:1: rule__StopProcStat__Group_2__1 : rule__StopProcStat__Group_2__1__Impl ;
    public final void rule__StopProcStat__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6249:1: ( rule__StopProcStat__Group_2__1__Impl )
            // InternalReflex.g:6250:2: rule__StopProcStat__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StopProcStat__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group_2__1"


    // $ANTLR start "rule__StopProcStat__Group_2__1__Impl"
    // InternalReflex.g:6256:1: rule__StopProcStat__Group_2__1__Impl : ( ( rule__StopProcStat__ProcessAssignment_2_1 ) ) ;
    public final void rule__StopProcStat__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6260:1: ( ( ( rule__StopProcStat__ProcessAssignment_2_1 ) ) )
            // InternalReflex.g:6261:1: ( ( rule__StopProcStat__ProcessAssignment_2_1 ) )
            {
            // InternalReflex.g:6261:1: ( ( rule__StopProcStat__ProcessAssignment_2_1 ) )
            // InternalReflex.g:6262:2: ( rule__StopProcStat__ProcessAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getProcessAssignment_2_1()); 
            }
            // InternalReflex.g:6263:2: ( rule__StopProcStat__ProcessAssignment_2_1 )
            // InternalReflex.g:6263:3: rule__StopProcStat__ProcessAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__StopProcStat__ProcessAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getProcessAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__Group_2__1__Impl"


    // $ANTLR start "rule__ErrorStat__Group__0"
    // InternalReflex.g:6272:1: rule__ErrorStat__Group__0 : rule__ErrorStat__Group__0__Impl rule__ErrorStat__Group__1 ;
    public final void rule__ErrorStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6276:1: ( rule__ErrorStat__Group__0__Impl rule__ErrorStat__Group__1 )
            // InternalReflex.g:6277:2: rule__ErrorStat__Group__0__Impl rule__ErrorStat__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__ErrorStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__0"


    // $ANTLR start "rule__ErrorStat__Group__0__Impl"
    // InternalReflex.g:6284:1: rule__ErrorStat__Group__0__Impl : ( () ) ;
    public final void rule__ErrorStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6288:1: ( ( () ) )
            // InternalReflex.g:6289:1: ( () )
            {
            // InternalReflex.g:6289:1: ( () )
            // InternalReflex.g:6290:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getErrorStatAction_0()); 
            }
            // InternalReflex.g:6291:2: ()
            // InternalReflex.g:6291:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getErrorStatAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__0__Impl"


    // $ANTLR start "rule__ErrorStat__Group__1"
    // InternalReflex.g:6299:1: rule__ErrorStat__Group__1 : rule__ErrorStat__Group__1__Impl rule__ErrorStat__Group__2 ;
    public final void rule__ErrorStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6303:1: ( rule__ErrorStat__Group__1__Impl rule__ErrorStat__Group__2 )
            // InternalReflex.g:6304:2: rule__ErrorStat__Group__1__Impl rule__ErrorStat__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__ErrorStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__1"


    // $ANTLR start "rule__ErrorStat__Group__1__Impl"
    // InternalReflex.g:6311:1: rule__ErrorStat__Group__1__Impl : ( 'error' ) ;
    public final void rule__ErrorStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6315:1: ( ( 'error' ) )
            // InternalReflex.g:6316:1: ( 'error' )
            {
            // InternalReflex.g:6316:1: ( 'error' )
            // InternalReflex.g:6317:2: 'error'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getErrorKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getErrorKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__1__Impl"


    // $ANTLR start "rule__ErrorStat__Group__2"
    // InternalReflex.g:6326:1: rule__ErrorStat__Group__2 : rule__ErrorStat__Group__2__Impl rule__ErrorStat__Group__3 ;
    public final void rule__ErrorStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6330:1: ( rule__ErrorStat__Group__2__Impl rule__ErrorStat__Group__3 )
            // InternalReflex.g:6331:2: rule__ErrorStat__Group__2__Impl rule__ErrorStat__Group__3
            {
            pushFollow(FOLLOW_46);
            rule__ErrorStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__2"


    // $ANTLR start "rule__ErrorStat__Group__2__Impl"
    // InternalReflex.g:6338:1: rule__ErrorStat__Group__2__Impl : ( ( rule__ErrorStat__Group_2__0 )? ) ;
    public final void rule__ErrorStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6342:1: ( ( ( rule__ErrorStat__Group_2__0 )? ) )
            // InternalReflex.g:6343:1: ( ( rule__ErrorStat__Group_2__0 )? )
            {
            // InternalReflex.g:6343:1: ( ( rule__ErrorStat__Group_2__0 )? )
            // InternalReflex.g:6344:2: ( rule__ErrorStat__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getGroup_2()); 
            }
            // InternalReflex.g:6345:2: ( rule__ErrorStat__Group_2__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==92) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalReflex.g:6345:3: rule__ErrorStat__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ErrorStat__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__2__Impl"


    // $ANTLR start "rule__ErrorStat__Group__3"
    // InternalReflex.g:6353:1: rule__ErrorStat__Group__3 : rule__ErrorStat__Group__3__Impl ;
    public final void rule__ErrorStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6357:1: ( rule__ErrorStat__Group__3__Impl )
            // InternalReflex.g:6358:2: rule__ErrorStat__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__3"


    // $ANTLR start "rule__ErrorStat__Group__3__Impl"
    // InternalReflex.g:6364:1: rule__ErrorStat__Group__3__Impl : ( ';' ) ;
    public final void rule__ErrorStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6368:1: ( ( ';' ) )
            // InternalReflex.g:6369:1: ( ';' )
            {
            // InternalReflex.g:6369:1: ( ';' )
            // InternalReflex.g:6370:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getSemicolonKeyword_3()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group__3__Impl"


    // $ANTLR start "rule__ErrorStat__Group_2__0"
    // InternalReflex.g:6380:1: rule__ErrorStat__Group_2__0 : rule__ErrorStat__Group_2__0__Impl rule__ErrorStat__Group_2__1 ;
    public final void rule__ErrorStat__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6384:1: ( rule__ErrorStat__Group_2__0__Impl rule__ErrorStat__Group_2__1 )
            // InternalReflex.g:6385:2: rule__ErrorStat__Group_2__0__Impl rule__ErrorStat__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__ErrorStat__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group_2__0"


    // $ANTLR start "rule__ErrorStat__Group_2__0__Impl"
    // InternalReflex.g:6392:1: rule__ErrorStat__Group_2__0__Impl : ( 'process' ) ;
    public final void rule__ErrorStat__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6396:1: ( ( 'process' ) )
            // InternalReflex.g:6397:1: ( 'process' )
            {
            // InternalReflex.g:6397:1: ( 'process' )
            // InternalReflex.g:6398:2: 'process'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getProcessKeyword_2_0()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getProcessKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group_2__0__Impl"


    // $ANTLR start "rule__ErrorStat__Group_2__1"
    // InternalReflex.g:6407:1: rule__ErrorStat__Group_2__1 : rule__ErrorStat__Group_2__1__Impl ;
    public final void rule__ErrorStat__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6411:1: ( rule__ErrorStat__Group_2__1__Impl )
            // InternalReflex.g:6412:2: rule__ErrorStat__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ErrorStat__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group_2__1"


    // $ANTLR start "rule__ErrorStat__Group_2__1__Impl"
    // InternalReflex.g:6418:1: rule__ErrorStat__Group_2__1__Impl : ( ( rule__ErrorStat__ProcessAssignment_2_1 ) ) ;
    public final void rule__ErrorStat__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6422:1: ( ( ( rule__ErrorStat__ProcessAssignment_2_1 ) ) )
            // InternalReflex.g:6423:1: ( ( rule__ErrorStat__ProcessAssignment_2_1 ) )
            {
            // InternalReflex.g:6423:1: ( ( rule__ErrorStat__ProcessAssignment_2_1 ) )
            // InternalReflex.g:6424:2: ( rule__ErrorStat__ProcessAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getProcessAssignment_2_1()); 
            }
            // InternalReflex.g:6425:2: ( rule__ErrorStat__ProcessAssignment_2_1 )
            // InternalReflex.g:6425:3: rule__ErrorStat__ProcessAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ErrorStat__ProcessAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getProcessAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__Group_2__1__Impl"


    // $ANTLR start "rule__RestartStat__Group__0"
    // InternalReflex.g:6434:1: rule__RestartStat__Group__0 : rule__RestartStat__Group__0__Impl rule__RestartStat__Group__1 ;
    public final void rule__RestartStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6438:1: ( rule__RestartStat__Group__0__Impl rule__RestartStat__Group__1 )
            // InternalReflex.g:6439:2: rule__RestartStat__Group__0__Impl rule__RestartStat__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__RestartStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RestartStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartStat__Group__0"


    // $ANTLR start "rule__RestartStat__Group__0__Impl"
    // InternalReflex.g:6446:1: rule__RestartStat__Group__0__Impl : ( () ) ;
    public final void rule__RestartStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6450:1: ( ( () ) )
            // InternalReflex.g:6451:1: ( () )
            {
            // InternalReflex.g:6451:1: ( () )
            // InternalReflex.g:6452:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestartStatAccess().getRestartStatAction_0()); 
            }
            // InternalReflex.g:6453:2: ()
            // InternalReflex.g:6453:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestartStatAccess().getRestartStatAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartStat__Group__0__Impl"


    // $ANTLR start "rule__RestartStat__Group__1"
    // InternalReflex.g:6461:1: rule__RestartStat__Group__1 : rule__RestartStat__Group__1__Impl rule__RestartStat__Group__2 ;
    public final void rule__RestartStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6465:1: ( rule__RestartStat__Group__1__Impl rule__RestartStat__Group__2 )
            // InternalReflex.g:6466:2: rule__RestartStat__Group__1__Impl rule__RestartStat__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__RestartStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RestartStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartStat__Group__1"


    // $ANTLR start "rule__RestartStat__Group__1__Impl"
    // InternalReflex.g:6473:1: rule__RestartStat__Group__1__Impl : ( 'restart' ) ;
    public final void rule__RestartStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6477:1: ( ( 'restart' ) )
            // InternalReflex.g:6478:1: ( 'restart' )
            {
            // InternalReflex.g:6478:1: ( 'restart' )
            // InternalReflex.g:6479:2: 'restart'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestartStatAccess().getRestartKeyword_1()); 
            }
            match(input,110,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestartStatAccess().getRestartKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartStat__Group__1__Impl"


    // $ANTLR start "rule__RestartStat__Group__2"
    // InternalReflex.g:6488:1: rule__RestartStat__Group__2 : rule__RestartStat__Group__2__Impl ;
    public final void rule__RestartStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6492:1: ( rule__RestartStat__Group__2__Impl )
            // InternalReflex.g:6493:2: rule__RestartStat__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RestartStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartStat__Group__2"


    // $ANTLR start "rule__RestartStat__Group__2__Impl"
    // InternalReflex.g:6499:1: rule__RestartStat__Group__2__Impl : ( ';' ) ;
    public final void rule__RestartStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6503:1: ( ( ';' ) )
            // InternalReflex.g:6504:1: ( ';' )
            {
            // InternalReflex.g:6504:1: ( ';' )
            // InternalReflex.g:6505:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestartStatAccess().getSemicolonKeyword_2()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestartStatAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartStat__Group__2__Impl"


    // $ANTLR start "rule__ResetStat__Group__0"
    // InternalReflex.g:6515:1: rule__ResetStat__Group__0 : rule__ResetStat__Group__0__Impl rule__ResetStat__Group__1 ;
    public final void rule__ResetStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6519:1: ( rule__ResetStat__Group__0__Impl rule__ResetStat__Group__1 )
            // InternalReflex.g:6520:2: rule__ResetStat__Group__0__Impl rule__ResetStat__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__ResetStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ResetStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__0"


    // $ANTLR start "rule__ResetStat__Group__0__Impl"
    // InternalReflex.g:6527:1: rule__ResetStat__Group__0__Impl : ( () ) ;
    public final void rule__ResetStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6531:1: ( ( () ) )
            // InternalReflex.g:6532:1: ( () )
            {
            // InternalReflex.g:6532:1: ( () )
            // InternalReflex.g:6533:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResetStatAccess().getResetStatAction_0()); 
            }
            // InternalReflex.g:6534:2: ()
            // InternalReflex.g:6534:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getResetStatAccess().getResetStatAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__0__Impl"


    // $ANTLR start "rule__ResetStat__Group__1"
    // InternalReflex.g:6542:1: rule__ResetStat__Group__1 : rule__ResetStat__Group__1__Impl rule__ResetStat__Group__2 ;
    public final void rule__ResetStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6546:1: ( rule__ResetStat__Group__1__Impl rule__ResetStat__Group__2 )
            // InternalReflex.g:6547:2: rule__ResetStat__Group__1__Impl rule__ResetStat__Group__2
            {
            pushFollow(FOLLOW_50);
            rule__ResetStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ResetStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__1"


    // $ANTLR start "rule__ResetStat__Group__1__Impl"
    // InternalReflex.g:6554:1: rule__ResetStat__Group__1__Impl : ( 'reset' ) ;
    public final void rule__ResetStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6558:1: ( ( 'reset' ) )
            // InternalReflex.g:6559:1: ( 'reset' )
            {
            // InternalReflex.g:6559:1: ( 'reset' )
            // InternalReflex.g:6560:2: 'reset'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResetStatAccess().getResetKeyword_1()); 
            }
            match(input,111,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResetStatAccess().getResetKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__1__Impl"


    // $ANTLR start "rule__ResetStat__Group__2"
    // InternalReflex.g:6569:1: rule__ResetStat__Group__2 : rule__ResetStat__Group__2__Impl rule__ResetStat__Group__3 ;
    public final void rule__ResetStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6573:1: ( rule__ResetStat__Group__2__Impl rule__ResetStat__Group__3 )
            // InternalReflex.g:6574:2: rule__ResetStat__Group__2__Impl rule__ResetStat__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ResetStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ResetStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__2"


    // $ANTLR start "rule__ResetStat__Group__2__Impl"
    // InternalReflex.g:6581:1: rule__ResetStat__Group__2__Impl : ( 'timer' ) ;
    public final void rule__ResetStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6585:1: ( ( 'timer' ) )
            // InternalReflex.g:6586:1: ( 'timer' )
            {
            // InternalReflex.g:6586:1: ( 'timer' )
            // InternalReflex.g:6587:2: 'timer'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResetStatAccess().getTimerKeyword_2()); 
            }
            match(input,112,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResetStatAccess().getTimerKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__2__Impl"


    // $ANTLR start "rule__ResetStat__Group__3"
    // InternalReflex.g:6596:1: rule__ResetStat__Group__3 : rule__ResetStat__Group__3__Impl ;
    public final void rule__ResetStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6600:1: ( rule__ResetStat__Group__3__Impl )
            // InternalReflex.g:6601:2: rule__ResetStat__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ResetStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__3"


    // $ANTLR start "rule__ResetStat__Group__3__Impl"
    // InternalReflex.g:6607:1: rule__ResetStat__Group__3__Impl : ( ';' ) ;
    public final void rule__ResetStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6611:1: ( ( ';' ) )
            // InternalReflex.g:6612:1: ( ';' )
            {
            // InternalReflex.g:6612:1: ( ';' )
            // InternalReflex.g:6613:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResetStatAccess().getSemicolonKeyword_3()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResetStatAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResetStat__Group__3__Impl"


    // $ANTLR start "rule__SetStateStat__Group__0"
    // InternalReflex.g:6623:1: rule__SetStateStat__Group__0 : rule__SetStateStat__Group__0__Impl rule__SetStateStat__Group__1 ;
    public final void rule__SetStateStat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6627:1: ( rule__SetStateStat__Group__0__Impl rule__SetStateStat__Group__1 )
            // InternalReflex.g:6628:2: rule__SetStateStat__Group__0__Impl rule__SetStateStat__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__SetStateStat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__0"


    // $ANTLR start "rule__SetStateStat__Group__0__Impl"
    // InternalReflex.g:6635:1: rule__SetStateStat__Group__0__Impl : ( () ) ;
    public final void rule__SetStateStat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6639:1: ( ( () ) )
            // InternalReflex.g:6640:1: ( () )
            {
            // InternalReflex.g:6640:1: ( () )
            // InternalReflex.g:6641:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getSetStateStatAction_0()); 
            }
            // InternalReflex.g:6642:2: ()
            // InternalReflex.g:6642:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getSetStateStatAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__0__Impl"


    // $ANTLR start "rule__SetStateStat__Group__1"
    // InternalReflex.g:6650:1: rule__SetStateStat__Group__1 : rule__SetStateStat__Group__1__Impl rule__SetStateStat__Group__2 ;
    public final void rule__SetStateStat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6654:1: ( rule__SetStateStat__Group__1__Impl rule__SetStateStat__Group__2 )
            // InternalReflex.g:6655:2: rule__SetStateStat__Group__1__Impl rule__SetStateStat__Group__2
            {
            pushFollow(FOLLOW_52);
            rule__SetStateStat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__1"


    // $ANTLR start "rule__SetStateStat__Group__1__Impl"
    // InternalReflex.g:6662:1: rule__SetStateStat__Group__1__Impl : ( 'set' ) ;
    public final void rule__SetStateStat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6666:1: ( ( 'set' ) )
            // InternalReflex.g:6667:1: ( 'set' )
            {
            // InternalReflex.g:6667:1: ( 'set' )
            // InternalReflex.g:6668:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getSetKeyword_1()); 
            }
            match(input,113,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getSetKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__1__Impl"


    // $ANTLR start "rule__SetStateStat__Group__2"
    // InternalReflex.g:6677:1: rule__SetStateStat__Group__2 : rule__SetStateStat__Group__2__Impl rule__SetStateStat__Group__3 ;
    public final void rule__SetStateStat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6681:1: ( rule__SetStateStat__Group__2__Impl rule__SetStateStat__Group__3 )
            // InternalReflex.g:6682:2: rule__SetStateStat__Group__2__Impl rule__SetStateStat__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__SetStateStat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__2"


    // $ANTLR start "rule__SetStateStat__Group__2__Impl"
    // InternalReflex.g:6689:1: rule__SetStateStat__Group__2__Impl : ( ( rule__SetStateStat__Alternatives_2 ) ) ;
    public final void rule__SetStateStat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6693:1: ( ( ( rule__SetStateStat__Alternatives_2 ) ) )
            // InternalReflex.g:6694:1: ( ( rule__SetStateStat__Alternatives_2 ) )
            {
            // InternalReflex.g:6694:1: ( ( rule__SetStateStat__Alternatives_2 ) )
            // InternalReflex.g:6695:2: ( rule__SetStateStat__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getAlternatives_2()); 
            }
            // InternalReflex.g:6696:2: ( rule__SetStateStat__Alternatives_2 )
            // InternalReflex.g:6696:3: rule__SetStateStat__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__2__Impl"


    // $ANTLR start "rule__SetStateStat__Group__3"
    // InternalReflex.g:6704:1: rule__SetStateStat__Group__3 : rule__SetStateStat__Group__3__Impl ;
    public final void rule__SetStateStat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6708:1: ( rule__SetStateStat__Group__3__Impl )
            // InternalReflex.g:6709:2: rule__SetStateStat__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__3"


    // $ANTLR start "rule__SetStateStat__Group__3__Impl"
    // InternalReflex.g:6715:1: rule__SetStateStat__Group__3__Impl : ( ';' ) ;
    public final void rule__SetStateStat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6719:1: ( ( ';' ) )
            // InternalReflex.g:6720:1: ( ';' )
            {
            // InternalReflex.g:6720:1: ( ';' )
            // InternalReflex.g:6721:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getSemicolonKeyword_3()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group__3__Impl"


    // $ANTLR start "rule__SetStateStat__Group_2_0__0"
    // InternalReflex.g:6731:1: rule__SetStateStat__Group_2_0__0 : rule__SetStateStat__Group_2_0__0__Impl rule__SetStateStat__Group_2_0__1 ;
    public final void rule__SetStateStat__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6735:1: ( rule__SetStateStat__Group_2_0__0__Impl rule__SetStateStat__Group_2_0__1 )
            // InternalReflex.g:6736:2: rule__SetStateStat__Group_2_0__0__Impl rule__SetStateStat__Group_2_0__1
            {
            pushFollow(FOLLOW_53);
            rule__SetStateStat__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_0__0"


    // $ANTLR start "rule__SetStateStat__Group_2_0__0__Impl"
    // InternalReflex.g:6743:1: rule__SetStateStat__Group_2_0__0__Impl : ( ( rule__SetStateStat__NextAssignment_2_0_0 ) ) ;
    public final void rule__SetStateStat__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6747:1: ( ( ( rule__SetStateStat__NextAssignment_2_0_0 ) ) )
            // InternalReflex.g:6748:1: ( ( rule__SetStateStat__NextAssignment_2_0_0 ) )
            {
            // InternalReflex.g:6748:1: ( ( rule__SetStateStat__NextAssignment_2_0_0 ) )
            // InternalReflex.g:6749:2: ( rule__SetStateStat__NextAssignment_2_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getNextAssignment_2_0_0()); 
            }
            // InternalReflex.g:6750:2: ( rule__SetStateStat__NextAssignment_2_0_0 )
            // InternalReflex.g:6750:3: rule__SetStateStat__NextAssignment_2_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__NextAssignment_2_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getNextAssignment_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_0__0__Impl"


    // $ANTLR start "rule__SetStateStat__Group_2_0__1"
    // InternalReflex.g:6758:1: rule__SetStateStat__Group_2_0__1 : rule__SetStateStat__Group_2_0__1__Impl ;
    public final void rule__SetStateStat__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6762:1: ( rule__SetStateStat__Group_2_0__1__Impl )
            // InternalReflex.g:6763:2: rule__SetStateStat__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_0__1"


    // $ANTLR start "rule__SetStateStat__Group_2_0__1__Impl"
    // InternalReflex.g:6769:1: rule__SetStateStat__Group_2_0__1__Impl : ( 'state' ) ;
    public final void rule__SetStateStat__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6773:1: ( ( 'state' ) )
            // InternalReflex.g:6774:1: ( 'state' )
            {
            // InternalReflex.g:6774:1: ( 'state' )
            // InternalReflex.g:6775:2: 'state'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getStateKeyword_2_0_1()); 
            }
            match(input,93,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getStateKeyword_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_0__1__Impl"


    // $ANTLR start "rule__SetStateStat__Group_2_1__0"
    // InternalReflex.g:6785:1: rule__SetStateStat__Group_2_1__0 : rule__SetStateStat__Group_2_1__0__Impl rule__SetStateStat__Group_2_1__1 ;
    public final void rule__SetStateStat__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6789:1: ( rule__SetStateStat__Group_2_1__0__Impl rule__SetStateStat__Group_2_1__1 )
            // InternalReflex.g:6790:2: rule__SetStateStat__Group_2_1__0__Impl rule__SetStateStat__Group_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__SetStateStat__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_1__0"


    // $ANTLR start "rule__SetStateStat__Group_2_1__0__Impl"
    // InternalReflex.g:6797:1: rule__SetStateStat__Group_2_1__0__Impl : ( 'state' ) ;
    public final void rule__SetStateStat__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6801:1: ( ( 'state' ) )
            // InternalReflex.g:6802:1: ( 'state' )
            {
            // InternalReflex.g:6802:1: ( 'state' )
            // InternalReflex.g:6803:2: 'state'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getStateKeyword_2_1_0()); 
            }
            match(input,93,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getStateKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_1__0__Impl"


    // $ANTLR start "rule__SetStateStat__Group_2_1__1"
    // InternalReflex.g:6812:1: rule__SetStateStat__Group_2_1__1 : rule__SetStateStat__Group_2_1__1__Impl ;
    public final void rule__SetStateStat__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6816:1: ( rule__SetStateStat__Group_2_1__1__Impl )
            // InternalReflex.g:6817:2: rule__SetStateStat__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_1__1"


    // $ANTLR start "rule__SetStateStat__Group_2_1__1__Impl"
    // InternalReflex.g:6823:1: rule__SetStateStat__Group_2_1__1__Impl : ( ( rule__SetStateStat__StateAssignment_2_1_1 ) ) ;
    public final void rule__SetStateStat__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6827:1: ( ( ( rule__SetStateStat__StateAssignment_2_1_1 ) ) )
            // InternalReflex.g:6828:1: ( ( rule__SetStateStat__StateAssignment_2_1_1 ) )
            {
            // InternalReflex.g:6828:1: ( ( rule__SetStateStat__StateAssignment_2_1_1 ) )
            // InternalReflex.g:6829:2: ( rule__SetStateStat__StateAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getStateAssignment_2_1_1()); 
            }
            // InternalReflex.g:6830:2: ( rule__SetStateStat__StateAssignment_2_1_1 )
            // InternalReflex.g:6830:3: rule__SetStateStat__StateAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SetStateStat__StateAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getStateAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__Group_2_1__1__Impl"


    // $ANTLR start "rule__InfixOp__Group__0"
    // InternalReflex.g:6839:1: rule__InfixOp__Group__0 : rule__InfixOp__Group__0__Impl rule__InfixOp__Group__1 ;
    public final void rule__InfixOp__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6843:1: ( rule__InfixOp__Group__0__Impl rule__InfixOp__Group__1 )
            // InternalReflex.g:6844:2: rule__InfixOp__Group__0__Impl rule__InfixOp__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__InfixOp__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InfixOp__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixOp__Group__0"


    // $ANTLR start "rule__InfixOp__Group__0__Impl"
    // InternalReflex.g:6851:1: rule__InfixOp__Group__0__Impl : ( ( rule__InfixOp__OpAssignment_0 ) ) ;
    public final void rule__InfixOp__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6855:1: ( ( ( rule__InfixOp__OpAssignment_0 ) ) )
            // InternalReflex.g:6856:1: ( ( rule__InfixOp__OpAssignment_0 ) )
            {
            // InternalReflex.g:6856:1: ( ( rule__InfixOp__OpAssignment_0 ) )
            // InternalReflex.g:6857:2: ( rule__InfixOp__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpAccess().getOpAssignment_0()); 
            }
            // InternalReflex.g:6858:2: ( rule__InfixOp__OpAssignment_0 )
            // InternalReflex.g:6858:3: rule__InfixOp__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__InfixOp__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixOp__Group__0__Impl"


    // $ANTLR start "rule__InfixOp__Group__1"
    // InternalReflex.g:6866:1: rule__InfixOp__Group__1 : rule__InfixOp__Group__1__Impl ;
    public final void rule__InfixOp__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6870:1: ( rule__InfixOp__Group__1__Impl )
            // InternalReflex.g:6871:2: rule__InfixOp__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InfixOp__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixOp__Group__1"


    // $ANTLR start "rule__InfixOp__Group__1__Impl"
    // InternalReflex.g:6877:1: rule__InfixOp__Group__1__Impl : ( ( rule__InfixOp__RefAssignment_1 ) ) ;
    public final void rule__InfixOp__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6881:1: ( ( ( rule__InfixOp__RefAssignment_1 ) ) )
            // InternalReflex.g:6882:1: ( ( rule__InfixOp__RefAssignment_1 ) )
            {
            // InternalReflex.g:6882:1: ( ( rule__InfixOp__RefAssignment_1 ) )
            // InternalReflex.g:6883:2: ( rule__InfixOp__RefAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpAccess().getRefAssignment_1()); 
            }
            // InternalReflex.g:6884:2: ( rule__InfixOp__RefAssignment_1 )
            // InternalReflex.g:6884:3: rule__InfixOp__RefAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InfixOp__RefAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpAccess().getRefAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixOp__Group__1__Impl"


    // $ANTLR start "rule__PostfixOp__Group__0"
    // InternalReflex.g:6893:1: rule__PostfixOp__Group__0 : rule__PostfixOp__Group__0__Impl rule__PostfixOp__Group__1 ;
    public final void rule__PostfixOp__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6897:1: ( rule__PostfixOp__Group__0__Impl rule__PostfixOp__Group__1 )
            // InternalReflex.g:6898:2: rule__PostfixOp__Group__0__Impl rule__PostfixOp__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__PostfixOp__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PostfixOp__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostfixOp__Group__0"


    // $ANTLR start "rule__PostfixOp__Group__0__Impl"
    // InternalReflex.g:6905:1: rule__PostfixOp__Group__0__Impl : ( ( rule__PostfixOp__RefAssignment_0 ) ) ;
    public final void rule__PostfixOp__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6909:1: ( ( ( rule__PostfixOp__RefAssignment_0 ) ) )
            // InternalReflex.g:6910:1: ( ( rule__PostfixOp__RefAssignment_0 ) )
            {
            // InternalReflex.g:6910:1: ( ( rule__PostfixOp__RefAssignment_0 ) )
            // InternalReflex.g:6911:2: ( rule__PostfixOp__RefAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpAccess().getRefAssignment_0()); 
            }
            // InternalReflex.g:6912:2: ( rule__PostfixOp__RefAssignment_0 )
            // InternalReflex.g:6912:3: rule__PostfixOp__RefAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PostfixOp__RefAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpAccess().getRefAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostfixOp__Group__0__Impl"


    // $ANTLR start "rule__PostfixOp__Group__1"
    // InternalReflex.g:6920:1: rule__PostfixOp__Group__1 : rule__PostfixOp__Group__1__Impl ;
    public final void rule__PostfixOp__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6924:1: ( rule__PostfixOp__Group__1__Impl )
            // InternalReflex.g:6925:2: rule__PostfixOp__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PostfixOp__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostfixOp__Group__1"


    // $ANTLR start "rule__PostfixOp__Group__1__Impl"
    // InternalReflex.g:6931:1: rule__PostfixOp__Group__1__Impl : ( ( rule__PostfixOp__OpAssignment_1 ) ) ;
    public final void rule__PostfixOp__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6935:1: ( ( ( rule__PostfixOp__OpAssignment_1 ) ) )
            // InternalReflex.g:6936:1: ( ( rule__PostfixOp__OpAssignment_1 ) )
            {
            // InternalReflex.g:6936:1: ( ( rule__PostfixOp__OpAssignment_1 ) )
            // InternalReflex.g:6937:2: ( rule__PostfixOp__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpAccess().getOpAssignment_1()); 
            }
            // InternalReflex.g:6938:2: ( rule__PostfixOp__OpAssignment_1 )
            // InternalReflex.g:6938:3: rule__PostfixOp__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PostfixOp__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostfixOp__Group__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group__0"
    // InternalReflex.g:6947:1: rule__FunctionCall__Group__0 : rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1 ;
    public final void rule__FunctionCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6951:1: ( rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1 )
            // InternalReflex.g:6952:2: rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__FunctionCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__0"


    // $ANTLR start "rule__FunctionCall__Group__0__Impl"
    // InternalReflex.g:6959:1: rule__FunctionCall__Group__0__Impl : ( ( rule__FunctionCall__FunctionAssignment_0 ) ) ;
    public final void rule__FunctionCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6963:1: ( ( ( rule__FunctionCall__FunctionAssignment_0 ) ) )
            // InternalReflex.g:6964:1: ( ( rule__FunctionCall__FunctionAssignment_0 ) )
            {
            // InternalReflex.g:6964:1: ( ( rule__FunctionCall__FunctionAssignment_0 ) )
            // InternalReflex.g:6965:2: ( rule__FunctionCall__FunctionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); 
            }
            // InternalReflex.g:6966:2: ( rule__FunctionCall__FunctionAssignment_0 )
            // InternalReflex.g:6966:3: rule__FunctionCall__FunctionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__FunctionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group__1"
    // InternalReflex.g:6974:1: rule__FunctionCall__Group__1 : rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2 ;
    public final void rule__FunctionCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6978:1: ( rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2 )
            // InternalReflex.g:6979:2: rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__FunctionCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__1"


    // $ANTLR start "rule__FunctionCall__Group__1__Impl"
    // InternalReflex.g:6986:1: rule__FunctionCall__Group__1__Impl : ( '(' ) ;
    public final void rule__FunctionCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:6990:1: ( ( '(' ) )
            // InternalReflex.g:6991:1: ( '(' )
            {
            // InternalReflex.g:6991:1: ( '(' )
            // InternalReflex.g:6992:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group__2"
    // InternalReflex.g:7001:1: rule__FunctionCall__Group__2 : rule__FunctionCall__Group__2__Impl rule__FunctionCall__Group__3 ;
    public final void rule__FunctionCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7005:1: ( rule__FunctionCall__Group__2__Impl rule__FunctionCall__Group__3 )
            // InternalReflex.g:7006:2: rule__FunctionCall__Group__2__Impl rule__FunctionCall__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__FunctionCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__2"


    // $ANTLR start "rule__FunctionCall__Group__2__Impl"
    // InternalReflex.g:7013:1: rule__FunctionCall__Group__2__Impl : ( ( rule__FunctionCall__Group_2__0 )? ) ;
    public final void rule__FunctionCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7017:1: ( ( ( rule__FunctionCall__Group_2__0 )? ) )
            // InternalReflex.g:7018:1: ( ( rule__FunctionCall__Group_2__0 )? )
            {
            // InternalReflex.g:7018:1: ( ( rule__FunctionCall__Group_2__0 )? )
            // InternalReflex.g:7019:2: ( rule__FunctionCall__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getGroup_2()); 
            }
            // InternalReflex.g:7020:2: ( rule__FunctionCall__Group_2__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID||LA47_0==RULE_INTEGER||(LA47_0>=RULE_TIME && LA47_0<=RULE_BOOL_LITERAL)||(LA47_0>=45 && LA47_0<=46)||(LA47_0>=57 && LA47_0<=60)||LA47_0==92||LA47_0==100) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalReflex.g:7020:3: rule__FunctionCall__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionCall__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__2__Impl"


    // $ANTLR start "rule__FunctionCall__Group__3"
    // InternalReflex.g:7028:1: rule__FunctionCall__Group__3 : rule__FunctionCall__Group__3__Impl ;
    public final void rule__FunctionCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7032:1: ( rule__FunctionCall__Group__3__Impl )
            // InternalReflex.g:7033:2: rule__FunctionCall__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__3"


    // $ANTLR start "rule__FunctionCall__Group__3__Impl"
    // InternalReflex.g:7039:1: rule__FunctionCall__Group__3__Impl : ( ')' ) ;
    public final void rule__FunctionCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7043:1: ( ( ')' ) )
            // InternalReflex.g:7044:1: ( ')' )
            {
            // InternalReflex.g:7044:1: ( ')' )
            // InternalReflex.g:7045:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__3__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2__0"
    // InternalReflex.g:7055:1: rule__FunctionCall__Group_2__0 : rule__FunctionCall__Group_2__0__Impl rule__FunctionCall__Group_2__1 ;
    public final void rule__FunctionCall__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7059:1: ( rule__FunctionCall__Group_2__0__Impl rule__FunctionCall__Group_2__1 )
            // InternalReflex.g:7060:2: rule__FunctionCall__Group_2__0__Impl rule__FunctionCall__Group_2__1
            {
            pushFollow(FOLLOW_25);
            rule__FunctionCall__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2__0"


    // $ANTLR start "rule__FunctionCall__Group_2__0__Impl"
    // InternalReflex.g:7067:1: rule__FunctionCall__Group_2__0__Impl : ( ( rule__FunctionCall__ArgsAssignment_2_0 ) ) ;
    public final void rule__FunctionCall__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7071:1: ( ( ( rule__FunctionCall__ArgsAssignment_2_0 ) ) )
            // InternalReflex.g:7072:1: ( ( rule__FunctionCall__ArgsAssignment_2_0 ) )
            {
            // InternalReflex.g:7072:1: ( ( rule__FunctionCall__ArgsAssignment_2_0 ) )
            // InternalReflex.g:7073:2: ( rule__FunctionCall__ArgsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_0()); 
            }
            // InternalReflex.g:7074:2: ( rule__FunctionCall__ArgsAssignment_2_0 )
            // InternalReflex.g:7074:3: rule__FunctionCall__ArgsAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__ArgsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2__1"
    // InternalReflex.g:7082:1: rule__FunctionCall__Group_2__1 : rule__FunctionCall__Group_2__1__Impl ;
    public final void rule__FunctionCall__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7086:1: ( rule__FunctionCall__Group_2__1__Impl )
            // InternalReflex.g:7087:2: rule__FunctionCall__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2__1"


    // $ANTLR start "rule__FunctionCall__Group_2__1__Impl"
    // InternalReflex.g:7093:1: rule__FunctionCall__Group_2__1__Impl : ( ( rule__FunctionCall__Group_2_1__0 )* ) ;
    public final void rule__FunctionCall__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7097:1: ( ( ( rule__FunctionCall__Group_2_1__0 )* ) )
            // InternalReflex.g:7098:1: ( ( rule__FunctionCall__Group_2_1__0 )* )
            {
            // InternalReflex.g:7098:1: ( ( rule__FunctionCall__Group_2_1__0 )* )
            // InternalReflex.g:7099:2: ( rule__FunctionCall__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); 
            }
            // InternalReflex.g:7100:2: ( rule__FunctionCall__Group_2_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==98) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalReflex.g:7100:3: rule__FunctionCall__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__FunctionCall__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_1__0"
    // InternalReflex.g:7109:1: rule__FunctionCall__Group_2_1__0 : rule__FunctionCall__Group_2_1__0__Impl rule__FunctionCall__Group_2_1__1 ;
    public final void rule__FunctionCall__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7113:1: ( rule__FunctionCall__Group_2_1__0__Impl rule__FunctionCall__Group_2_1__1 )
            // InternalReflex.g:7114:2: rule__FunctionCall__Group_2_1__0__Impl rule__FunctionCall__Group_2_1__1
            {
            pushFollow(FOLLOW_18);
            rule__FunctionCall__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_1__0"


    // $ANTLR start "rule__FunctionCall__Group_2_1__0__Impl"
    // InternalReflex.g:7121:1: rule__FunctionCall__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__FunctionCall__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7125:1: ( ( ',' ) )
            // InternalReflex.g:7126:1: ( ',' )
            {
            // InternalReflex.g:7126:1: ( ',' )
            // InternalReflex.g:7127:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,98,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_1__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_1__1"
    // InternalReflex.g:7136:1: rule__FunctionCall__Group_2_1__1 : rule__FunctionCall__Group_2_1__1__Impl ;
    public final void rule__FunctionCall__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7140:1: ( rule__FunctionCall__Group_2_1__1__Impl )
            // InternalReflex.g:7141:2: rule__FunctionCall__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_1__1"


    // $ANTLR start "rule__FunctionCall__Group_2_1__1__Impl"
    // InternalReflex.g:7147:1: rule__FunctionCall__Group_2_1__1__Impl : ( ( rule__FunctionCall__ArgsAssignment_2_1_1 ) ) ;
    public final void rule__FunctionCall__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7151:1: ( ( ( rule__FunctionCall__ArgsAssignment_2_1_1 ) ) )
            // InternalReflex.g:7152:1: ( ( rule__FunctionCall__ArgsAssignment_2_1_1 ) )
            {
            // InternalReflex.g:7152:1: ( ( rule__FunctionCall__ArgsAssignment_2_1_1 ) )
            // InternalReflex.g:7153:2: ( rule__FunctionCall__ArgsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_1_1()); 
            }
            // InternalReflex.g:7154:2: ( rule__FunctionCall__ArgsAssignment_2_1_1 )
            // InternalReflex.g:7154:3: rule__FunctionCall__ArgsAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionCall__ArgsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_1__1__Impl"


    // $ANTLR start "rule__CheckStateExpression__Group__0"
    // InternalReflex.g:7163:1: rule__CheckStateExpression__Group__0 : rule__CheckStateExpression__Group__0__Impl rule__CheckStateExpression__Group__1 ;
    public final void rule__CheckStateExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7167:1: ( rule__CheckStateExpression__Group__0__Impl rule__CheckStateExpression__Group__1 )
            // InternalReflex.g:7168:2: rule__CheckStateExpression__Group__0__Impl rule__CheckStateExpression__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__CheckStateExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__0"


    // $ANTLR start "rule__CheckStateExpression__Group__0__Impl"
    // InternalReflex.g:7175:1: rule__CheckStateExpression__Group__0__Impl : ( 'process' ) ;
    public final void rule__CheckStateExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7179:1: ( ( 'process' ) )
            // InternalReflex.g:7180:1: ( 'process' )
            {
            // InternalReflex.g:7180:1: ( 'process' )
            // InternalReflex.g:7181:2: 'process'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getProcessKeyword_0()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getProcessKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__0__Impl"


    // $ANTLR start "rule__CheckStateExpression__Group__1"
    // InternalReflex.g:7190:1: rule__CheckStateExpression__Group__1 : rule__CheckStateExpression__Group__1__Impl rule__CheckStateExpression__Group__2 ;
    public final void rule__CheckStateExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7194:1: ( rule__CheckStateExpression__Group__1__Impl rule__CheckStateExpression__Group__2 )
            // InternalReflex.g:7195:2: rule__CheckStateExpression__Group__1__Impl rule__CheckStateExpression__Group__2
            {
            pushFollow(FOLLOW_56);
            rule__CheckStateExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__1"


    // $ANTLR start "rule__CheckStateExpression__Group__1__Impl"
    // InternalReflex.g:7202:1: rule__CheckStateExpression__Group__1__Impl : ( ( rule__CheckStateExpression__ProcessAssignment_1 ) ) ;
    public final void rule__CheckStateExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7206:1: ( ( ( rule__CheckStateExpression__ProcessAssignment_1 ) ) )
            // InternalReflex.g:7207:1: ( ( rule__CheckStateExpression__ProcessAssignment_1 ) )
            {
            // InternalReflex.g:7207:1: ( ( rule__CheckStateExpression__ProcessAssignment_1 ) )
            // InternalReflex.g:7208:2: ( rule__CheckStateExpression__ProcessAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getProcessAssignment_1()); 
            }
            // InternalReflex.g:7209:2: ( rule__CheckStateExpression__ProcessAssignment_1 )
            // InternalReflex.g:7209:3: rule__CheckStateExpression__ProcessAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__ProcessAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getProcessAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__1__Impl"


    // $ANTLR start "rule__CheckStateExpression__Group__2"
    // InternalReflex.g:7217:1: rule__CheckStateExpression__Group__2 : rule__CheckStateExpression__Group__2__Impl rule__CheckStateExpression__Group__3 ;
    public final void rule__CheckStateExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7221:1: ( rule__CheckStateExpression__Group__2__Impl rule__CheckStateExpression__Group__3 )
            // InternalReflex.g:7222:2: rule__CheckStateExpression__Group__2__Impl rule__CheckStateExpression__Group__3
            {
            pushFollow(FOLLOW_53);
            rule__CheckStateExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__2"


    // $ANTLR start "rule__CheckStateExpression__Group__2__Impl"
    // InternalReflex.g:7229:1: rule__CheckStateExpression__Group__2__Impl : ( 'in' ) ;
    public final void rule__CheckStateExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7233:1: ( ( 'in' ) )
            // InternalReflex.g:7234:1: ( 'in' )
            {
            // InternalReflex.g:7234:1: ( 'in' )
            // InternalReflex.g:7235:2: 'in'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getInKeyword_2()); 
            }
            match(input,114,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getInKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__2__Impl"


    // $ANTLR start "rule__CheckStateExpression__Group__3"
    // InternalReflex.g:7244:1: rule__CheckStateExpression__Group__3 : rule__CheckStateExpression__Group__3__Impl rule__CheckStateExpression__Group__4 ;
    public final void rule__CheckStateExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7248:1: ( rule__CheckStateExpression__Group__3__Impl rule__CheckStateExpression__Group__4 )
            // InternalReflex.g:7249:2: rule__CheckStateExpression__Group__3__Impl rule__CheckStateExpression__Group__4
            {
            pushFollow(FOLLOW_57);
            rule__CheckStateExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__3"


    // $ANTLR start "rule__CheckStateExpression__Group__3__Impl"
    // InternalReflex.g:7256:1: rule__CheckStateExpression__Group__3__Impl : ( 'state' ) ;
    public final void rule__CheckStateExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7260:1: ( ( 'state' ) )
            // InternalReflex.g:7261:1: ( 'state' )
            {
            // InternalReflex.g:7261:1: ( 'state' )
            // InternalReflex.g:7262:2: 'state'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getStateKeyword_3()); 
            }
            match(input,93,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getStateKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__3__Impl"


    // $ANTLR start "rule__CheckStateExpression__Group__4"
    // InternalReflex.g:7271:1: rule__CheckStateExpression__Group__4 : rule__CheckStateExpression__Group__4__Impl ;
    public final void rule__CheckStateExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7275:1: ( rule__CheckStateExpression__Group__4__Impl )
            // InternalReflex.g:7276:2: rule__CheckStateExpression__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__4"


    // $ANTLR start "rule__CheckStateExpression__Group__4__Impl"
    // InternalReflex.g:7282:1: rule__CheckStateExpression__Group__4__Impl : ( ( rule__CheckStateExpression__QualfierAssignment_4 ) ) ;
    public final void rule__CheckStateExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7286:1: ( ( ( rule__CheckStateExpression__QualfierAssignment_4 ) ) )
            // InternalReflex.g:7287:1: ( ( rule__CheckStateExpression__QualfierAssignment_4 ) )
            {
            // InternalReflex.g:7287:1: ( ( rule__CheckStateExpression__QualfierAssignment_4 ) )
            // InternalReflex.g:7288:2: ( rule__CheckStateExpression__QualfierAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getQualfierAssignment_4()); 
            }
            // InternalReflex.g:7289:2: ( rule__CheckStateExpression__QualfierAssignment_4 )
            // InternalReflex.g:7289:3: rule__CheckStateExpression__QualfierAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__CheckStateExpression__QualfierAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getQualfierAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__Group__4__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_1__0"
    // InternalReflex.g:7298:1: rule__PrimaryExpression__Group_1__0 : rule__PrimaryExpression__Group_1__0__Impl rule__PrimaryExpression__Group_1__1 ;
    public final void rule__PrimaryExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7302:1: ( rule__PrimaryExpression__Group_1__0__Impl rule__PrimaryExpression__Group_1__1 )
            // InternalReflex.g:7303:2: rule__PrimaryExpression__Group_1__0__Impl rule__PrimaryExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__PrimaryExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_1__0"


    // $ANTLR start "rule__PrimaryExpression__Group_1__0__Impl"
    // InternalReflex.g:7310:1: rule__PrimaryExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__PrimaryExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7314:1: ( ( () ) )
            // InternalReflex.g:7315:1: ( () )
            {
            // InternalReflex.g:7315:1: ( () )
            // InternalReflex.g:7316:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_1_0()); 
            }
            // InternalReflex.g:7317:2: ()
            // InternalReflex.g:7317:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_1__0__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_1__1"
    // InternalReflex.g:7325:1: rule__PrimaryExpression__Group_1__1 : rule__PrimaryExpression__Group_1__1__Impl ;
    public final void rule__PrimaryExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7329:1: ( rule__PrimaryExpression__Group_1__1__Impl )
            // InternalReflex.g:7330:2: rule__PrimaryExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_1__1"


    // $ANTLR start "rule__PrimaryExpression__Group_1__1__Impl"
    // InternalReflex.g:7336:1: rule__PrimaryExpression__Group_1__1__Impl : ( ( rule__PrimaryExpression__IntegerAssignment_1_1 ) ) ;
    public final void rule__PrimaryExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7340:1: ( ( ( rule__PrimaryExpression__IntegerAssignment_1_1 ) ) )
            // InternalReflex.g:7341:1: ( ( rule__PrimaryExpression__IntegerAssignment_1_1 ) )
            {
            // InternalReflex.g:7341:1: ( ( rule__PrimaryExpression__IntegerAssignment_1_1 ) )
            // InternalReflex.g:7342:2: ( rule__PrimaryExpression__IntegerAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getIntegerAssignment_1_1()); 
            }
            // InternalReflex.g:7343:2: ( rule__PrimaryExpression__IntegerAssignment_1_1 )
            // InternalReflex.g:7343:3: rule__PrimaryExpression__IntegerAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__IntegerAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getIntegerAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_1__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_2__0"
    // InternalReflex.g:7352:1: rule__PrimaryExpression__Group_2__0 : rule__PrimaryExpression__Group_2__0__Impl rule__PrimaryExpression__Group_2__1 ;
    public final void rule__PrimaryExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7356:1: ( rule__PrimaryExpression__Group_2__0__Impl rule__PrimaryExpression__Group_2__1 )
            // InternalReflex.g:7357:2: rule__PrimaryExpression__Group_2__0__Impl rule__PrimaryExpression__Group_2__1
            {
            pushFollow(FOLLOW_58);
            rule__PrimaryExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_2__0"


    // $ANTLR start "rule__PrimaryExpression__Group_2__0__Impl"
    // InternalReflex.g:7364:1: rule__PrimaryExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__PrimaryExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7368:1: ( ( () ) )
            // InternalReflex.g:7369:1: ( () )
            {
            // InternalReflex.g:7369:1: ( () )
            // InternalReflex.g:7370:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0()); 
            }
            // InternalReflex.g:7371:2: ()
            // InternalReflex.g:7371:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_2__0__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_2__1"
    // InternalReflex.g:7379:1: rule__PrimaryExpression__Group_2__1 : rule__PrimaryExpression__Group_2__1__Impl ;
    public final void rule__PrimaryExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7383:1: ( rule__PrimaryExpression__Group_2__1__Impl )
            // InternalReflex.g:7384:2: rule__PrimaryExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_2__1"


    // $ANTLR start "rule__PrimaryExpression__Group_2__1__Impl"
    // InternalReflex.g:7390:1: rule__PrimaryExpression__Group_2__1__Impl : ( ( rule__PrimaryExpression__FloatingAssignment_2_1 ) ) ;
    public final void rule__PrimaryExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7394:1: ( ( ( rule__PrimaryExpression__FloatingAssignment_2_1 ) ) )
            // InternalReflex.g:7395:1: ( ( rule__PrimaryExpression__FloatingAssignment_2_1 ) )
            {
            // InternalReflex.g:7395:1: ( ( rule__PrimaryExpression__FloatingAssignment_2_1 ) )
            // InternalReflex.g:7396:2: ( rule__PrimaryExpression__FloatingAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getFloatingAssignment_2_1()); 
            }
            // InternalReflex.g:7397:2: ( rule__PrimaryExpression__FloatingAssignment_2_1 )
            // InternalReflex.g:7397:3: rule__PrimaryExpression__FloatingAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__FloatingAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getFloatingAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_2__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_3__0"
    // InternalReflex.g:7406:1: rule__PrimaryExpression__Group_3__0 : rule__PrimaryExpression__Group_3__0__Impl rule__PrimaryExpression__Group_3__1 ;
    public final void rule__PrimaryExpression__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7410:1: ( rule__PrimaryExpression__Group_3__0__Impl rule__PrimaryExpression__Group_3__1 )
            // InternalReflex.g:7411:2: rule__PrimaryExpression__Group_3__0__Impl rule__PrimaryExpression__Group_3__1
            {
            pushFollow(FOLLOW_59);
            rule__PrimaryExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_3__0"


    // $ANTLR start "rule__PrimaryExpression__Group_3__0__Impl"
    // InternalReflex.g:7418:1: rule__PrimaryExpression__Group_3__0__Impl : ( () ) ;
    public final void rule__PrimaryExpression__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7422:1: ( ( () ) )
            // InternalReflex.g:7423:1: ( () )
            {
            // InternalReflex.g:7423:1: ( () )
            // InternalReflex.g:7424:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_3_0()); 
            }
            // InternalReflex.g:7425:2: ()
            // InternalReflex.g:7425:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_3__0__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_3__1"
    // InternalReflex.g:7433:1: rule__PrimaryExpression__Group_3__1 : rule__PrimaryExpression__Group_3__1__Impl ;
    public final void rule__PrimaryExpression__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7437:1: ( rule__PrimaryExpression__Group_3__1__Impl )
            // InternalReflex.g:7438:2: rule__PrimaryExpression__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_3__1"


    // $ANTLR start "rule__PrimaryExpression__Group_3__1__Impl"
    // InternalReflex.g:7444:1: rule__PrimaryExpression__Group_3__1__Impl : ( ( rule__PrimaryExpression__BoolAssignment_3_1 ) ) ;
    public final void rule__PrimaryExpression__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7448:1: ( ( ( rule__PrimaryExpression__BoolAssignment_3_1 ) ) )
            // InternalReflex.g:7449:1: ( ( rule__PrimaryExpression__BoolAssignment_3_1 ) )
            {
            // InternalReflex.g:7449:1: ( ( rule__PrimaryExpression__BoolAssignment_3_1 ) )
            // InternalReflex.g:7450:2: ( rule__PrimaryExpression__BoolAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getBoolAssignment_3_1()); 
            }
            // InternalReflex.g:7451:2: ( rule__PrimaryExpression__BoolAssignment_3_1 )
            // InternalReflex.g:7451:3: rule__PrimaryExpression__BoolAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__BoolAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getBoolAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_3__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_4__0"
    // InternalReflex.g:7460:1: rule__PrimaryExpression__Group_4__0 : rule__PrimaryExpression__Group_4__0__Impl rule__PrimaryExpression__Group_4__1 ;
    public final void rule__PrimaryExpression__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7464:1: ( rule__PrimaryExpression__Group_4__0__Impl rule__PrimaryExpression__Group_4__1 )
            // InternalReflex.g:7465:2: rule__PrimaryExpression__Group_4__0__Impl rule__PrimaryExpression__Group_4__1
            {
            pushFollow(FOLLOW_60);
            rule__PrimaryExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__0"


    // $ANTLR start "rule__PrimaryExpression__Group_4__0__Impl"
    // InternalReflex.g:7472:1: rule__PrimaryExpression__Group_4__0__Impl : ( () ) ;
    public final void rule__PrimaryExpression__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7476:1: ( ( () ) )
            // InternalReflex.g:7477:1: ( () )
            {
            // InternalReflex.g:7477:1: ( () )
            // InternalReflex.g:7478:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_4_0()); 
            }
            // InternalReflex.g:7479:2: ()
            // InternalReflex.g:7479:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__0__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_4__1"
    // InternalReflex.g:7487:1: rule__PrimaryExpression__Group_4__1 : rule__PrimaryExpression__Group_4__1__Impl ;
    public final void rule__PrimaryExpression__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7491:1: ( rule__PrimaryExpression__Group_4__1__Impl )
            // InternalReflex.g:7492:2: rule__PrimaryExpression__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__1"


    // $ANTLR start "rule__PrimaryExpression__Group_4__1__Impl"
    // InternalReflex.g:7498:1: rule__PrimaryExpression__Group_4__1__Impl : ( ( rule__PrimaryExpression__TimeAssignment_4_1 ) ) ;
    public final void rule__PrimaryExpression__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7502:1: ( ( ( rule__PrimaryExpression__TimeAssignment_4_1 ) ) )
            // InternalReflex.g:7503:1: ( ( rule__PrimaryExpression__TimeAssignment_4_1 ) )
            {
            // InternalReflex.g:7503:1: ( ( rule__PrimaryExpression__TimeAssignment_4_1 ) )
            // InternalReflex.g:7504:2: ( rule__PrimaryExpression__TimeAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getTimeAssignment_4_1()); 
            }
            // InternalReflex.g:7505:2: ( rule__PrimaryExpression__TimeAssignment_4_1 )
            // InternalReflex.g:7505:3: rule__PrimaryExpression__TimeAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__TimeAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getTimeAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_5__0"
    // InternalReflex.g:7514:1: rule__PrimaryExpression__Group_5__0 : rule__PrimaryExpression__Group_5__0__Impl rule__PrimaryExpression__Group_5__1 ;
    public final void rule__PrimaryExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7518:1: ( rule__PrimaryExpression__Group_5__0__Impl rule__PrimaryExpression__Group_5__1 )
            // InternalReflex.g:7519:2: rule__PrimaryExpression__Group_5__0__Impl rule__PrimaryExpression__Group_5__1
            {
            pushFollow(FOLLOW_18);
            rule__PrimaryExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_5__0"


    // $ANTLR start "rule__PrimaryExpression__Group_5__0__Impl"
    // InternalReflex.g:7526:1: rule__PrimaryExpression__Group_5__0__Impl : ( '(' ) ;
    public final void rule__PrimaryExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7530:1: ( ( '(' ) )
            // InternalReflex.g:7531:1: ( '(' )
            {
            // InternalReflex.g:7531:1: ( '(' )
            // InternalReflex.g:7532:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_0()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_5__0__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_5__1"
    // InternalReflex.g:7541:1: rule__PrimaryExpression__Group_5__1 : rule__PrimaryExpression__Group_5__1__Impl rule__PrimaryExpression__Group_5__2 ;
    public final void rule__PrimaryExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7545:1: ( rule__PrimaryExpression__Group_5__1__Impl rule__PrimaryExpression__Group_5__2 )
            // InternalReflex.g:7546:2: rule__PrimaryExpression__Group_5__1__Impl rule__PrimaryExpression__Group_5__2
            {
            pushFollow(FOLLOW_33);
            rule__PrimaryExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_5__1"


    // $ANTLR start "rule__PrimaryExpression__Group_5__1__Impl"
    // InternalReflex.g:7553:1: rule__PrimaryExpression__Group_5__1__Impl : ( ( rule__PrimaryExpression__NestedExprAssignment_5_1 ) ) ;
    public final void rule__PrimaryExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7557:1: ( ( ( rule__PrimaryExpression__NestedExprAssignment_5_1 ) ) )
            // InternalReflex.g:7558:1: ( ( rule__PrimaryExpression__NestedExprAssignment_5_1 ) )
            {
            // InternalReflex.g:7558:1: ( ( rule__PrimaryExpression__NestedExprAssignment_5_1 ) )
            // InternalReflex.g:7559:2: ( rule__PrimaryExpression__NestedExprAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getNestedExprAssignment_5_1()); 
            }
            // InternalReflex.g:7560:2: ( rule__PrimaryExpression__NestedExprAssignment_5_1 )
            // InternalReflex.g:7560:3: rule__PrimaryExpression__NestedExprAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__NestedExprAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getNestedExprAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_5__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_5__2"
    // InternalReflex.g:7568:1: rule__PrimaryExpression__Group_5__2 : rule__PrimaryExpression__Group_5__2__Impl ;
    public final void rule__PrimaryExpression__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7572:1: ( rule__PrimaryExpression__Group_5__2__Impl )
            // InternalReflex.g:7573:2: rule__PrimaryExpression__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_5__2"


    // $ANTLR start "rule__PrimaryExpression__Group_5__2__Impl"
    // InternalReflex.g:7579:1: rule__PrimaryExpression__Group_5__2__Impl : ( ')' ) ;
    public final void rule__PrimaryExpression__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7583:1: ( ( ')' ) )
            // InternalReflex.g:7584:1: ( ')' )
            {
            // InternalReflex.g:7584:1: ( ')' )
            // InternalReflex.g:7585:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_2()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_5__2__Impl"


    // $ANTLR start "rule__UnaryExpression__Group_4__0"
    // InternalReflex.g:7595:1: rule__UnaryExpression__Group_4__0 : rule__UnaryExpression__Group_4__0__Impl rule__UnaryExpression__Group_4__1 ;
    public final void rule__UnaryExpression__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7599:1: ( rule__UnaryExpression__Group_4__0__Impl rule__UnaryExpression__Group_4__1 )
            // InternalReflex.g:7600:2: rule__UnaryExpression__Group_4__0__Impl rule__UnaryExpression__Group_4__1
            {
            pushFollow(FOLLOW_18);
            rule__UnaryExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group_4__0"


    // $ANTLR start "rule__UnaryExpression__Group_4__0__Impl"
    // InternalReflex.g:7607:1: rule__UnaryExpression__Group_4__0__Impl : ( ( rule__UnaryExpression__UnaryOpAssignment_4_0 ) ) ;
    public final void rule__UnaryExpression__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7611:1: ( ( ( rule__UnaryExpression__UnaryOpAssignment_4_0 ) ) )
            // InternalReflex.g:7612:1: ( ( rule__UnaryExpression__UnaryOpAssignment_4_0 ) )
            {
            // InternalReflex.g:7612:1: ( ( rule__UnaryExpression__UnaryOpAssignment_4_0 ) )
            // InternalReflex.g:7613:2: ( rule__UnaryExpression__UnaryOpAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryOpAssignment_4_0()); 
            }
            // InternalReflex.g:7614:2: ( rule__UnaryExpression__UnaryOpAssignment_4_0 )
            // InternalReflex.g:7614:3: rule__UnaryExpression__UnaryOpAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__UnaryOpAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryOpAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group_4__0__Impl"


    // $ANTLR start "rule__UnaryExpression__Group_4__1"
    // InternalReflex.g:7622:1: rule__UnaryExpression__Group_4__1 : rule__UnaryExpression__Group_4__1__Impl ;
    public final void rule__UnaryExpression__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7626:1: ( rule__UnaryExpression__Group_4__1__Impl )
            // InternalReflex.g:7627:2: rule__UnaryExpression__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group_4__1"


    // $ANTLR start "rule__UnaryExpression__Group_4__1__Impl"
    // InternalReflex.g:7633:1: rule__UnaryExpression__Group_4__1__Impl : ( ( rule__UnaryExpression__RightAssignment_4_1 ) ) ;
    public final void rule__UnaryExpression__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7637:1: ( ( ( rule__UnaryExpression__RightAssignment_4_1 ) ) )
            // InternalReflex.g:7638:1: ( ( rule__UnaryExpression__RightAssignment_4_1 ) )
            {
            // InternalReflex.g:7638:1: ( ( rule__UnaryExpression__RightAssignment_4_1 ) )
            // InternalReflex.g:7639:2: ( rule__UnaryExpression__RightAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_4_1()); 
            }
            // InternalReflex.g:7640:2: ( rule__UnaryExpression__RightAssignment_4_1 )
            // InternalReflex.g:7640:3: rule__UnaryExpression__RightAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__RightAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group_4__1__Impl"


    // $ANTLR start "rule__CastExpression__Group_1__0"
    // InternalReflex.g:7649:1: rule__CastExpression__Group_1__0 : rule__CastExpression__Group_1__0__Impl rule__CastExpression__Group_1__1 ;
    public final void rule__CastExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7653:1: ( rule__CastExpression__Group_1__0__Impl rule__CastExpression__Group_1__1 )
            // InternalReflex.g:7654:2: rule__CastExpression__Group_1__0__Impl rule__CastExpression__Group_1__1
            {
            pushFollow(FOLLOW_35);
            rule__CastExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CastExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__0"


    // $ANTLR start "rule__CastExpression__Group_1__0__Impl"
    // InternalReflex.g:7661:1: rule__CastExpression__Group_1__0__Impl : ( '(' ) ;
    public final void rule__CastExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7665:1: ( ( '(' ) )
            // InternalReflex.g:7666:1: ( '(' )
            {
            // InternalReflex.g:7666:1: ( '(' )
            // InternalReflex.g:7667:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,100,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__0__Impl"


    // $ANTLR start "rule__CastExpression__Group_1__1"
    // InternalReflex.g:7676:1: rule__CastExpression__Group_1__1 : rule__CastExpression__Group_1__1__Impl rule__CastExpression__Group_1__2 ;
    public final void rule__CastExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7680:1: ( rule__CastExpression__Group_1__1__Impl rule__CastExpression__Group_1__2 )
            // InternalReflex.g:7681:2: rule__CastExpression__Group_1__1__Impl rule__CastExpression__Group_1__2
            {
            pushFollow(FOLLOW_33);
            rule__CastExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CastExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__1"


    // $ANTLR start "rule__CastExpression__Group_1__1__Impl"
    // InternalReflex.g:7688:1: rule__CastExpression__Group_1__1__Impl : ( ( rule__CastExpression__TypeAssignment_1_1 ) ) ;
    public final void rule__CastExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7692:1: ( ( ( rule__CastExpression__TypeAssignment_1_1 ) ) )
            // InternalReflex.g:7693:1: ( ( rule__CastExpression__TypeAssignment_1_1 ) )
            {
            // InternalReflex.g:7693:1: ( ( rule__CastExpression__TypeAssignment_1_1 ) )
            // InternalReflex.g:7694:2: ( rule__CastExpression__TypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); 
            }
            // InternalReflex.g:7695:2: ( rule__CastExpression__TypeAssignment_1_1 )
            // InternalReflex.g:7695:3: rule__CastExpression__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__CastExpression__TypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__1__Impl"


    // $ANTLR start "rule__CastExpression__Group_1__2"
    // InternalReflex.g:7703:1: rule__CastExpression__Group_1__2 : rule__CastExpression__Group_1__2__Impl rule__CastExpression__Group_1__3 ;
    public final void rule__CastExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7707:1: ( rule__CastExpression__Group_1__2__Impl rule__CastExpression__Group_1__3 )
            // InternalReflex.g:7708:2: rule__CastExpression__Group_1__2__Impl rule__CastExpression__Group_1__3
            {
            pushFollow(FOLLOW_18);
            rule__CastExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CastExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__2"


    // $ANTLR start "rule__CastExpression__Group_1__2__Impl"
    // InternalReflex.g:7715:1: rule__CastExpression__Group_1__2__Impl : ( ')' ) ;
    public final void rule__CastExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7719:1: ( ( ')' ) )
            // InternalReflex.g:7720:1: ( ')' )
            {
            // InternalReflex.g:7720:1: ( ')' )
            // InternalReflex.g:7721:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,101,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__2__Impl"


    // $ANTLR start "rule__CastExpression__Group_1__3"
    // InternalReflex.g:7730:1: rule__CastExpression__Group_1__3 : rule__CastExpression__Group_1__3__Impl ;
    public final void rule__CastExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7734:1: ( rule__CastExpression__Group_1__3__Impl )
            // InternalReflex.g:7735:2: rule__CastExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CastExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__3"


    // $ANTLR start "rule__CastExpression__Group_1__3__Impl"
    // InternalReflex.g:7741:1: rule__CastExpression__Group_1__3__Impl : ( ( rule__CastExpression__RightAssignment_1_3 ) ) ;
    public final void rule__CastExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7745:1: ( ( ( rule__CastExpression__RightAssignment_1_3 ) ) )
            // InternalReflex.g:7746:1: ( ( rule__CastExpression__RightAssignment_1_3 ) )
            {
            // InternalReflex.g:7746:1: ( ( rule__CastExpression__RightAssignment_1_3 ) )
            // InternalReflex.g:7747:2: ( rule__CastExpression__RightAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getRightAssignment_1_3()); 
            }
            // InternalReflex.g:7748:2: ( rule__CastExpression__RightAssignment_1_3 )
            // InternalReflex.g:7748:3: rule__CastExpression__RightAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__CastExpression__RightAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getRightAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__Group_1__3__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0"
    // InternalReflex.g:7757:1: rule__MultiplicativeExpression__Group__0 : rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 ;
    public final void rule__MultiplicativeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7761:1: ( rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 )
            // InternalReflex.g:7762:2: rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__MultiplicativeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0__Impl"
    // InternalReflex.g:7769:1: rule__MultiplicativeExpression__Group__0__Impl : ( ruleCastExpression ) ;
    public final void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7773:1: ( ( ruleCastExpression ) )
            // InternalReflex.g:7774:1: ( ruleCastExpression )
            {
            // InternalReflex.g:7774:1: ( ruleCastExpression )
            // InternalReflex.g:7775:2: ruleCastExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCastExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1"
    // InternalReflex.g:7784:1: rule__MultiplicativeExpression__Group__1 : rule__MultiplicativeExpression__Group__1__Impl ;
    public final void rule__MultiplicativeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7788:1: ( rule__MultiplicativeExpression__Group__1__Impl )
            // InternalReflex.g:7789:2: rule__MultiplicativeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1__Impl"
    // InternalReflex.g:7795:1: rule__MultiplicativeExpression__Group__1__Impl : ( ( rule__MultiplicativeExpression__Group_1__0 )* ) ;
    public final void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7799:1: ( ( ( rule__MultiplicativeExpression__Group_1__0 )* ) )
            // InternalReflex.g:7800:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            {
            // InternalReflex.g:7800:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            // InternalReflex.g:7801:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:7802:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0>=69 && LA49_0<=71)) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalReflex.g:7802:3: rule__MultiplicativeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__MultiplicativeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0"
    // InternalReflex.g:7811:1: rule__MultiplicativeExpression__Group_1__0 : rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 ;
    public final void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7815:1: ( rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 )
            // InternalReflex.g:7816:2: rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1
            {
            pushFollow(FOLLOW_61);
            rule__MultiplicativeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0__Impl"
    // InternalReflex.g:7823:1: rule__MultiplicativeExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7827:1: ( ( () ) )
            // InternalReflex.g:7828:1: ( () )
            {
            // InternalReflex.g:7828:1: ( () )
            // InternalReflex.g:7829:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:7830:2: ()
            // InternalReflex.g:7830:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1"
    // InternalReflex.g:7838:1: rule__MultiplicativeExpression__Group_1__1 : rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 ;
    public final void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7842:1: ( rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 )
            // InternalReflex.g:7843:2: rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__MultiplicativeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1__Impl"
    // InternalReflex.g:7850:1: rule__MultiplicativeExpression__Group_1__1__Impl : ( ( rule__MultiplicativeExpression__MulOpAssignment_1_1 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7854:1: ( ( ( rule__MultiplicativeExpression__MulOpAssignment_1_1 ) ) )
            // InternalReflex.g:7855:1: ( ( rule__MultiplicativeExpression__MulOpAssignment_1_1 ) )
            {
            // InternalReflex.g:7855:1: ( ( rule__MultiplicativeExpression__MulOpAssignment_1_1 ) )
            // InternalReflex.g:7856:2: ( rule__MultiplicativeExpression__MulOpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMulOpAssignment_1_1()); 
            }
            // InternalReflex.g:7857:2: ( rule__MultiplicativeExpression__MulOpAssignment_1_1 )
            // InternalReflex.g:7857:3: rule__MultiplicativeExpression__MulOpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__MulOpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMulOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2"
    // InternalReflex.g:7865:1: rule__MultiplicativeExpression__Group_1__2 : rule__MultiplicativeExpression__Group_1__2__Impl ;
    public final void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7869:1: ( rule__MultiplicativeExpression__Group_1__2__Impl )
            // InternalReflex.g:7870:2: rule__MultiplicativeExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2__Impl"
    // InternalReflex.g:7876:1: rule__MultiplicativeExpression__Group_1__2__Impl : ( ( rule__MultiplicativeExpression__RightAssignment_1_2 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7880:1: ( ( ( rule__MultiplicativeExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:7881:1: ( ( rule__MultiplicativeExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:7881:1: ( ( rule__MultiplicativeExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:7882:2: ( rule__MultiplicativeExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:7883:2: ( rule__MultiplicativeExpression__RightAssignment_1_2 )
            // InternalReflex.g:7883:3: rule__MultiplicativeExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__0"
    // InternalReflex.g:7892:1: rule__AdditiveExpression__Group__0 : rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 ;
    public final void rule__AdditiveExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7896:1: ( rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 )
            // InternalReflex.g:7897:2: rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__AdditiveExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0"


    // $ANTLR start "rule__AdditiveExpression__Group__0__Impl"
    // InternalReflex.g:7904:1: rule__AdditiveExpression__Group__0__Impl : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7908:1: ( ( ruleMultiplicativeExpression ) )
            // InternalReflex.g:7909:1: ( ruleMultiplicativeExpression )
            {
            // InternalReflex.g:7909:1: ( ruleMultiplicativeExpression )
            // InternalReflex.g:7910:2: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__1"
    // InternalReflex.g:7919:1: rule__AdditiveExpression__Group__1 : rule__AdditiveExpression__Group__1__Impl ;
    public final void rule__AdditiveExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7923:1: ( rule__AdditiveExpression__Group__1__Impl )
            // InternalReflex.g:7924:2: rule__AdditiveExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1"


    // $ANTLR start "rule__AdditiveExpression__Group__1__Impl"
    // InternalReflex.g:7930:1: rule__AdditiveExpression__Group__1__Impl : ( ( rule__AdditiveExpression__Group_1__0 )* ) ;
    public final void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7934:1: ( ( ( rule__AdditiveExpression__Group_1__0 )* ) )
            // InternalReflex.g:7935:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            {
            // InternalReflex.g:7935:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            // InternalReflex.g:7936:2: ( rule__AdditiveExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:7937:2: ( rule__AdditiveExpression__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==57) ) {
                    int LA50_2 = input.LA(2);

                    if ( (synpred97_InternalReflex()) ) {
                        alt50=1;
                    }


                }
                else if ( (LA50_0==58) ) {
                    int LA50_3 = input.LA(2);

                    if ( (synpred97_InternalReflex()) ) {
                        alt50=1;
                    }


                }


                switch (alt50) {
            	case 1 :
            	    // InternalReflex.g:7937:3: rule__AdditiveExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_64);
            	    rule__AdditiveExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0"
    // InternalReflex.g:7946:1: rule__AdditiveExpression__Group_1__0 : rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 ;
    public final void rule__AdditiveExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7950:1: ( rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 )
            // InternalReflex.g:7951:2: rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1
            {
            pushFollow(FOLLOW_63);
            rule__AdditiveExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0__Impl"
    // InternalReflex.g:7958:1: rule__AdditiveExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7962:1: ( ( () ) )
            // InternalReflex.g:7963:1: ( () )
            {
            // InternalReflex.g:7963:1: ( () )
            // InternalReflex.g:7964:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:7965:2: ()
            // InternalReflex.g:7965:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1"
    // InternalReflex.g:7973:1: rule__AdditiveExpression__Group_1__1 : rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 ;
    public final void rule__AdditiveExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7977:1: ( rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 )
            // InternalReflex.g:7978:2: rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__AdditiveExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1__Impl"
    // InternalReflex.g:7985:1: rule__AdditiveExpression__Group_1__1__Impl : ( ( rule__AdditiveExpression__AddOpAssignment_1_1 ) ) ;
    public final void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:7989:1: ( ( ( rule__AdditiveExpression__AddOpAssignment_1_1 ) ) )
            // InternalReflex.g:7990:1: ( ( rule__AdditiveExpression__AddOpAssignment_1_1 ) )
            {
            // InternalReflex.g:7990:1: ( ( rule__AdditiveExpression__AddOpAssignment_1_1 ) )
            // InternalReflex.g:7991:2: ( rule__AdditiveExpression__AddOpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAddOpAssignment_1_1()); 
            }
            // InternalReflex.g:7992:2: ( rule__AdditiveExpression__AddOpAssignment_1_1 )
            // InternalReflex.g:7992:3: rule__AdditiveExpression__AddOpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__AddOpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAddOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2"
    // InternalReflex.g:8000:1: rule__AdditiveExpression__Group_1__2 : rule__AdditiveExpression__Group_1__2__Impl ;
    public final void rule__AdditiveExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8004:1: ( rule__AdditiveExpression__Group_1__2__Impl )
            // InternalReflex.g:8005:2: rule__AdditiveExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2__Impl"
    // InternalReflex.g:8011:1: rule__AdditiveExpression__Group_1__2__Impl : ( ( rule__AdditiveExpression__RightAssignment_1_2 ) ) ;
    public final void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8015:1: ( ( ( rule__AdditiveExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8016:1: ( ( rule__AdditiveExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8016:1: ( ( rule__AdditiveExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8017:2: ( rule__AdditiveExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8018:2: ( rule__AdditiveExpression__RightAssignment_1_2 )
            // InternalReflex.g:8018:3: rule__AdditiveExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ShiftExpression__Group__0"
    // InternalReflex.g:8027:1: rule__ShiftExpression__Group__0 : rule__ShiftExpression__Group__0__Impl rule__ShiftExpression__Group__1 ;
    public final void rule__ShiftExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8031:1: ( rule__ShiftExpression__Group__0__Impl rule__ShiftExpression__Group__1 )
            // InternalReflex.g:8032:2: rule__ShiftExpression__Group__0__Impl rule__ShiftExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__ShiftExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group__0"


    // $ANTLR start "rule__ShiftExpression__Group__0__Impl"
    // InternalReflex.g:8039:1: rule__ShiftExpression__Group__0__Impl : ( ruleAdditiveExpression ) ;
    public final void rule__ShiftExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8043:1: ( ( ruleAdditiveExpression ) )
            // InternalReflex.g:8044:1: ( ruleAdditiveExpression )
            {
            // InternalReflex.g:8044:1: ( ruleAdditiveExpression )
            // InternalReflex.g:8045:2: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group__0__Impl"


    // $ANTLR start "rule__ShiftExpression__Group__1"
    // InternalReflex.g:8054:1: rule__ShiftExpression__Group__1 : rule__ShiftExpression__Group__1__Impl ;
    public final void rule__ShiftExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8058:1: ( rule__ShiftExpression__Group__1__Impl )
            // InternalReflex.g:8059:2: rule__ShiftExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group__1"


    // $ANTLR start "rule__ShiftExpression__Group__1__Impl"
    // InternalReflex.g:8065:1: rule__ShiftExpression__Group__1__Impl : ( ( rule__ShiftExpression__Group_1__0 )* ) ;
    public final void rule__ShiftExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8069:1: ( ( ( rule__ShiftExpression__Group_1__0 )* ) )
            // InternalReflex.g:8070:1: ( ( rule__ShiftExpression__Group_1__0 )* )
            {
            // InternalReflex.g:8070:1: ( ( rule__ShiftExpression__Group_1__0 )* )
            // InternalReflex.g:8071:2: ( rule__ShiftExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:8072:2: ( rule__ShiftExpression__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==67) ) {
                    int LA51_2 = input.LA(2);

                    if ( (synpred98_InternalReflex()) ) {
                        alt51=1;
                    }


                }
                else if ( (LA51_0==68) ) {
                    int LA51_3 = input.LA(2);

                    if ( (synpred98_InternalReflex()) ) {
                        alt51=1;
                    }


                }


                switch (alt51) {
            	case 1 :
            	    // InternalReflex.g:8072:3: rule__ShiftExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_66);
            	    rule__ShiftExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group__1__Impl"


    // $ANTLR start "rule__ShiftExpression__Group_1__0"
    // InternalReflex.g:8081:1: rule__ShiftExpression__Group_1__0 : rule__ShiftExpression__Group_1__0__Impl rule__ShiftExpression__Group_1__1 ;
    public final void rule__ShiftExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8085:1: ( rule__ShiftExpression__Group_1__0__Impl rule__ShiftExpression__Group_1__1 )
            // InternalReflex.g:8086:2: rule__ShiftExpression__Group_1__0__Impl rule__ShiftExpression__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__ShiftExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group_1__0"


    // $ANTLR start "rule__ShiftExpression__Group_1__0__Impl"
    // InternalReflex.g:8093:1: rule__ShiftExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__ShiftExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8097:1: ( ( () ) )
            // InternalReflex.g:8098:1: ( () )
            {
            // InternalReflex.g:8098:1: ( () )
            // InternalReflex.g:8099:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:8100:2: ()
            // InternalReflex.g:8100:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ShiftExpression__Group_1__1"
    // InternalReflex.g:8108:1: rule__ShiftExpression__Group_1__1 : rule__ShiftExpression__Group_1__1__Impl rule__ShiftExpression__Group_1__2 ;
    public final void rule__ShiftExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8112:1: ( rule__ShiftExpression__Group_1__1__Impl rule__ShiftExpression__Group_1__2 )
            // InternalReflex.g:8113:2: rule__ShiftExpression__Group_1__1__Impl rule__ShiftExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__ShiftExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group_1__1"


    // $ANTLR start "rule__ShiftExpression__Group_1__1__Impl"
    // InternalReflex.g:8120:1: rule__ShiftExpression__Group_1__1__Impl : ( ( rule__ShiftExpression__ShiftOpAssignment_1_1 ) ) ;
    public final void rule__ShiftExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8124:1: ( ( ( rule__ShiftExpression__ShiftOpAssignment_1_1 ) ) )
            // InternalReflex.g:8125:1: ( ( rule__ShiftExpression__ShiftOpAssignment_1_1 ) )
            {
            // InternalReflex.g:8125:1: ( ( rule__ShiftExpression__ShiftOpAssignment_1_1 ) )
            // InternalReflex.g:8126:2: ( rule__ShiftExpression__ShiftOpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getShiftOpAssignment_1_1()); 
            }
            // InternalReflex.g:8127:2: ( rule__ShiftExpression__ShiftOpAssignment_1_1 )
            // InternalReflex.g:8127:3: rule__ShiftExpression__ShiftOpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__ShiftOpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getShiftOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ShiftExpression__Group_1__2"
    // InternalReflex.g:8135:1: rule__ShiftExpression__Group_1__2 : rule__ShiftExpression__Group_1__2__Impl ;
    public final void rule__ShiftExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8139:1: ( rule__ShiftExpression__Group_1__2__Impl )
            // InternalReflex.g:8140:2: rule__ShiftExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group_1__2"


    // $ANTLR start "rule__ShiftExpression__Group_1__2__Impl"
    // InternalReflex.g:8146:1: rule__ShiftExpression__Group_1__2__Impl : ( ( rule__ShiftExpression__RightAssignment_1_2 ) ) ;
    public final void rule__ShiftExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8150:1: ( ( ( rule__ShiftExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8151:1: ( ( rule__ShiftExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8151:1: ( ( rule__ShiftExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8152:2: ( rule__ShiftExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8153:2: ( rule__ShiftExpression__RightAssignment_1_2 )
            // InternalReflex.g:8153:3: rule__ShiftExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ShiftExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__Group_1__2__Impl"


    // $ANTLR start "rule__CompareExpression__Group_1__0"
    // InternalReflex.g:8162:1: rule__CompareExpression__Group_1__0 : rule__CompareExpression__Group_1__0__Impl rule__CompareExpression__Group_1__1 ;
    public final void rule__CompareExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8166:1: ( rule__CompareExpression__Group_1__0__Impl rule__CompareExpression__Group_1__1 )
            // InternalReflex.g:8167:2: rule__CompareExpression__Group_1__0__Impl rule__CompareExpression__Group_1__1
            {
            pushFollow(FOLLOW_67);
            rule__CompareExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompareExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1__0"


    // $ANTLR start "rule__CompareExpression__Group_1__0__Impl"
    // InternalReflex.g:8174:1: rule__CompareExpression__Group_1__0__Impl : ( ruleShiftExpression ) ;
    public final void rule__CompareExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8178:1: ( ( ruleShiftExpression ) )
            // InternalReflex.g:8179:1: ( ruleShiftExpression )
            {
            // InternalReflex.g:8179:1: ( ruleShiftExpression )
            // InternalReflex.g:8180:2: ruleShiftExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getShiftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShiftExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getShiftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1__0__Impl"


    // $ANTLR start "rule__CompareExpression__Group_1__1"
    // InternalReflex.g:8189:1: rule__CompareExpression__Group_1__1 : rule__CompareExpression__Group_1__1__Impl ;
    public final void rule__CompareExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8193:1: ( rule__CompareExpression__Group_1__1__Impl )
            // InternalReflex.g:8194:2: rule__CompareExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompareExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1__1"


    // $ANTLR start "rule__CompareExpression__Group_1__1__Impl"
    // InternalReflex.g:8200:1: rule__CompareExpression__Group_1__1__Impl : ( ( rule__CompareExpression__Group_1_1__0 )* ) ;
    public final void rule__CompareExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8204:1: ( ( ( rule__CompareExpression__Group_1_1__0 )* ) )
            // InternalReflex.g:8205:1: ( ( rule__CompareExpression__Group_1_1__0 )* )
            {
            // InternalReflex.g:8205:1: ( ( rule__CompareExpression__Group_1_1__0 )* )
            // InternalReflex.g:8206:2: ( rule__CompareExpression__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getGroup_1_1()); 
            }
            // InternalReflex.g:8207:2: ( rule__CompareExpression__Group_1_1__0 )*
            loop52:
            do {
                int alt52=2;
                switch ( input.LA(1) ) {
                case 61:
                    {
                    int LA52_2 = input.LA(2);

                    if ( (synpred99_InternalReflex()) ) {
                        alt52=1;
                    }


                    }
                    break;
                case 62:
                    {
                    int LA52_3 = input.LA(2);

                    if ( (synpred99_InternalReflex()) ) {
                        alt52=1;
                    }


                    }
                    break;
                case 63:
                    {
                    int LA52_4 = input.LA(2);

                    if ( (synpred99_InternalReflex()) ) {
                        alt52=1;
                    }


                    }
                    break;
                case 64:
                    {
                    int LA52_5 = input.LA(2);

                    if ( (synpred99_InternalReflex()) ) {
                        alt52=1;
                    }


                    }
                    break;

                }

                switch (alt52) {
            	case 1 :
            	    // InternalReflex.g:8207:3: rule__CompareExpression__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_68);
            	    rule__CompareExpression__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1__1__Impl"


    // $ANTLR start "rule__CompareExpression__Group_1_1__0"
    // InternalReflex.g:8216:1: rule__CompareExpression__Group_1_1__0 : rule__CompareExpression__Group_1_1__0__Impl rule__CompareExpression__Group_1_1__1 ;
    public final void rule__CompareExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8220:1: ( rule__CompareExpression__Group_1_1__0__Impl rule__CompareExpression__Group_1_1__1 )
            // InternalReflex.g:8221:2: rule__CompareExpression__Group_1_1__0__Impl rule__CompareExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_67);
            rule__CompareExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompareExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1_1__0"


    // $ANTLR start "rule__CompareExpression__Group_1_1__0__Impl"
    // InternalReflex.g:8228:1: rule__CompareExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__CompareExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8232:1: ( ( () ) )
            // InternalReflex.g:8233:1: ( () )
            {
            // InternalReflex.g:8233:1: ( () )
            // InternalReflex.g:8234:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_1_0()); 
            }
            // InternalReflex.g:8235:2: ()
            // InternalReflex.g:8235:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__CompareExpression__Group_1_1__1"
    // InternalReflex.g:8243:1: rule__CompareExpression__Group_1_1__1 : rule__CompareExpression__Group_1_1__1__Impl rule__CompareExpression__Group_1_1__2 ;
    public final void rule__CompareExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8247:1: ( rule__CompareExpression__Group_1_1__1__Impl rule__CompareExpression__Group_1_1__2 )
            // InternalReflex.g:8248:2: rule__CompareExpression__Group_1_1__1__Impl rule__CompareExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_18);
            rule__CompareExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompareExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1_1__1"


    // $ANTLR start "rule__CompareExpression__Group_1_1__1__Impl"
    // InternalReflex.g:8255:1: rule__CompareExpression__Group_1_1__1__Impl : ( ( rule__CompareExpression__CmpOpAssignment_1_1_1 ) ) ;
    public final void rule__CompareExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8259:1: ( ( ( rule__CompareExpression__CmpOpAssignment_1_1_1 ) ) )
            // InternalReflex.g:8260:1: ( ( rule__CompareExpression__CmpOpAssignment_1_1_1 ) )
            {
            // InternalReflex.g:8260:1: ( ( rule__CompareExpression__CmpOpAssignment_1_1_1 ) )
            // InternalReflex.g:8261:2: ( rule__CompareExpression__CmpOpAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getCmpOpAssignment_1_1_1()); 
            }
            // InternalReflex.g:8262:2: ( rule__CompareExpression__CmpOpAssignment_1_1_1 )
            // InternalReflex.g:8262:3: rule__CompareExpression__CmpOpAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__CompareExpression__CmpOpAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getCmpOpAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__CompareExpression__Group_1_1__2"
    // InternalReflex.g:8270:1: rule__CompareExpression__Group_1_1__2 : rule__CompareExpression__Group_1_1__2__Impl ;
    public final void rule__CompareExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8274:1: ( rule__CompareExpression__Group_1_1__2__Impl )
            // InternalReflex.g:8275:2: rule__CompareExpression__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompareExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1_1__2"


    // $ANTLR start "rule__CompareExpression__Group_1_1__2__Impl"
    // InternalReflex.g:8281:1: rule__CompareExpression__Group_1_1__2__Impl : ( ( rule__CompareExpression__RightAssignment_1_1_2 ) ) ;
    public final void rule__CompareExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8285:1: ( ( ( rule__CompareExpression__RightAssignment_1_1_2 ) ) )
            // InternalReflex.g:8286:1: ( ( rule__CompareExpression__RightAssignment_1_1_2 ) )
            {
            // InternalReflex.g:8286:1: ( ( rule__CompareExpression__RightAssignment_1_1_2 ) )
            // InternalReflex.g:8287:2: ( rule__CompareExpression__RightAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1_2()); 
            }
            // InternalReflex.g:8288:2: ( rule__CompareExpression__RightAssignment_1_1_2 )
            // InternalReflex.g:8288:3: rule__CompareExpression__RightAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__CompareExpression__RightAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__EqualityExpression__Group__0"
    // InternalReflex.g:8297:1: rule__EqualityExpression__Group__0 : rule__EqualityExpression__Group__0__Impl rule__EqualityExpression__Group__1 ;
    public final void rule__EqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8301:1: ( rule__EqualityExpression__Group__0__Impl rule__EqualityExpression__Group__1 )
            // InternalReflex.g:8302:2: rule__EqualityExpression__Group__0__Impl rule__EqualityExpression__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__EqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__0"


    // $ANTLR start "rule__EqualityExpression__Group__0__Impl"
    // InternalReflex.g:8309:1: rule__EqualityExpression__Group__0__Impl : ( ruleCompareExpression ) ;
    public final void rule__EqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8313:1: ( ( ruleCompareExpression ) )
            // InternalReflex.g:8314:1: ( ruleCompareExpression )
            {
            // InternalReflex.g:8314:1: ( ruleCompareExpression )
            // InternalReflex.g:8315:2: ruleCompareExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__EqualityExpression__Group__1"
    // InternalReflex.g:8324:1: rule__EqualityExpression__Group__1 : rule__EqualityExpression__Group__1__Impl ;
    public final void rule__EqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8328:1: ( rule__EqualityExpression__Group__1__Impl )
            // InternalReflex.g:8329:2: rule__EqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__1"


    // $ANTLR start "rule__EqualityExpression__Group__1__Impl"
    // InternalReflex.g:8335:1: rule__EqualityExpression__Group__1__Impl : ( ( rule__EqualityExpression__Group_1__0 )* ) ;
    public final void rule__EqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8339:1: ( ( ( rule__EqualityExpression__Group_1__0 )* ) )
            // InternalReflex.g:8340:1: ( ( rule__EqualityExpression__Group_1__0 )* )
            {
            // InternalReflex.g:8340:1: ( ( rule__EqualityExpression__Group_1__0 )* )
            // InternalReflex.g:8341:2: ( rule__EqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:8342:2: ( rule__EqualityExpression__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==65) ) {
                    int LA53_2 = input.LA(2);

                    if ( (synpred100_InternalReflex()) ) {
                        alt53=1;
                    }


                }
                else if ( (LA53_0==66) ) {
                    int LA53_3 = input.LA(2);

                    if ( (synpred100_InternalReflex()) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalReflex.g:8342:3: rule__EqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__EqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__EqualityExpression__Group_1__0"
    // InternalReflex.g:8351:1: rule__EqualityExpression__Group_1__0 : rule__EqualityExpression__Group_1__0__Impl rule__EqualityExpression__Group_1__1 ;
    public final void rule__EqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8355:1: ( rule__EqualityExpression__Group_1__0__Impl rule__EqualityExpression__Group_1__1 )
            // InternalReflex.g:8356:2: rule__EqualityExpression__Group_1__0__Impl rule__EqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__EqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__0"


    // $ANTLR start "rule__EqualityExpression__Group_1__0__Impl"
    // InternalReflex.g:8363:1: rule__EqualityExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__EqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8367:1: ( ( () ) )
            // InternalReflex.g:8368:1: ( () )
            {
            // InternalReflex.g:8368:1: ( () )
            // InternalReflex.g:8369:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:8370:2: ()
            // InternalReflex.g:8370:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__EqualityExpression__Group_1__1"
    // InternalReflex.g:8378:1: rule__EqualityExpression__Group_1__1 : rule__EqualityExpression__Group_1__1__Impl rule__EqualityExpression__Group_1__2 ;
    public final void rule__EqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8382:1: ( rule__EqualityExpression__Group_1__1__Impl rule__EqualityExpression__Group_1__2 )
            // InternalReflex.g:8383:2: rule__EqualityExpression__Group_1__1__Impl rule__EqualityExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__EqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__1"


    // $ANTLR start "rule__EqualityExpression__Group_1__1__Impl"
    // InternalReflex.g:8390:1: rule__EqualityExpression__Group_1__1__Impl : ( ( rule__EqualityExpression__EqCmpOpAssignment_1_1 ) ) ;
    public final void rule__EqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8394:1: ( ( ( rule__EqualityExpression__EqCmpOpAssignment_1_1 ) ) )
            // InternalReflex.g:8395:1: ( ( rule__EqualityExpression__EqCmpOpAssignment_1_1 ) )
            {
            // InternalReflex.g:8395:1: ( ( rule__EqualityExpression__EqCmpOpAssignment_1_1 ) )
            // InternalReflex.g:8396:2: ( rule__EqualityExpression__EqCmpOpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqCmpOpAssignment_1_1()); 
            }
            // InternalReflex.g:8397:2: ( rule__EqualityExpression__EqCmpOpAssignment_1_1 )
            // InternalReflex.g:8397:3: rule__EqualityExpression__EqCmpOpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__EqCmpOpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqCmpOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__EqualityExpression__Group_1__2"
    // InternalReflex.g:8405:1: rule__EqualityExpression__Group_1__2 : rule__EqualityExpression__Group_1__2__Impl ;
    public final void rule__EqualityExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8409:1: ( rule__EqualityExpression__Group_1__2__Impl )
            // InternalReflex.g:8410:2: rule__EqualityExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__2"


    // $ANTLR start "rule__EqualityExpression__Group_1__2__Impl"
    // InternalReflex.g:8416:1: rule__EqualityExpression__Group_1__2__Impl : ( ( rule__EqualityExpression__RightAssignment_1_2 ) ) ;
    public final void rule__EqualityExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8420:1: ( ( ( rule__EqualityExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8421:1: ( ( rule__EqualityExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8421:1: ( ( rule__EqualityExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8422:2: ( rule__EqualityExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8423:2: ( rule__EqualityExpression__RightAssignment_1_2 )
            // InternalReflex.g:8423:3: rule__EqualityExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__2__Impl"


    // $ANTLR start "rule__BitAndExpression__Group__0"
    // InternalReflex.g:8432:1: rule__BitAndExpression__Group__0 : rule__BitAndExpression__Group__0__Impl rule__BitAndExpression__Group__1 ;
    public final void rule__BitAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8436:1: ( rule__BitAndExpression__Group__0__Impl rule__BitAndExpression__Group__1 )
            // InternalReflex.g:8437:2: rule__BitAndExpression__Group__0__Impl rule__BitAndExpression__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__BitAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group__0"


    // $ANTLR start "rule__BitAndExpression__Group__0__Impl"
    // InternalReflex.g:8444:1: rule__BitAndExpression__Group__0__Impl : ( ruleEqualityExpression ) ;
    public final void rule__BitAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8448:1: ( ( ruleEqualityExpression ) )
            // InternalReflex.g:8449:1: ( ruleEqualityExpression )
            {
            // InternalReflex.g:8449:1: ( ruleEqualityExpression )
            // InternalReflex.g:8450:2: ruleEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group__0__Impl"


    // $ANTLR start "rule__BitAndExpression__Group__1"
    // InternalReflex.g:8459:1: rule__BitAndExpression__Group__1 : rule__BitAndExpression__Group__1__Impl ;
    public final void rule__BitAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8463:1: ( rule__BitAndExpression__Group__1__Impl )
            // InternalReflex.g:8464:2: rule__BitAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group__1"


    // $ANTLR start "rule__BitAndExpression__Group__1__Impl"
    // InternalReflex.g:8470:1: rule__BitAndExpression__Group__1__Impl : ( ( rule__BitAndExpression__Group_1__0 )* ) ;
    public final void rule__BitAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8474:1: ( ( ( rule__BitAndExpression__Group_1__0 )* ) )
            // InternalReflex.g:8475:1: ( ( rule__BitAndExpression__Group_1__0 )* )
            {
            // InternalReflex.g:8475:1: ( ( rule__BitAndExpression__Group_1__0 )* )
            // InternalReflex.g:8476:2: ( rule__BitAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:8477:2: ( rule__BitAndExpression__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==RULE_BIT_AND) ) {
                    int LA54_2 = input.LA(2);

                    if ( (synpred101_InternalReflex()) ) {
                        alt54=1;
                    }


                }


                switch (alt54) {
            	case 1 :
            	    // InternalReflex.g:8477:3: rule__BitAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_72);
            	    rule__BitAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group__1__Impl"


    // $ANTLR start "rule__BitAndExpression__Group_1__0"
    // InternalReflex.g:8486:1: rule__BitAndExpression__Group_1__0 : rule__BitAndExpression__Group_1__0__Impl rule__BitAndExpression__Group_1__1 ;
    public final void rule__BitAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8490:1: ( rule__BitAndExpression__Group_1__0__Impl rule__BitAndExpression__Group_1__1 )
            // InternalReflex.g:8491:2: rule__BitAndExpression__Group_1__0__Impl rule__BitAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_71);
            rule__BitAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group_1__0"


    // $ANTLR start "rule__BitAndExpression__Group_1__0__Impl"
    // InternalReflex.g:8498:1: rule__BitAndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__BitAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8502:1: ( ( () ) )
            // InternalReflex.g:8503:1: ( () )
            {
            // InternalReflex.g:8503:1: ( () )
            // InternalReflex.g:8504:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getBitAndExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:8505:2: ()
            // InternalReflex.g:8505:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getBitAndExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__BitAndExpression__Group_1__1"
    // InternalReflex.g:8513:1: rule__BitAndExpression__Group_1__1 : rule__BitAndExpression__Group_1__1__Impl rule__BitAndExpression__Group_1__2 ;
    public final void rule__BitAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8517:1: ( rule__BitAndExpression__Group_1__1__Impl rule__BitAndExpression__Group_1__2 )
            // InternalReflex.g:8518:2: rule__BitAndExpression__Group_1__1__Impl rule__BitAndExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__BitAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group_1__1"


    // $ANTLR start "rule__BitAndExpression__Group_1__1__Impl"
    // InternalReflex.g:8525:1: rule__BitAndExpression__Group_1__1__Impl : ( RULE_BIT_AND ) ;
    public final void rule__BitAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8529:1: ( ( RULE_BIT_AND ) )
            // InternalReflex.g:8530:1: ( RULE_BIT_AND )
            {
            // InternalReflex.g:8530:1: ( RULE_BIT_AND )
            // InternalReflex.g:8531:2: RULE_BIT_AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getBIT_ANDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_BIT_AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getBIT_ANDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__BitAndExpression__Group_1__2"
    // InternalReflex.g:8540:1: rule__BitAndExpression__Group_1__2 : rule__BitAndExpression__Group_1__2__Impl ;
    public final void rule__BitAndExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8544:1: ( rule__BitAndExpression__Group_1__2__Impl )
            // InternalReflex.g:8545:2: rule__BitAndExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group_1__2"


    // $ANTLR start "rule__BitAndExpression__Group_1__2__Impl"
    // InternalReflex.g:8551:1: rule__BitAndExpression__Group_1__2__Impl : ( ( rule__BitAndExpression__RightAssignment_1_2 ) ) ;
    public final void rule__BitAndExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8555:1: ( ( ( rule__BitAndExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8556:1: ( ( rule__BitAndExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8556:1: ( ( rule__BitAndExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8557:2: ( rule__BitAndExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8558:2: ( rule__BitAndExpression__RightAssignment_1_2 )
            // InternalReflex.g:8558:3: rule__BitAndExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitAndExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__BitXorExpression__Group__0"
    // InternalReflex.g:8567:1: rule__BitXorExpression__Group__0 : rule__BitXorExpression__Group__0__Impl rule__BitXorExpression__Group__1 ;
    public final void rule__BitXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8571:1: ( rule__BitXorExpression__Group__0__Impl rule__BitXorExpression__Group__1 )
            // InternalReflex.g:8572:2: rule__BitXorExpression__Group__0__Impl rule__BitXorExpression__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__BitXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group__0"


    // $ANTLR start "rule__BitXorExpression__Group__0__Impl"
    // InternalReflex.g:8579:1: rule__BitXorExpression__Group__0__Impl : ( ruleBitAndExpression ) ;
    public final void rule__BitXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8583:1: ( ( ruleBitAndExpression ) )
            // InternalReflex.g:8584:1: ( ruleBitAndExpression )
            {
            // InternalReflex.g:8584:1: ( ruleBitAndExpression )
            // InternalReflex.g:8585:2: ruleBitAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getBitAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getBitAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group__0__Impl"


    // $ANTLR start "rule__BitXorExpression__Group__1"
    // InternalReflex.g:8594:1: rule__BitXorExpression__Group__1 : rule__BitXorExpression__Group__1__Impl ;
    public final void rule__BitXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8598:1: ( rule__BitXorExpression__Group__1__Impl )
            // InternalReflex.g:8599:2: rule__BitXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group__1"


    // $ANTLR start "rule__BitXorExpression__Group__1__Impl"
    // InternalReflex.g:8605:1: rule__BitXorExpression__Group__1__Impl : ( ( rule__BitXorExpression__Group_1__0 )* ) ;
    public final void rule__BitXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8609:1: ( ( ( rule__BitXorExpression__Group_1__0 )* ) )
            // InternalReflex.g:8610:1: ( ( rule__BitXorExpression__Group_1__0 )* )
            {
            // InternalReflex.g:8610:1: ( ( rule__BitXorExpression__Group_1__0 )* )
            // InternalReflex.g:8611:2: ( rule__BitXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:8612:2: ( rule__BitXorExpression__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_BIT_XOR) ) {
                    int LA55_2 = input.LA(2);

                    if ( (synpred102_InternalReflex()) ) {
                        alt55=1;
                    }


                }


                switch (alt55) {
            	case 1 :
            	    // InternalReflex.g:8612:3: rule__BitXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_74);
            	    rule__BitXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group__1__Impl"


    // $ANTLR start "rule__BitXorExpression__Group_1__0"
    // InternalReflex.g:8621:1: rule__BitXorExpression__Group_1__0 : rule__BitXorExpression__Group_1__0__Impl rule__BitXorExpression__Group_1__1 ;
    public final void rule__BitXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8625:1: ( rule__BitXorExpression__Group_1__0__Impl rule__BitXorExpression__Group_1__1 )
            // InternalReflex.g:8626:2: rule__BitXorExpression__Group_1__0__Impl rule__BitXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_73);
            rule__BitXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group_1__0"


    // $ANTLR start "rule__BitXorExpression__Group_1__0__Impl"
    // InternalReflex.g:8633:1: rule__BitXorExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__BitXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8637:1: ( ( () ) )
            // InternalReflex.g:8638:1: ( () )
            {
            // InternalReflex.g:8638:1: ( () )
            // InternalReflex.g:8639:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getBitXorExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:8640:2: ()
            // InternalReflex.g:8640:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getBitXorExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__BitXorExpression__Group_1__1"
    // InternalReflex.g:8648:1: rule__BitXorExpression__Group_1__1 : rule__BitXorExpression__Group_1__1__Impl rule__BitXorExpression__Group_1__2 ;
    public final void rule__BitXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8652:1: ( rule__BitXorExpression__Group_1__1__Impl rule__BitXorExpression__Group_1__2 )
            // InternalReflex.g:8653:2: rule__BitXorExpression__Group_1__1__Impl rule__BitXorExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__BitXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group_1__1"


    // $ANTLR start "rule__BitXorExpression__Group_1__1__Impl"
    // InternalReflex.g:8660:1: rule__BitXorExpression__Group_1__1__Impl : ( RULE_BIT_XOR ) ;
    public final void rule__BitXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8664:1: ( ( RULE_BIT_XOR ) )
            // InternalReflex.g:8665:1: ( RULE_BIT_XOR )
            {
            // InternalReflex.g:8665:1: ( RULE_BIT_XOR )
            // InternalReflex.g:8666:2: RULE_BIT_XOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getBIT_XORTerminalRuleCall_1_1()); 
            }
            match(input,RULE_BIT_XOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getBIT_XORTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__BitXorExpression__Group_1__2"
    // InternalReflex.g:8675:1: rule__BitXorExpression__Group_1__2 : rule__BitXorExpression__Group_1__2__Impl ;
    public final void rule__BitXorExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8679:1: ( rule__BitXorExpression__Group_1__2__Impl )
            // InternalReflex.g:8680:2: rule__BitXorExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group_1__2"


    // $ANTLR start "rule__BitXorExpression__Group_1__2__Impl"
    // InternalReflex.g:8686:1: rule__BitXorExpression__Group_1__2__Impl : ( ( rule__BitXorExpression__RightAssignment_1_2 ) ) ;
    public final void rule__BitXorExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8690:1: ( ( ( rule__BitXorExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8691:1: ( ( rule__BitXorExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8691:1: ( ( rule__BitXorExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8692:2: ( rule__BitXorExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8693:2: ( rule__BitXorExpression__RightAssignment_1_2 )
            // InternalReflex.g:8693:3: rule__BitXorExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitXorExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__Group_1__2__Impl"


    // $ANTLR start "rule__BitOrExpression__Group__0"
    // InternalReflex.g:8702:1: rule__BitOrExpression__Group__0 : rule__BitOrExpression__Group__0__Impl rule__BitOrExpression__Group__1 ;
    public final void rule__BitOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8706:1: ( rule__BitOrExpression__Group__0__Impl rule__BitOrExpression__Group__1 )
            // InternalReflex.g:8707:2: rule__BitOrExpression__Group__0__Impl rule__BitOrExpression__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__BitOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group__0"


    // $ANTLR start "rule__BitOrExpression__Group__0__Impl"
    // InternalReflex.g:8714:1: rule__BitOrExpression__Group__0__Impl : ( ruleBitXorExpression ) ;
    public final void rule__BitOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8718:1: ( ( ruleBitXorExpression ) )
            // InternalReflex.g:8719:1: ( ruleBitXorExpression )
            {
            // InternalReflex.g:8719:1: ( ruleBitXorExpression )
            // InternalReflex.g:8720:2: ruleBitXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getBitXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getBitXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group__0__Impl"


    // $ANTLR start "rule__BitOrExpression__Group__1"
    // InternalReflex.g:8729:1: rule__BitOrExpression__Group__1 : rule__BitOrExpression__Group__1__Impl ;
    public final void rule__BitOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8733:1: ( rule__BitOrExpression__Group__1__Impl )
            // InternalReflex.g:8734:2: rule__BitOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group__1"


    // $ANTLR start "rule__BitOrExpression__Group__1__Impl"
    // InternalReflex.g:8740:1: rule__BitOrExpression__Group__1__Impl : ( ( rule__BitOrExpression__Group_1__0 )* ) ;
    public final void rule__BitOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8744:1: ( ( ( rule__BitOrExpression__Group_1__0 )* ) )
            // InternalReflex.g:8745:1: ( ( rule__BitOrExpression__Group_1__0 )* )
            {
            // InternalReflex.g:8745:1: ( ( rule__BitOrExpression__Group_1__0 )* )
            // InternalReflex.g:8746:2: ( rule__BitOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:8747:2: ( rule__BitOrExpression__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_BIT_OR) ) {
                    int LA56_2 = input.LA(2);

                    if ( (synpred103_InternalReflex()) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // InternalReflex.g:8747:3: rule__BitOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_76);
            	    rule__BitOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group__1__Impl"


    // $ANTLR start "rule__BitOrExpression__Group_1__0"
    // InternalReflex.g:8756:1: rule__BitOrExpression__Group_1__0 : rule__BitOrExpression__Group_1__0__Impl rule__BitOrExpression__Group_1__1 ;
    public final void rule__BitOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8760:1: ( rule__BitOrExpression__Group_1__0__Impl rule__BitOrExpression__Group_1__1 )
            // InternalReflex.g:8761:2: rule__BitOrExpression__Group_1__0__Impl rule__BitOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_75);
            rule__BitOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group_1__0"


    // $ANTLR start "rule__BitOrExpression__Group_1__0__Impl"
    // InternalReflex.g:8768:1: rule__BitOrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__BitOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8772:1: ( ( () ) )
            // InternalReflex.g:8773:1: ( () )
            {
            // InternalReflex.g:8773:1: ( () )
            // InternalReflex.g:8774:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getBitOrExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:8775:2: ()
            // InternalReflex.g:8775:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getBitOrExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__BitOrExpression__Group_1__1"
    // InternalReflex.g:8783:1: rule__BitOrExpression__Group_1__1 : rule__BitOrExpression__Group_1__1__Impl rule__BitOrExpression__Group_1__2 ;
    public final void rule__BitOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8787:1: ( rule__BitOrExpression__Group_1__1__Impl rule__BitOrExpression__Group_1__2 )
            // InternalReflex.g:8788:2: rule__BitOrExpression__Group_1__1__Impl rule__BitOrExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__BitOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group_1__1"


    // $ANTLR start "rule__BitOrExpression__Group_1__1__Impl"
    // InternalReflex.g:8795:1: rule__BitOrExpression__Group_1__1__Impl : ( RULE_BIT_OR ) ;
    public final void rule__BitOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8799:1: ( ( RULE_BIT_OR ) )
            // InternalReflex.g:8800:1: ( RULE_BIT_OR )
            {
            // InternalReflex.g:8800:1: ( RULE_BIT_OR )
            // InternalReflex.g:8801:2: RULE_BIT_OR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getBIT_ORTerminalRuleCall_1_1()); 
            }
            match(input,RULE_BIT_OR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getBIT_ORTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__BitOrExpression__Group_1__2"
    // InternalReflex.g:8810:1: rule__BitOrExpression__Group_1__2 : rule__BitOrExpression__Group_1__2__Impl ;
    public final void rule__BitOrExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8814:1: ( rule__BitOrExpression__Group_1__2__Impl )
            // InternalReflex.g:8815:2: rule__BitOrExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group_1__2"


    // $ANTLR start "rule__BitOrExpression__Group_1__2__Impl"
    // InternalReflex.g:8821:1: rule__BitOrExpression__Group_1__2__Impl : ( ( rule__BitOrExpression__RightAssignment_1_2 ) ) ;
    public final void rule__BitOrExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8825:1: ( ( ( rule__BitOrExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8826:1: ( ( rule__BitOrExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8826:1: ( ( rule__BitOrExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8827:2: ( rule__BitOrExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8828:2: ( rule__BitOrExpression__RightAssignment_1_2 )
            // InternalReflex.g:8828:3: rule__BitOrExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__BitOrExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group__0"
    // InternalReflex.g:8837:1: rule__LogicalAndExpression__Group__0 : rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1 ;
    public final void rule__LogicalAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8841:1: ( rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1 )
            // InternalReflex.g:8842:2: rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__LogicalAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__0"


    // $ANTLR start "rule__LogicalAndExpression__Group__0__Impl"
    // InternalReflex.g:8849:1: rule__LogicalAndExpression__Group__0__Impl : ( ruleBitOrExpression ) ;
    public final void rule__LogicalAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8853:1: ( ( ruleBitOrExpression ) )
            // InternalReflex.g:8854:1: ( ruleBitOrExpression )
            {
            // InternalReflex.g:8854:1: ( ruleBitOrExpression )
            // InternalReflex.g:8855:2: ruleBitOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getBitOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getBitOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group__1"
    // InternalReflex.g:8864:1: rule__LogicalAndExpression__Group__1 : rule__LogicalAndExpression__Group__1__Impl ;
    public final void rule__LogicalAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8868:1: ( rule__LogicalAndExpression__Group__1__Impl )
            // InternalReflex.g:8869:2: rule__LogicalAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__1"


    // $ANTLR start "rule__LogicalAndExpression__Group__1__Impl"
    // InternalReflex.g:8875:1: rule__LogicalAndExpression__Group__1__Impl : ( ( rule__LogicalAndExpression__Group_1__0 )* ) ;
    public final void rule__LogicalAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8879:1: ( ( ( rule__LogicalAndExpression__Group_1__0 )* ) )
            // InternalReflex.g:8880:1: ( ( rule__LogicalAndExpression__Group_1__0 )* )
            {
            // InternalReflex.g:8880:1: ( ( rule__LogicalAndExpression__Group_1__0 )* )
            // InternalReflex.g:8881:2: ( rule__LogicalAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:8882:2: ( rule__LogicalAndExpression__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_LOGICAL_AND) ) {
                    int LA57_2 = input.LA(2);

                    if ( (synpred104_InternalReflex()) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // InternalReflex.g:8882:3: rule__LogicalAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_78);
            	    rule__LogicalAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__0"
    // InternalReflex.g:8891:1: rule__LogicalAndExpression__Group_1__0 : rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1 ;
    public final void rule__LogicalAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8895:1: ( rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1 )
            // InternalReflex.g:8896:2: rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_77);
            rule__LogicalAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__0"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__0__Impl"
    // InternalReflex.g:8903:1: rule__LogicalAndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__LogicalAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8907:1: ( ( () ) )
            // InternalReflex.g:8908:1: ( () )
            {
            // InternalReflex.g:8908:1: ( () )
            // InternalReflex.g:8909:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:8910:2: ()
            // InternalReflex.g:8910:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__1"
    // InternalReflex.g:8918:1: rule__LogicalAndExpression__Group_1__1 : rule__LogicalAndExpression__Group_1__1__Impl rule__LogicalAndExpression__Group_1__2 ;
    public final void rule__LogicalAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8922:1: ( rule__LogicalAndExpression__Group_1__1__Impl rule__LogicalAndExpression__Group_1__2 )
            // InternalReflex.g:8923:2: rule__LogicalAndExpression__Group_1__1__Impl rule__LogicalAndExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__LogicalAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__1"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__1__Impl"
    // InternalReflex.g:8930:1: rule__LogicalAndExpression__Group_1__1__Impl : ( RULE_LOGICAL_AND ) ;
    public final void rule__LogicalAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8934:1: ( ( RULE_LOGICAL_AND ) )
            // InternalReflex.g:8935:1: ( RULE_LOGICAL_AND )
            {
            // InternalReflex.g:8935:1: ( RULE_LOGICAL_AND )
            // InternalReflex.g:8936:2: RULE_LOGICAL_AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getLOGICAL_ANDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_LOGICAL_AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getLOGICAL_ANDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__2"
    // InternalReflex.g:8945:1: rule__LogicalAndExpression__Group_1__2 : rule__LogicalAndExpression__Group_1__2__Impl ;
    public final void rule__LogicalAndExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8949:1: ( rule__LogicalAndExpression__Group_1__2__Impl )
            // InternalReflex.g:8950:2: rule__LogicalAndExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__2"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__2__Impl"
    // InternalReflex.g:8956:1: rule__LogicalAndExpression__Group_1__2__Impl : ( ( rule__LogicalAndExpression__RightAssignment_1_2 ) ) ;
    public final void rule__LogicalAndExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8960:1: ( ( ( rule__LogicalAndExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:8961:1: ( ( rule__LogicalAndExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:8961:1: ( ( rule__LogicalAndExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:8962:2: ( rule__LogicalAndExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:8963:2: ( rule__LogicalAndExpression__RightAssignment_1_2 )
            // InternalReflex.g:8963:3: rule__LogicalAndExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group__0"
    // InternalReflex.g:8972:1: rule__LogicalOrExpression__Group__0 : rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1 ;
    public final void rule__LogicalOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8976:1: ( rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1 )
            // InternalReflex.g:8977:2: rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__LogicalOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__0"


    // $ANTLR start "rule__LogicalOrExpression__Group__0__Impl"
    // InternalReflex.g:8984:1: rule__LogicalOrExpression__Group__0__Impl : ( ruleLogicalAndExpression ) ;
    public final void rule__LogicalOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:8988:1: ( ( ruleLogicalAndExpression ) )
            // InternalReflex.g:8989:1: ( ruleLogicalAndExpression )
            {
            // InternalReflex.g:8989:1: ( ruleLogicalAndExpression )
            // InternalReflex.g:8990:2: ruleLogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group__1"
    // InternalReflex.g:8999:1: rule__LogicalOrExpression__Group__1 : rule__LogicalOrExpression__Group__1__Impl ;
    public final void rule__LogicalOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9003:1: ( rule__LogicalOrExpression__Group__1__Impl )
            // InternalReflex.g:9004:2: rule__LogicalOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__1"


    // $ANTLR start "rule__LogicalOrExpression__Group__1__Impl"
    // InternalReflex.g:9010:1: rule__LogicalOrExpression__Group__1__Impl : ( ( rule__LogicalOrExpression__Group_1__0 )* ) ;
    public final void rule__LogicalOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9014:1: ( ( ( rule__LogicalOrExpression__Group_1__0 )* ) )
            // InternalReflex.g:9015:1: ( ( rule__LogicalOrExpression__Group_1__0 )* )
            {
            // InternalReflex.g:9015:1: ( ( rule__LogicalOrExpression__Group_1__0 )* )
            // InternalReflex.g:9016:2: ( rule__LogicalOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); 
            }
            // InternalReflex.g:9017:2: ( rule__LogicalOrExpression__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_LOGICAL_OR) ) {
                    int LA58_2 = input.LA(2);

                    if ( (synpred105_InternalReflex()) ) {
                        alt58=1;
                    }


                }


                switch (alt58) {
            	case 1 :
            	    // InternalReflex.g:9017:3: rule__LogicalOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_80);
            	    rule__LogicalOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__0"
    // InternalReflex.g:9026:1: rule__LogicalOrExpression__Group_1__0 : rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1 ;
    public final void rule__LogicalOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9030:1: ( rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1 )
            // InternalReflex.g:9031:2: rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_79);
            rule__LogicalOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__0"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__0__Impl"
    // InternalReflex.g:9038:1: rule__LogicalOrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__LogicalOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9042:1: ( ( () ) )
            // InternalReflex.g:9043:1: ( () )
            {
            // InternalReflex.g:9043:1: ( () )
            // InternalReflex.g:9044:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0()); 
            }
            // InternalReflex.g:9045:2: ()
            // InternalReflex.g:9045:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__1"
    // InternalReflex.g:9053:1: rule__LogicalOrExpression__Group_1__1 : rule__LogicalOrExpression__Group_1__1__Impl rule__LogicalOrExpression__Group_1__2 ;
    public final void rule__LogicalOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9057:1: ( rule__LogicalOrExpression__Group_1__1__Impl rule__LogicalOrExpression__Group_1__2 )
            // InternalReflex.g:9058:2: rule__LogicalOrExpression__Group_1__1__Impl rule__LogicalOrExpression__Group_1__2
            {
            pushFollow(FOLLOW_18);
            rule__LogicalOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__1"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__1__Impl"
    // InternalReflex.g:9065:1: rule__LogicalOrExpression__Group_1__1__Impl : ( RULE_LOGICAL_OR ) ;
    public final void rule__LogicalOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9069:1: ( ( RULE_LOGICAL_OR ) )
            // InternalReflex.g:9070:1: ( RULE_LOGICAL_OR )
            {
            // InternalReflex.g:9070:1: ( RULE_LOGICAL_OR )
            // InternalReflex.g:9071:2: RULE_LOGICAL_OR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLOGICAL_ORTerminalRuleCall_1_1()); 
            }
            match(input,RULE_LOGICAL_OR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLOGICAL_ORTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__2"
    // InternalReflex.g:9080:1: rule__LogicalOrExpression__Group_1__2 : rule__LogicalOrExpression__Group_1__2__Impl ;
    public final void rule__LogicalOrExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9084:1: ( rule__LogicalOrExpression__Group_1__2__Impl )
            // InternalReflex.g:9085:2: rule__LogicalOrExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__2"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__2__Impl"
    // InternalReflex.g:9091:1: rule__LogicalOrExpression__Group_1__2__Impl : ( ( rule__LogicalOrExpression__RightAssignment_1_2 ) ) ;
    public final void rule__LogicalOrExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9095:1: ( ( ( rule__LogicalOrExpression__RightAssignment_1_2 ) ) )
            // InternalReflex.g:9096:1: ( ( rule__LogicalOrExpression__RightAssignment_1_2 ) )
            {
            // InternalReflex.g:9096:1: ( ( rule__LogicalOrExpression__RightAssignment_1_2 ) )
            // InternalReflex.g:9097:2: ( rule__LogicalOrExpression__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2()); 
            }
            // InternalReflex.g:9098:2: ( rule__LogicalOrExpression__RightAssignment_1_2 )
            // InternalReflex.g:9098:3: rule__LogicalOrExpression__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__0"
    // InternalReflex.g:9107:1: rule__AssignmentExpression__Group__0 : rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 ;
    public final void rule__AssignmentExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9111:1: ( rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 )
            // InternalReflex.g:9112:2: rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__AssignmentExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0"


    // $ANTLR start "rule__AssignmentExpression__Group__0__Impl"
    // InternalReflex.g:9119:1: rule__AssignmentExpression__Group__0__Impl : ( ( rule__AssignmentExpression__Group_0__0 )? ) ;
    public final void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9123:1: ( ( ( rule__AssignmentExpression__Group_0__0 )? ) )
            // InternalReflex.g:9124:1: ( ( rule__AssignmentExpression__Group_0__0 )? )
            {
            // InternalReflex.g:9124:1: ( ( rule__AssignmentExpression__Group_0__0 )? )
            // InternalReflex.g:9125:2: ( rule__AssignmentExpression__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup_0()); 
            }
            // InternalReflex.g:9126:2: ( rule__AssignmentExpression__Group_0__0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_ID) ) {
                int LA59_1 = input.LA(2);

                if ( ((LA59_1>=47 && LA59_1<=56)) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalReflex.g:9126:3: rule__AssignmentExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AssignmentExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__1"
    // InternalReflex.g:9134:1: rule__AssignmentExpression__Group__1 : rule__AssignmentExpression__Group__1__Impl ;
    public final void rule__AssignmentExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9138:1: ( rule__AssignmentExpression__Group__1__Impl )
            // InternalReflex.g:9139:2: rule__AssignmentExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1"


    // $ANTLR start "rule__AssignmentExpression__Group__1__Impl"
    // InternalReflex.g:9145:1: rule__AssignmentExpression__Group__1__Impl : ( ( rule__AssignmentExpression__ExprAssignment_1 ) ) ;
    public final void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9149:1: ( ( ( rule__AssignmentExpression__ExprAssignment_1 ) ) )
            // InternalReflex.g:9150:1: ( ( rule__AssignmentExpression__ExprAssignment_1 ) )
            {
            // InternalReflex.g:9150:1: ( ( rule__AssignmentExpression__ExprAssignment_1 ) )
            // InternalReflex.g:9151:2: ( rule__AssignmentExpression__ExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getExprAssignment_1()); 
            }
            // InternalReflex.g:9152:2: ( rule__AssignmentExpression__ExprAssignment_1 )
            // InternalReflex.g:9152:3: rule__AssignmentExpression__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__ExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_0__0"
    // InternalReflex.g:9161:1: rule__AssignmentExpression__Group_0__0 : rule__AssignmentExpression__Group_0__0__Impl rule__AssignmentExpression__Group_0__1 ;
    public final void rule__AssignmentExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9165:1: ( rule__AssignmentExpression__Group_0__0__Impl rule__AssignmentExpression__Group_0__1 )
            // InternalReflex.g:9166:2: rule__AssignmentExpression__Group_0__0__Impl rule__AssignmentExpression__Group_0__1
            {
            pushFollow(FOLLOW_81);
            rule__AssignmentExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_0__0"


    // $ANTLR start "rule__AssignmentExpression__Group_0__0__Impl"
    // InternalReflex.g:9173:1: rule__AssignmentExpression__Group_0__0__Impl : ( ( rule__AssignmentExpression__AssignVarAssignment_0_0 ) ) ;
    public final void rule__AssignmentExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9177:1: ( ( ( rule__AssignmentExpression__AssignVarAssignment_0_0 ) ) )
            // InternalReflex.g:9178:1: ( ( rule__AssignmentExpression__AssignVarAssignment_0_0 ) )
            {
            // InternalReflex.g:9178:1: ( ( rule__AssignmentExpression__AssignVarAssignment_0_0 ) )
            // InternalReflex.g:9179:2: ( rule__AssignmentExpression__AssignVarAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignVarAssignment_0_0()); 
            }
            // InternalReflex.g:9180:2: ( rule__AssignmentExpression__AssignVarAssignment_0_0 )
            // InternalReflex.g:9180:3: rule__AssignmentExpression__AssignVarAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__AssignVarAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignVarAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_0__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_0__1"
    // InternalReflex.g:9188:1: rule__AssignmentExpression__Group_0__1 : rule__AssignmentExpression__Group_0__1__Impl ;
    public final void rule__AssignmentExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9192:1: ( rule__AssignmentExpression__Group_0__1__Impl )
            // InternalReflex.g:9193:2: rule__AssignmentExpression__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_0__1"


    // $ANTLR start "rule__AssignmentExpression__Group_0__1__Impl"
    // InternalReflex.g:9199:1: rule__AssignmentExpression__Group_0__1__Impl : ( ( rule__AssignmentExpression__AssignOpAssignment_0_1 ) ) ;
    public final void rule__AssignmentExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9203:1: ( ( ( rule__AssignmentExpression__AssignOpAssignment_0_1 ) ) )
            // InternalReflex.g:9204:1: ( ( rule__AssignmentExpression__AssignOpAssignment_0_1 ) )
            {
            // InternalReflex.g:9204:1: ( ( rule__AssignmentExpression__AssignOpAssignment_0_1 ) )
            // InternalReflex.g:9205:2: ( rule__AssignmentExpression__AssignOpAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignment_0_1()); 
            }
            // InternalReflex.g:9206:2: ( rule__AssignmentExpression__AssignOpAssignment_0_1 )
            // InternalReflex.g:9206:3: rule__AssignmentExpression__AssignOpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__AssignOpAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_0__1__Impl"


    // $ANTLR start "rule__Program__AnnotationsAssignment_0_1"
    // InternalReflex.g:9215:1: rule__Program__AnnotationsAssignment_0_1 : ( ruleAnnotation ) ;
    public final void rule__Program__AnnotationsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9219:1: ( ( ruleAnnotation ) )
            // InternalReflex.g:9220:2: ( ruleAnnotation )
            {
            // InternalReflex.g:9220:2: ( ruleAnnotation )
            // InternalReflex.g:9221:3: ruleAnnotation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__AnnotationsAssignment_0_1"


    // $ANTLR start "rule__Program__NameAssignment_2"
    // InternalReflex.g:9230:1: rule__Program__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__Program__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9234:1: ( ( RULE_ID ) )
            // InternalReflex.g:9235:2: ( RULE_ID )
            {
            // InternalReflex.g:9235:2: ( RULE_ID )
            // InternalReflex.g:9236:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_2"


    // $ANTLR start "rule__Program__TicksAssignment_4"
    // InternalReflex.g:9245:1: rule__Program__TicksAssignment_4 : ( ruleTact ) ;
    public final void rule__Program__TicksAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9249:1: ( ( ruleTact ) )
            // InternalReflex.g:9250:2: ( ruleTact )
            {
            // InternalReflex.g:9250:2: ( ruleTact )
            // InternalReflex.g:9251:3: ruleTact
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getTicksTactParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTact();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getTicksTactParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__TicksAssignment_4"


    // $ANTLR start "rule__Program__ConstsAssignment_5_0"
    // InternalReflex.g:9260:1: rule__Program__ConstsAssignment_5_0 : ( ruleConst ) ;
    public final void rule__Program__ConstsAssignment_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9264:1: ( ( ruleConst ) )
            // InternalReflex.g:9265:2: ( ruleConst )
            {
            // InternalReflex.g:9265:2: ( ruleConst )
            // InternalReflex.g:9266:3: ruleConst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getConstsConstParserRuleCall_5_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleConst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getConstsConstParserRuleCall_5_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ConstsAssignment_5_0"


    // $ANTLR start "rule__Program__EnumsAssignment_5_1"
    // InternalReflex.g:9275:1: rule__Program__EnumsAssignment_5_1 : ( ruleEnum ) ;
    public final void rule__Program__EnumsAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9279:1: ( ( ruleEnum ) )
            // InternalReflex.g:9280:2: ( ruleEnum )
            {
            // InternalReflex.g:9280:2: ( ruleEnum )
            // InternalReflex.g:9281:3: ruleEnum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getEnumsEnumParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEnum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getEnumsEnumParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__EnumsAssignment_5_1"


    // $ANTLR start "rule__Program__FunctionsAssignment_5_2"
    // InternalReflex.g:9290:1: rule__Program__FunctionsAssignment_5_2 : ( ruleFunction ) ;
    public final void rule__Program__FunctionsAssignment_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9294:1: ( ( ruleFunction ) )
            // InternalReflex.g:9295:2: ( ruleFunction )
            {
            // InternalReflex.g:9295:2: ( ruleFunction )
            // InternalReflex.g:9296:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_5_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__FunctionsAssignment_5_2"


    // $ANTLR start "rule__Program__GlobalVarsAssignment_5_3"
    // InternalReflex.g:9305:1: rule__Program__GlobalVarsAssignment_5_3 : ( ruleGlobalVariable ) ;
    public final void rule__Program__GlobalVarsAssignment_5_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9309:1: ( ( ruleGlobalVariable ) )
            // InternalReflex.g:9310:2: ( ruleGlobalVariable )
            {
            // InternalReflex.g:9310:2: ( ruleGlobalVariable )
            // InternalReflex.g:9311:3: ruleGlobalVariable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getGlobalVarsGlobalVariableParserRuleCall_5_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGlobalVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getGlobalVarsGlobalVariableParserRuleCall_5_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__GlobalVarsAssignment_5_3"


    // $ANTLR start "rule__Program__PortsAssignment_5_4"
    // InternalReflex.g:9320:1: rule__Program__PortsAssignment_5_4 : ( rulePort ) ;
    public final void rule__Program__PortsAssignment_5_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9324:1: ( ( rulePort ) )
            // InternalReflex.g:9325:2: ( rulePort )
            {
            // InternalReflex.g:9325:2: ( rulePort )
            // InternalReflex.g:9326:3: rulePort
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getPortsPortParserRuleCall_5_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePort();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getPortsPortParserRuleCall_5_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__PortsAssignment_5_4"


    // $ANTLR start "rule__Program__ProcessesAssignment_5_5"
    // InternalReflex.g:9335:1: rule__Program__ProcessesAssignment_5_5 : ( ruleProcess ) ;
    public final void rule__Program__ProcessesAssignment_5_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9339:1: ( ( ruleProcess ) )
            // InternalReflex.g:9340:2: ( ruleProcess )
            {
            // InternalReflex.g:9340:2: ( ruleProcess )
            // InternalReflex.g:9341:3: ruleProcess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_5_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleProcess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_5_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ProcessesAssignment_5_5"


    // $ANTLR start "rule__Tact__ValueAssignment_1"
    // InternalReflex.g:9350:1: rule__Tact__ValueAssignment_1 : ( RULE_INTEGER ) ;
    public final void rule__Tact__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9354:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:9355:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:9355:2: ( RULE_INTEGER )
            // InternalReflex.g:9356:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTactAccess().getValueINTEGERTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTactAccess().getValueINTEGERTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tact__ValueAssignment_1"


    // $ANTLR start "rule__Process__AnnotationsAssignment_0_1"
    // InternalReflex.g:9365:1: rule__Process__AnnotationsAssignment_0_1 : ( ruleAnnotation ) ;
    public final void rule__Process__AnnotationsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9369:1: ( ( ruleAnnotation ) )
            // InternalReflex.g:9370:2: ( ruleAnnotation )
            {
            // InternalReflex.g:9370:2: ( ruleAnnotation )
            // InternalReflex.g:9371:3: ruleAnnotation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__AnnotationsAssignment_0_1"


    // $ANTLR start "rule__Process__NameAssignment_2"
    // InternalReflex.g:9380:1: rule__Process__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__Process__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9384:1: ( ( RULE_ID ) )
            // InternalReflex.g:9385:2: ( RULE_ID )
            {
            // InternalReflex.g:9385:2: ( RULE_ID )
            // InternalReflex.g:9386:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__NameAssignment_2"


    // $ANTLR start "rule__Process__ImportsAssignment_4_0_0"
    // InternalReflex.g:9395:1: rule__Process__ImportsAssignment_4_0_0 : ( ruleImportedVariableList ) ;
    public final void rule__Process__ImportsAssignment_4_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9399:1: ( ( ruleImportedVariableList ) )
            // InternalReflex.g:9400:2: ( ruleImportedVariableList )
            {
            // InternalReflex.g:9400:2: ( ruleImportedVariableList )
            // InternalReflex.g:9401:3: ruleImportedVariableList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getImportsImportedVariableListParserRuleCall_4_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleImportedVariableList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getImportsImportedVariableListParserRuleCall_4_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__ImportsAssignment_4_0_0"


    // $ANTLR start "rule__Process__VariablesAssignment_4_0_1"
    // InternalReflex.g:9410:1: rule__Process__VariablesAssignment_4_0_1 : ( ruleProcessVariable ) ;
    public final void rule__Process__VariablesAssignment_4_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9414:1: ( ( ruleProcessVariable ) )
            // InternalReflex.g:9415:2: ( ruleProcessVariable )
            {
            // InternalReflex.g:9415:2: ( ruleProcessVariable )
            // InternalReflex.g:9416:3: ruleProcessVariable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getVariablesProcessVariableParserRuleCall_4_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleProcessVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getVariablesProcessVariableParserRuleCall_4_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__VariablesAssignment_4_0_1"


    // $ANTLR start "rule__Process__StatesAssignment_5"
    // InternalReflex.g:9425:1: rule__Process__StatesAssignment_5 : ( ruleState ) ;
    public final void rule__Process__StatesAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9429:1: ( ( ruleState ) )
            // InternalReflex.g:9430:2: ( ruleState )
            {
            // InternalReflex.g:9430:2: ( ruleState )
            // InternalReflex.g:9431:3: ruleState
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleState();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Process__StatesAssignment_5"


    // $ANTLR start "rule__State__AnnotationsAssignment_0_1"
    // InternalReflex.g:9440:1: rule__State__AnnotationsAssignment_0_1 : ( ruleAnnotation ) ;
    public final void rule__State__AnnotationsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9444:1: ( ( ruleAnnotation ) )
            // InternalReflex.g:9445:2: ( ruleAnnotation )
            {
            // InternalReflex.g:9445:2: ( ruleAnnotation )
            // InternalReflex.g:9446:3: ruleAnnotation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__AnnotationsAssignment_0_1"


    // $ANTLR start "rule__State__NameAssignment_2"
    // InternalReflex.g:9455:1: rule__State__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__State__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9459:1: ( ( RULE_ID ) )
            // InternalReflex.g:9460:2: ( RULE_ID )
            {
            // InternalReflex.g:9460:2: ( RULE_ID )
            // InternalReflex.g:9461:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__NameAssignment_2"


    // $ANTLR start "rule__State__LoopedAssignment_3"
    // InternalReflex.g:9470:1: rule__State__LoopedAssignment_3 : ( ( 'looped' ) ) ;
    public final void rule__State__LoopedAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9474:1: ( ( ( 'looped' ) ) )
            // InternalReflex.g:9475:2: ( ( 'looped' ) )
            {
            // InternalReflex.g:9475:2: ( ( 'looped' ) )
            // InternalReflex.g:9476:3: ( 'looped' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getLoopedLoopedKeyword_3_0()); 
            }
            // InternalReflex.g:9477:3: ( 'looped' )
            // InternalReflex.g:9478:4: 'looped'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getLoopedLoopedKeyword_3_0()); 
            }
            match(input,115,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getLoopedLoopedKeyword_3_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getLoopedLoopedKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__LoopedAssignment_3"


    // $ANTLR start "rule__State__StateFunctionAssignment_5"
    // InternalReflex.g:9489:1: rule__State__StateFunctionAssignment_5 : ( ruleStatementSequence ) ;
    public final void rule__State__StateFunctionAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9493:1: ( ( ruleStatementSequence ) )
            // InternalReflex.g:9494:2: ( ruleStatementSequence )
            {
            // InternalReflex.g:9494:2: ( ruleStatementSequence )
            // InternalReflex.g:9495:3: ruleStatementSequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getStateFunctionStatementSequenceParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatementSequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getStateFunctionStatementSequenceParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__StateFunctionAssignment_5"


    // $ANTLR start "rule__State__TimeoutFunctionAssignment_6"
    // InternalReflex.g:9504:1: rule__State__TimeoutFunctionAssignment_6 : ( ruleTimeoutFunction ) ;
    public final void rule__State__TimeoutFunctionAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9508:1: ( ( ruleTimeoutFunction ) )
            // InternalReflex.g:9509:2: ( ruleTimeoutFunction )
            {
            // InternalReflex.g:9509:2: ( ruleTimeoutFunction )
            // InternalReflex.g:9510:3: ruleTimeoutFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStateAccess().getTimeoutFunctionTimeoutFunctionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeoutFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStateAccess().getTimeoutFunctionTimeoutFunctionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__State__TimeoutFunctionAssignment_6"


    // $ANTLR start "rule__Annotation__KeyAssignment_0_0"
    // InternalReflex.g:9519:1: rule__Annotation__KeyAssignment_0_0 : ( ruleAnnotationKey ) ;
    public final void rule__Annotation__KeyAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9523:1: ( ( ruleAnnotationKey ) )
            // InternalReflex.g:9524:2: ( ruleAnnotationKey )
            {
            // InternalReflex.g:9524:2: ( ruleAnnotationKey )
            // InternalReflex.g:9525:3: ruleAnnotationKey
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getKeyAnnotationKeyParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnnotationKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getKeyAnnotationKeyParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__KeyAssignment_0_0"


    // $ANTLR start "rule__Annotation__ValueAssignment_0_2"
    // InternalReflex.g:9534:1: rule__Annotation__ValueAssignment_0_2 : ( RULE_STRING ) ;
    public final void rule__Annotation__ValueAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9538:1: ( ( RULE_STRING ) )
            // InternalReflex.g:9539:2: ( RULE_STRING )
            {
            // InternalReflex.g:9539:2: ( RULE_STRING )
            // InternalReflex.g:9540:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_0_2_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__ValueAssignment_0_2"


    // $ANTLR start "rule__Annotation__KeyAssignment_1"
    // InternalReflex.g:9549:1: rule__Annotation__KeyAssignment_1 : ( ruleAnnotationKey ) ;
    public final void rule__Annotation__KeyAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9553:1: ( ( ruleAnnotationKey ) )
            // InternalReflex.g:9554:2: ( ruleAnnotationKey )
            {
            // InternalReflex.g:9554:2: ( ruleAnnotationKey )
            // InternalReflex.g:9555:3: ruleAnnotationKey
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getKeyAnnotationKeyParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnnotationKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getKeyAnnotationKeyParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__KeyAssignment_1"


    // $ANTLR start "rule__ImportedVariableList__VariablesAssignment_1_0"
    // InternalReflex.g:9564:1: rule__ImportedVariableList__VariablesAssignment_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__ImportedVariableList__VariablesAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9568:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:9569:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:9569:2: ( ( RULE_ID ) )
            // InternalReflex.g:9570:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_1_0_0()); 
            }
            // InternalReflex.g:9571:3: ( RULE_ID )
            // InternalReflex.g:9572:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_1_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_1_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__VariablesAssignment_1_0"


    // $ANTLR start "rule__ImportedVariableList__VariablesAssignment_1_1_1"
    // InternalReflex.g:9583:1: rule__ImportedVariableList__VariablesAssignment_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__ImportedVariableList__VariablesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9587:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:9588:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:9588:2: ( ( RULE_ID ) )
            // InternalReflex.g:9589:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_1_1_1_0()); 
            }
            // InternalReflex.g:9590:3: ( RULE_ID )
            // InternalReflex.g:9591:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__VariablesAssignment_1_1_1"


    // $ANTLR start "rule__ImportedVariableList__ProcessAssignment_4"
    // InternalReflex.g:9602:1: rule__ImportedVariableList__ProcessAssignment_4 : ( ( RULE_ID ) ) ;
    public final void rule__ImportedVariableList__ProcessAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9606:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:9607:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:9607:2: ( ( RULE_ID ) )
            // InternalReflex.g:9608:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getProcessProcessCrossReference_4_0()); 
            }
            // InternalReflex.g:9609:3: ( RULE_ID )
            // InternalReflex.g:9610:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportedVariableListAccess().getProcessProcessIDTerminalRuleCall_4_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getProcessProcessIDTerminalRuleCall_4_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportedVariableListAccess().getProcessProcessCrossReference_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedVariableList__ProcessAssignment_4"


    // $ANTLR start "rule__ProcessVariable__SharedAssignment_1"
    // InternalReflex.g:9621:1: rule__ProcessVariable__SharedAssignment_1 : ( ( 'shared' ) ) ;
    public final void rule__ProcessVariable__SharedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9625:1: ( ( ( 'shared' ) ) )
            // InternalReflex.g:9626:2: ( ( 'shared' ) )
            {
            // InternalReflex.g:9626:2: ( ( 'shared' ) )
            // InternalReflex.g:9627:3: ( 'shared' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessVariableAccess().getSharedSharedKeyword_1_0()); 
            }
            // InternalReflex.g:9628:3: ( 'shared' )
            // InternalReflex.g:9629:4: 'shared'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProcessVariableAccess().getSharedSharedKeyword_1_0()); 
            }
            match(input,96,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessVariableAccess().getSharedSharedKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProcessVariableAccess().getSharedSharedKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProcessVariable__SharedAssignment_1"


    // $ANTLR start "rule__PhysicalVariable__TypeAssignment_0"
    // InternalReflex.g:9640:1: rule__PhysicalVariable__TypeAssignment_0 : ( ruleType ) ;
    public final void rule__PhysicalVariable__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9644:1: ( ( ruleType ) )
            // InternalReflex.g:9645:2: ( ruleType )
            {
            // InternalReflex.g:9645:2: ( ruleType )
            // InternalReflex.g:9646:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getTypeTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getTypeTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__TypeAssignment_0"


    // $ANTLR start "rule__PhysicalVariable__NameAssignment_1"
    // InternalReflex.g:9655:1: rule__PhysicalVariable__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__PhysicalVariable__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9659:1: ( ( RULE_ID ) )
            // InternalReflex.g:9660:2: ( RULE_ID )
            {
            // InternalReflex.g:9660:2: ( RULE_ID )
            // InternalReflex.g:9661:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__NameAssignment_1"


    // $ANTLR start "rule__PhysicalVariable__MappingAssignment_3"
    // InternalReflex.g:9670:1: rule__PhysicalVariable__MappingAssignment_3 : ( rulePortMapping ) ;
    public final void rule__PhysicalVariable__MappingAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9674:1: ( ( rulePortMapping ) )
            // InternalReflex.g:9675:2: ( rulePortMapping )
            {
            // InternalReflex.g:9675:2: ( rulePortMapping )
            // InternalReflex.g:9676:3: rulePortMapping
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPhysicalVariableAccess().getMappingPortMappingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePortMapping();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPhysicalVariableAccess().getMappingPortMappingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PhysicalVariable__MappingAssignment_3"


    // $ANTLR start "rule__PortMapping__PortAssignment_0"
    // InternalReflex.g:9685:1: rule__PortMapping__PortAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__PortMapping__PortAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9689:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:9690:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:9690:2: ( ( RULE_ID ) )
            // InternalReflex.g:9691:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getPortPortCrossReference_0_0()); 
            }
            // InternalReflex.g:9692:3: ( RULE_ID )
            // InternalReflex.g:9693:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getPortPortIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getPortPortIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getPortPortCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__PortAssignment_0"


    // $ANTLR start "rule__PortMapping__BitAssignment_2"
    // InternalReflex.g:9704:1: rule__PortMapping__BitAssignment_2 : ( RULE_INTEGER ) ;
    public final void rule__PortMapping__BitAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9708:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:9709:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:9709:2: ( RULE_INTEGER )
            // InternalReflex.g:9710:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortMappingAccess().getBitINTEGERTerminalRuleCall_2_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortMappingAccess().getBitINTEGERTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PortMapping__BitAssignment_2"


    // $ANTLR start "rule__ProgramVariable__TypeAssignment_0"
    // InternalReflex.g:9719:1: rule__ProgramVariable__TypeAssignment_0 : ( ruleType ) ;
    public final void rule__ProgramVariable__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9723:1: ( ( ruleType ) )
            // InternalReflex.g:9724:2: ( ruleType )
            {
            // InternalReflex.g:9724:2: ( ruleType )
            // InternalReflex.g:9725:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramVariableAccess().getTypeTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramVariableAccess().getTypeTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProgramVariable__TypeAssignment_0"


    // $ANTLR start "rule__ProgramVariable__NameAssignment_1"
    // InternalReflex.g:9734:1: rule__ProgramVariable__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ProgramVariable__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9738:1: ( ( RULE_ID ) )
            // InternalReflex.g:9739:2: ( RULE_ID )
            {
            // InternalReflex.g:9739:2: ( RULE_ID )
            // InternalReflex.g:9740:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramVariableAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramVariableAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProgramVariable__NameAssignment_1"


    // $ANTLR start "rule__TimeoutFunction__BodyAssignment_2"
    // InternalReflex.g:9749:1: rule__TimeoutFunction__BodyAssignment_2 : ( ruleStatement ) ;
    public final void rule__TimeoutFunction__BodyAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9753:1: ( ( ruleStatement ) )
            // InternalReflex.g:9754:2: ( ruleStatement )
            {
            // InternalReflex.g:9754:2: ( ruleStatement )
            // InternalReflex.g:9755:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeoutFunctionAccess().getBodyStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeoutFunctionAccess().getBodyStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeoutFunction__BodyAssignment_2"


    // $ANTLR start "rule__TimeAmountOrRef__TimeAssignment_0"
    // InternalReflex.g:9764:1: rule__TimeAmountOrRef__TimeAssignment_0 : ( RULE_TIME ) ;
    public final void rule__TimeAmountOrRef__TimeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9768:1: ( ( RULE_TIME ) )
            // InternalReflex.g:9769:2: ( RULE_TIME )
            {
            // InternalReflex.g:9769:2: ( RULE_TIME )
            // InternalReflex.g:9770:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAmountOrRefAccess().getTimeTIMETerminalRuleCall_0_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAmountOrRefAccess().getTimeTIMETerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeAmountOrRef__TimeAssignment_0"


    // $ANTLR start "rule__TimeAmountOrRef__IntTimeAssignment_1"
    // InternalReflex.g:9779:1: rule__TimeAmountOrRef__IntTimeAssignment_1 : ( RULE_INTEGER ) ;
    public final void rule__TimeAmountOrRef__IntTimeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9783:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:9784:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:9784:2: ( RULE_INTEGER )
            // InternalReflex.g:9785:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAmountOrRefAccess().getIntTimeINTEGERTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAmountOrRefAccess().getIntTimeINTEGERTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeAmountOrRef__IntTimeAssignment_1"


    // $ANTLR start "rule__TimeAmountOrRef__RefAssignment_2"
    // InternalReflex.g:9794:1: rule__TimeAmountOrRef__RefAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__TimeAmountOrRef__RefAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9798:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:9799:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:9799:2: ( ( RULE_ID ) )
            // InternalReflex.g:9800:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceCrossReference_2_0()); 
            }
            // InternalReflex.g:9801:3: ( RULE_ID )
            // InternalReflex.g:9802:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceIDTerminalRuleCall_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceIDTerminalRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeAmountOrRef__RefAssignment_2"


    // $ANTLR start "rule__Function__ReturnTypeAssignment_0"
    // InternalReflex.g:9813:1: rule__Function__ReturnTypeAssignment_0 : ( ruleType ) ;
    public final void rule__Function__ReturnTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9817:1: ( ( ruleType ) )
            // InternalReflex.g:9818:2: ( ruleType )
            {
            // InternalReflex.g:9818:2: ( ruleType )
            // InternalReflex.g:9819:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ReturnTypeAssignment_0"


    // $ANTLR start "rule__Function__NameAssignment_1"
    // InternalReflex.g:9828:1: rule__Function__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9832:1: ( ( RULE_ID ) )
            // InternalReflex.g:9833:2: ( RULE_ID )
            {
            // InternalReflex.g:9833:2: ( RULE_ID )
            // InternalReflex.g:9834:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_1"


    // $ANTLR start "rule__Function__ArgTypesAssignment_3"
    // InternalReflex.g:9843:1: rule__Function__ArgTypesAssignment_3 : ( ruleType ) ;
    public final void rule__Function__ArgTypesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9847:1: ( ( ruleType ) )
            // InternalReflex.g:9848:2: ( ruleType )
            {
            // InternalReflex.g:9848:2: ( ruleType )
            // InternalReflex.g:9849:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgTypesAssignment_3"


    // $ANTLR start "rule__Function__ArgTypesAssignment_4_1"
    // InternalReflex.g:9858:1: rule__Function__ArgTypesAssignment_4_1 : ( ruleType ) ;
    public final void rule__Function__ArgTypesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9862:1: ( ( ruleType ) )
            // InternalReflex.g:9863:2: ( ruleType )
            {
            // InternalReflex.g:9863:2: ( ruleType )
            // InternalReflex.g:9864:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgTypesAssignment_4_1"


    // $ANTLR start "rule__Port__TypeAssignment_0"
    // InternalReflex.g:9873:1: rule__Port__TypeAssignment_0 : ( rulePortType ) ;
    public final void rule__Port__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9877:1: ( ( rulePortType ) )
            // InternalReflex.g:9878:2: ( rulePortType )
            {
            // InternalReflex.g:9878:2: ( rulePortType )
            // InternalReflex.g:9879:3: rulePortType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getTypePortTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePortType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getTypePortTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__TypeAssignment_0"


    // $ANTLR start "rule__Port__NameAssignment_1"
    // InternalReflex.g:9888:1: rule__Port__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Port__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9892:1: ( ( RULE_ID ) )
            // InternalReflex.g:9893:2: ( RULE_ID )
            {
            // InternalReflex.g:9893:2: ( RULE_ID )
            // InternalReflex.g:9894:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__NameAssignment_1"


    // $ANTLR start "rule__Port__Addr1Assignment_2"
    // InternalReflex.g:9903:1: rule__Port__Addr1Assignment_2 : ( RULE_INTEGER ) ;
    public final void rule__Port__Addr1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9907:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:9908:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:9908:2: ( RULE_INTEGER )
            // InternalReflex.g:9909:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getAddr1INTEGERTerminalRuleCall_2_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getAddr1INTEGERTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Addr1Assignment_2"


    // $ANTLR start "rule__Port__Addr2Assignment_3"
    // InternalReflex.g:9918:1: rule__Port__Addr2Assignment_3 : ( RULE_INTEGER ) ;
    public final void rule__Port__Addr2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9922:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:9923:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:9923:2: ( RULE_INTEGER )
            // InternalReflex.g:9924:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getAddr2INTEGERTerminalRuleCall_3_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getAddr2INTEGERTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Addr2Assignment_3"


    // $ANTLR start "rule__Port__SizeAssignment_4"
    // InternalReflex.g:9933:1: rule__Port__SizeAssignment_4 : ( RULE_INTEGER ) ;
    public final void rule__Port__SizeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9937:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:9938:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:9938:2: ( RULE_INTEGER )
            // InternalReflex.g:9939:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPortAccess().getSizeINTEGERTerminalRuleCall_4_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPortAccess().getSizeINTEGERTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__SizeAssignment_4"


    // $ANTLR start "rule__Const__TypeAssignment_1"
    // InternalReflex.g:9948:1: rule__Const__TypeAssignment_1 : ( ruleType ) ;
    public final void rule__Const__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9952:1: ( ( ruleType ) )
            // InternalReflex.g:9953:2: ( ruleType )
            {
            // InternalReflex.g:9953:2: ( ruleType )
            // InternalReflex.g:9954:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getTypeTypeEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getTypeTypeEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__TypeAssignment_1"


    // $ANTLR start "rule__Const__NameAssignment_2"
    // InternalReflex.g:9963:1: rule__Const__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__Const__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9967:1: ( ( RULE_ID ) )
            // InternalReflex.g:9968:2: ( RULE_ID )
            {
            // InternalReflex.g:9968:2: ( RULE_ID )
            // InternalReflex.g:9969:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__NameAssignment_2"


    // $ANTLR start "rule__Const__ValueAssignment_4"
    // InternalReflex.g:9978:1: rule__Const__ValueAssignment_4 : ( ruleExpression ) ;
    public final void rule__Const__ValueAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9982:1: ( ( ruleExpression ) )
            // InternalReflex.g:9983:2: ( ruleExpression )
            {
            // InternalReflex.g:9983:2: ( ruleExpression )
            // InternalReflex.g:9984:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstAccess().getValueExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstAccess().getValueExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Const__ValueAssignment_4"


    // $ANTLR start "rule__Enum__IdentifierAssignment_1"
    // InternalReflex.g:9993:1: rule__Enum__IdentifierAssignment_1 : ( RULE_ID ) ;
    public final void rule__Enum__IdentifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:9997:1: ( ( RULE_ID ) )
            // InternalReflex.g:9998:2: ( RULE_ID )
            {
            // InternalReflex.g:9998:2: ( RULE_ID )
            // InternalReflex.g:9999:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getIdentifierIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getIdentifierIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__IdentifierAssignment_1"


    // $ANTLR start "rule__Enum__EnumMembersAssignment_3"
    // InternalReflex.g:10008:1: rule__Enum__EnumMembersAssignment_3 : ( ruleEnumMember ) ;
    public final void rule__Enum__EnumMembersAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10012:1: ( ( ruleEnumMember ) )
            // InternalReflex.g:10013:2: ( ruleEnumMember )
            {
            // InternalReflex.g:10013:2: ( ruleEnumMember )
            // InternalReflex.g:10014:3: ruleEnumMember
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEnumMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__EnumMembersAssignment_3"


    // $ANTLR start "rule__Enum__EnumMembersAssignment_4_1"
    // InternalReflex.g:10023:1: rule__Enum__EnumMembersAssignment_4_1 : ( ruleEnumMember ) ;
    public final void rule__Enum__EnumMembersAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10027:1: ( ( ruleEnumMember ) )
            // InternalReflex.g:10028:2: ( ruleEnumMember )
            {
            // InternalReflex.g:10028:2: ( ruleEnumMember )
            // InternalReflex.g:10029:3: ruleEnumMember
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEnumMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Enum__EnumMembersAssignment_4_1"


    // $ANTLR start "rule__EnumMember__NameAssignment_0"
    // InternalReflex.g:10038:1: rule__EnumMember__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__EnumMember__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10042:1: ( ( RULE_ID ) )
            // InternalReflex.g:10043:2: ( RULE_ID )
            {
            // InternalReflex.g:10043:2: ( RULE_ID )
            // InternalReflex.g:10044:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__NameAssignment_0"


    // $ANTLR start "rule__EnumMember__ValueAssignment_1_1"
    // InternalReflex.g:10053:1: rule__EnumMember__ValueAssignment_1_1 : ( ruleExpression ) ;
    public final void rule__EnumMember__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10057:1: ( ( ruleExpression ) )
            // InternalReflex.g:10058:2: ( ruleExpression )
            {
            // InternalReflex.g:10058:2: ( ruleExpression )
            // InternalReflex.g:10059:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumMemberAccess().getValueExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumMemberAccess().getValueExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumMember__ValueAssignment_1_1"


    // $ANTLR start "rule__StatementSequence__StatementsAssignment_1"
    // InternalReflex.g:10068:1: rule__StatementSequence__StatementsAssignment_1 : ( ruleStatement ) ;
    public final void rule__StatementSequence__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10072:1: ( ( ruleStatement ) )
            // InternalReflex.g:10073:2: ( ruleStatement )
            {
            // InternalReflex.g:10073:2: ( ruleStatement )
            // InternalReflex.g:10074:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementSequenceAccess().getStatementsStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementSequenceAccess().getStatementsStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatementSequence__StatementsAssignment_1"


    // $ANTLR start "rule__CompoundStatement__StatementsAssignment_2"
    // InternalReflex.g:10083:1: rule__CompoundStatement__StatementsAssignment_2 : ( ruleStatement ) ;
    public final void rule__CompoundStatement__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10087:1: ( ( ruleStatement ) )
            // InternalReflex.g:10088:2: ( ruleStatement )
            {
            // InternalReflex.g:10088:2: ( ruleStatement )
            // InternalReflex.g:10089:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompoundStatementAccess().getStatementsStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompoundStatementAccess().getStatementsStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompoundStatement__StatementsAssignment_2"


    // $ANTLR start "rule__IfElseStat__CondAssignment_2"
    // InternalReflex.g:10098:1: rule__IfElseStat__CondAssignment_2 : ( ruleExpression ) ;
    public final void rule__IfElseStat__CondAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10102:1: ( ( ruleExpression ) )
            // InternalReflex.g:10103:2: ( ruleExpression )
            {
            // InternalReflex.g:10103:2: ( ruleExpression )
            // InternalReflex.g:10104:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getCondExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getCondExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__CondAssignment_2"


    // $ANTLR start "rule__IfElseStat__ThenAssignment_4"
    // InternalReflex.g:10113:1: rule__IfElseStat__ThenAssignment_4 : ( ruleStatement ) ;
    public final void rule__IfElseStat__ThenAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10117:1: ( ( ruleStatement ) )
            // InternalReflex.g:10118:2: ( ruleStatement )
            {
            // InternalReflex.g:10118:2: ( ruleStatement )
            // InternalReflex.g:10119:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getThenStatementParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getThenStatementParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__ThenAssignment_4"


    // $ANTLR start "rule__IfElseStat__ElseAssignment_5_1"
    // InternalReflex.g:10128:1: rule__IfElseStat__ElseAssignment_5_1 : ( ruleStatement ) ;
    public final void rule__IfElseStat__ElseAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10132:1: ( ( ruleStatement ) )
            // InternalReflex.g:10133:2: ( ruleStatement )
            {
            // InternalReflex.g:10133:2: ( ruleStatement )
            // InternalReflex.g:10134:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfElseStatAccess().getElseStatementParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfElseStatAccess().getElseStatementParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfElseStat__ElseAssignment_5_1"


    // $ANTLR start "rule__SwitchStat__ExprAssignment_2"
    // InternalReflex.g:10143:1: rule__SwitchStat__ExprAssignment_2 : ( ruleExpression ) ;
    public final void rule__SwitchStat__ExprAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10147:1: ( ( ruleExpression ) )
            // InternalReflex.g:10148:2: ( ruleExpression )
            {
            // InternalReflex.g:10148:2: ( ruleExpression )
            // InternalReflex.g:10149:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getExprExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getExprExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__ExprAssignment_2"


    // $ANTLR start "rule__SwitchStat__OptionsAssignment_5"
    // InternalReflex.g:10158:1: rule__SwitchStat__OptionsAssignment_5 : ( ruleCaseStat ) ;
    public final void rule__SwitchStat__OptionsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10162:1: ( ( ruleCaseStat ) )
            // InternalReflex.g:10163:2: ( ruleCaseStat )
            {
            // InternalReflex.g:10163:2: ( ruleCaseStat )
            // InternalReflex.g:10164:3: ruleCaseStat
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStatAccess().getOptionsCaseStatParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCaseStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStatAccess().getOptionsCaseStatParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStat__OptionsAssignment_5"


    // $ANTLR start "rule__CaseStat__OptionAssignment_1"
    // InternalReflex.g:10173:1: rule__CaseStat__OptionAssignment_1 : ( RULE_INTEGER ) ;
    public final void rule__CaseStat__OptionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10177:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:10178:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:10178:2: ( RULE_INTEGER )
            // InternalReflex.g:10179:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getOptionINTEGERTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getOptionINTEGERTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__OptionAssignment_1"


    // $ANTLR start "rule__CaseStat__BodyAssignment_3"
    // InternalReflex.g:10188:1: rule__CaseStat__BodyAssignment_3 : ( ruleStatementSequence ) ;
    public final void rule__CaseStat__BodyAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10192:1: ( ( ruleStatementSequence ) )
            // InternalReflex.g:10193:2: ( ruleStatementSequence )
            {
            // InternalReflex.g:10193:2: ( ruleStatementSequence )
            // InternalReflex.g:10194:3: ruleStatementSequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getBodyStatementSequenceParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatementSequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getBodyStatementSequenceParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__BodyAssignment_3"


    // $ANTLR start "rule__CaseStat__HasBreakAssignment_4"
    // InternalReflex.g:10203:1: rule__CaseStat__HasBreakAssignment_4 : ( ruleBreakStat ) ;
    public final void rule__CaseStat__HasBreakAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10207:1: ( ( ruleBreakStat ) )
            // InternalReflex.g:10208:2: ( ruleBreakStat )
            {
            // InternalReflex.g:10208:2: ( ruleBreakStat )
            // InternalReflex.g:10209:3: ruleBreakStat
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseStatAccess().getHasBreakBreakStatParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBreakStat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseStatAccess().getHasBreakBreakStatParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseStat__HasBreakAssignment_4"


    // $ANTLR start "rule__StartProcStat__ProcessAssignment_2"
    // InternalReflex.g:10218:1: rule__StartProcStat__ProcessAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__StartProcStat__ProcessAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10222:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10223:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10223:2: ( ( RULE_ID ) )
            // InternalReflex.g:10224:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getProcessProcessCrossReference_2_0()); 
            }
            // InternalReflex.g:10225:3: ( RULE_ID )
            // InternalReflex.g:10226:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStartProcStatAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStartProcStatAccess().getProcessProcessCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StartProcStat__ProcessAssignment_2"


    // $ANTLR start "rule__StopProcStat__ProcessAssignment_2_1"
    // InternalReflex.g:10237:1: rule__StopProcStat__ProcessAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__StopProcStat__ProcessAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10241:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10242:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10242:2: ( ( RULE_ID ) )
            // InternalReflex.g:10243:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getProcessProcessCrossReference_2_1_0()); 
            }
            // InternalReflex.g:10244:3: ( RULE_ID )
            // InternalReflex.g:10245:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStopProcStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStopProcStatAccess().getProcessProcessCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StopProcStat__ProcessAssignment_2_1"


    // $ANTLR start "rule__ErrorStat__ProcessAssignment_2_1"
    // InternalReflex.g:10256:1: rule__ErrorStat__ProcessAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__ErrorStat__ProcessAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10260:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10261:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10261:2: ( ( RULE_ID ) )
            // InternalReflex.g:10262:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getProcessProcessCrossReference_2_1_0()); 
            }
            // InternalReflex.g:10263:3: ( RULE_ID )
            // InternalReflex.g:10264:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getErrorStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getErrorStatAccess().getProcessProcessCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ErrorStat__ProcessAssignment_2_1"


    // $ANTLR start "rule__SetStateStat__NextAssignment_2_0_0"
    // InternalReflex.g:10275:1: rule__SetStateStat__NextAssignment_2_0_0 : ( ( 'next' ) ) ;
    public final void rule__SetStateStat__NextAssignment_2_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10279:1: ( ( ( 'next' ) ) )
            // InternalReflex.g:10280:2: ( ( 'next' ) )
            {
            // InternalReflex.g:10280:2: ( ( 'next' ) )
            // InternalReflex.g:10281:3: ( 'next' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getNextNextKeyword_2_0_0_0()); 
            }
            // InternalReflex.g:10282:3: ( 'next' )
            // InternalReflex.g:10283:4: 'next'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getNextNextKeyword_2_0_0_0()); 
            }
            match(input,116,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getNextNextKeyword_2_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getNextNextKeyword_2_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__NextAssignment_2_0_0"


    // $ANTLR start "rule__SetStateStat__StateAssignment_2_1_1"
    // InternalReflex.g:10294:1: rule__SetStateStat__StateAssignment_2_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__SetStateStat__StateAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10298:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10299:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10299:2: ( ( RULE_ID ) )
            // InternalReflex.g:10300:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getStateStateCrossReference_2_1_1_0()); 
            }
            // InternalReflex.g:10301:3: ( RULE_ID )
            // InternalReflex.g:10302:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetStateStatAccess().getStateStateIDTerminalRuleCall_2_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getStateStateIDTerminalRuleCall_2_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetStateStatAccess().getStateStateCrossReference_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetStateStat__StateAssignment_2_1_1"


    // $ANTLR start "rule__InfixOp__OpAssignment_0"
    // InternalReflex.g:10313:1: rule__InfixOp__OpAssignment_0 : ( ruleInfixPostfixOp ) ;
    public final void rule__InfixOp__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10317:1: ( ( ruleInfixPostfixOp ) )
            // InternalReflex.g:10318:2: ( ruleInfixPostfixOp )
            {
            // InternalReflex.g:10318:2: ( ruleInfixPostfixOp )
            // InternalReflex.g:10319:3: ruleInfixPostfixOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpAccess().getOpInfixPostfixOpEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInfixPostfixOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpAccess().getOpInfixPostfixOpEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixOp__OpAssignment_0"


    // $ANTLR start "rule__InfixOp__RefAssignment_1"
    // InternalReflex.g:10328:1: rule__InfixOp__RefAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__InfixOp__RefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10332:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10333:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10333:2: ( ( RULE_ID ) )
            // InternalReflex.g:10334:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpAccess().getRefIdReferenceCrossReference_1_0()); 
            }
            // InternalReflex.g:10335:3: ( RULE_ID )
            // InternalReflex.g:10336:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOpAccess().getRefIdReferenceIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpAccess().getRefIdReferenceIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOpAccess().getRefIdReferenceCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixOp__RefAssignment_1"


    // $ANTLR start "rule__PostfixOp__RefAssignment_0"
    // InternalReflex.g:10347:1: rule__PostfixOp__RefAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__PostfixOp__RefAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10351:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10352:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10352:2: ( ( RULE_ID ) )
            // InternalReflex.g:10353:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpAccess().getRefIdReferenceCrossReference_0_0()); 
            }
            // InternalReflex.g:10354:3: ( RULE_ID )
            // InternalReflex.g:10355:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpAccess().getRefIdReferenceIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpAccess().getRefIdReferenceIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpAccess().getRefIdReferenceCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostfixOp__RefAssignment_0"


    // $ANTLR start "rule__PostfixOp__OpAssignment_1"
    // InternalReflex.g:10366:1: rule__PostfixOp__OpAssignment_1 : ( ruleInfixPostfixOp ) ;
    public final void rule__PostfixOp__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10370:1: ( ( ruleInfixPostfixOp ) )
            // InternalReflex.g:10371:2: ( ruleInfixPostfixOp )
            {
            // InternalReflex.g:10371:2: ( ruleInfixPostfixOp )
            // InternalReflex.g:10372:3: ruleInfixPostfixOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostfixOpAccess().getOpInfixPostfixOpEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInfixPostfixOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostfixOpAccess().getOpInfixPostfixOpEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostfixOp__OpAssignment_1"


    // $ANTLR start "rule__FunctionCall__FunctionAssignment_0"
    // InternalReflex.g:10381:1: rule__FunctionCall__FunctionAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__FunctionCall__FunctionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10385:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10386:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10386:2: ( ( RULE_ID ) )
            // InternalReflex.g:10387:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0()); 
            }
            // InternalReflex.g:10388:3: ( RULE_ID )
            // InternalReflex.g:10389:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__FunctionAssignment_0"


    // $ANTLR start "rule__FunctionCall__ArgsAssignment_2_0"
    // InternalReflex.g:10400:1: rule__FunctionCall__ArgsAssignment_2_0 : ( ruleExpression ) ;
    public final void rule__FunctionCall__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10404:1: ( ( ruleExpression ) )
            // InternalReflex.g:10405:2: ( ruleExpression )
            {
            // InternalReflex.g:10405:2: ( ruleExpression )
            // InternalReflex.g:10406:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__ArgsAssignment_2_0"


    // $ANTLR start "rule__FunctionCall__ArgsAssignment_2_1_1"
    // InternalReflex.g:10415:1: rule__FunctionCall__ArgsAssignment_2_1_1 : ( ruleExpression ) ;
    public final void rule__FunctionCall__ArgsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10419:1: ( ( ruleExpression ) )
            // InternalReflex.g:10420:2: ( ruleExpression )
            {
            // InternalReflex.g:10420:2: ( ruleExpression )
            // InternalReflex.g:10421:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__ArgsAssignment_2_1_1"


    // $ANTLR start "rule__CheckStateExpression__ProcessAssignment_1"
    // InternalReflex.g:10430:1: rule__CheckStateExpression__ProcessAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__CheckStateExpression__ProcessAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10434:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10435:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10435:2: ( ( RULE_ID ) )
            // InternalReflex.g:10436:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getProcessProcessCrossReference_1_0()); 
            }
            // InternalReflex.g:10437:3: ( RULE_ID )
            // InternalReflex.g:10438:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getProcessProcessIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getProcessProcessIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getProcessProcessCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__ProcessAssignment_1"


    // $ANTLR start "rule__CheckStateExpression__QualfierAssignment_4"
    // InternalReflex.g:10449:1: rule__CheckStateExpression__QualfierAssignment_4 : ( ruleStateQualifier ) ;
    public final void rule__CheckStateExpression__QualfierAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10453:1: ( ( ruleStateQualifier ) )
            // InternalReflex.g:10454:2: ( ruleStateQualifier )
            {
            // InternalReflex.g:10454:2: ( ruleStateQualifier )
            // InternalReflex.g:10455:3: ruleStateQualifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCheckStateExpressionAccess().getQualfierStateQualifierEnumRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStateQualifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCheckStateExpressionAccess().getQualfierStateQualifierEnumRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckStateExpression__QualfierAssignment_4"


    // $ANTLR start "rule__PrimaryExpression__ReferenceAssignment_0"
    // InternalReflex.g:10464:1: rule__PrimaryExpression__ReferenceAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__PrimaryExpression__ReferenceAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10468:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10469:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10469:2: ( ( RULE_ID ) )
            // InternalReflex.g:10470:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceCrossReference_0_0()); 
            }
            // InternalReflex.g:10471:3: ( RULE_ID )
            // InternalReflex.g:10472:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__ReferenceAssignment_0"


    // $ANTLR start "rule__PrimaryExpression__IntegerAssignment_1_1"
    // InternalReflex.g:10483:1: rule__PrimaryExpression__IntegerAssignment_1_1 : ( RULE_INTEGER ) ;
    public final void rule__PrimaryExpression__IntegerAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10487:1: ( ( RULE_INTEGER ) )
            // InternalReflex.g:10488:2: ( RULE_INTEGER )
            {
            // InternalReflex.g:10488:2: ( RULE_INTEGER )
            // InternalReflex.g:10489:3: RULE_INTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getIntegerINTEGERTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getIntegerINTEGERTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__IntegerAssignment_1_1"


    // $ANTLR start "rule__PrimaryExpression__FloatingAssignment_2_1"
    // InternalReflex.g:10498:1: rule__PrimaryExpression__FloatingAssignment_2_1 : ( RULE_FLOAT ) ;
    public final void rule__PrimaryExpression__FloatingAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10502:1: ( ( RULE_FLOAT ) )
            // InternalReflex.g:10503:2: ( RULE_FLOAT )
            {
            // InternalReflex.g:10503:2: ( RULE_FLOAT )
            // InternalReflex.g:10504:3: RULE_FLOAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getFloatingFLOATTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getFloatingFLOATTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__FloatingAssignment_2_1"


    // $ANTLR start "rule__PrimaryExpression__BoolAssignment_3_1"
    // InternalReflex.g:10513:1: rule__PrimaryExpression__BoolAssignment_3_1 : ( RULE_BOOL_LITERAL ) ;
    public final void rule__PrimaryExpression__BoolAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10517:1: ( ( RULE_BOOL_LITERAL ) )
            // InternalReflex.g:10518:2: ( RULE_BOOL_LITERAL )
            {
            // InternalReflex.g:10518:2: ( RULE_BOOL_LITERAL )
            // InternalReflex.g:10519:3: RULE_BOOL_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getBoolBOOL_LITERALTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_BOOL_LITERAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getBoolBOOL_LITERALTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__BoolAssignment_3_1"


    // $ANTLR start "rule__PrimaryExpression__TimeAssignment_4_1"
    // InternalReflex.g:10528:1: rule__PrimaryExpression__TimeAssignment_4_1 : ( RULE_TIME ) ;
    public final void rule__PrimaryExpression__TimeAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10532:1: ( ( RULE_TIME ) )
            // InternalReflex.g:10533:2: ( RULE_TIME )
            {
            // InternalReflex.g:10533:2: ( RULE_TIME )
            // InternalReflex.g:10534:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getTimeTIMETerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getTimeTIMETerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__TimeAssignment_4_1"


    // $ANTLR start "rule__PrimaryExpression__NestedExprAssignment_5_1"
    // InternalReflex.g:10543:1: rule__PrimaryExpression__NestedExprAssignment_5_1 : ( ruleExpression ) ;
    public final void rule__PrimaryExpression__NestedExprAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10547:1: ( ( ruleExpression ) )
            // InternalReflex.g:10548:2: ( ruleExpression )
            {
            // InternalReflex.g:10548:2: ( ruleExpression )
            // InternalReflex.g:10549:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getNestedExprExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getNestedExprExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__NestedExprAssignment_5_1"


    // $ANTLR start "rule__UnaryExpression__UnaryOpAssignment_4_0"
    // InternalReflex.g:10558:1: rule__UnaryExpression__UnaryOpAssignment_4_0 : ( ruleUnaryOp ) ;
    public final void rule__UnaryExpression__UnaryOpAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10562:1: ( ( ruleUnaryOp ) )
            // InternalReflex.g:10563:2: ( ruleUnaryOp )
            {
            // InternalReflex.g:10563:2: ( ruleUnaryOp )
            // InternalReflex.g:10564:3: ruleUnaryOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryOpUnaryOpEnumRuleCall_4_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryOpUnaryOpEnumRuleCall_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__UnaryOpAssignment_4_0"


    // $ANTLR start "rule__UnaryExpression__RightAssignment_4_1"
    // InternalReflex.g:10573:1: rule__UnaryExpression__RightAssignment_4_1 : ( ruleCastExpression ) ;
    public final void rule__UnaryExpression__RightAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10577:1: ( ( ruleCastExpression ) )
            // InternalReflex.g:10578:2: ( ruleCastExpression )
            {
            // InternalReflex.g:10578:2: ( ruleCastExpression )
            // InternalReflex.g:10579:3: ruleCastExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getRightCastExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCastExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getRightCastExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__RightAssignment_4_1"


    // $ANTLR start "rule__CastExpression__TypeAssignment_1_1"
    // InternalReflex.g:10588:1: rule__CastExpression__TypeAssignment_1_1 : ( ruleType ) ;
    public final void rule__CastExpression__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10592:1: ( ( ruleType ) )
            // InternalReflex.g:10593:2: ( ruleType )
            {
            // InternalReflex.g:10593:2: ( ruleType )
            // InternalReflex.g:10594:3: ruleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getTypeTypeEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getTypeTypeEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__TypeAssignment_1_1"


    // $ANTLR start "rule__CastExpression__RightAssignment_1_3"
    // InternalReflex.g:10603:1: rule__CastExpression__RightAssignment_1_3 : ( ruleCastExpression ) ;
    public final void rule__CastExpression__RightAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10607:1: ( ( ruleCastExpression ) )
            // InternalReflex.g:10608:2: ( ruleCastExpression )
            {
            // InternalReflex.g:10608:2: ( ruleCastExpression )
            // InternalReflex.g:10609:3: ruleCastExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCastExpressionAccess().getRightCastExpressionParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCastExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCastExpressionAccess().getRightCastExpressionParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CastExpression__RightAssignment_1_3"


    // $ANTLR start "rule__MultiplicativeExpression__MulOpAssignment_1_1"
    // InternalReflex.g:10618:1: rule__MultiplicativeExpression__MulOpAssignment_1_1 : ( ruleMultiplicativeOp ) ;
    public final void rule__MultiplicativeExpression__MulOpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10622:1: ( ( ruleMultiplicativeOp ) )
            // InternalReflex.g:10623:2: ( ruleMultiplicativeOp )
            {
            // InternalReflex.g:10623:2: ( ruleMultiplicativeOp )
            // InternalReflex.g:10624:3: ruleMultiplicativeOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMulOpMultiplicativeOpEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiplicativeOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMulOpMultiplicativeOpEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__MulOpAssignment_1_1"


    // $ANTLR start "rule__MultiplicativeExpression__RightAssignment_1_2"
    // InternalReflex.g:10633:1: rule__MultiplicativeExpression__RightAssignment_1_2 : ( ruleCastExpression ) ;
    public final void rule__MultiplicativeExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10637:1: ( ( ruleCastExpression ) )
            // InternalReflex.g:10638:2: ( ruleCastExpression )
            {
            // InternalReflex.g:10638:2: ( ruleCastExpression )
            // InternalReflex.g:10639:3: ruleCastExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCastExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__RightAssignment_1_2"


    // $ANTLR start "rule__AdditiveExpression__AddOpAssignment_1_1"
    // InternalReflex.g:10648:1: rule__AdditiveExpression__AddOpAssignment_1_1 : ( ruleAdditiveOp ) ;
    public final void rule__AdditiveExpression__AddOpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10652:1: ( ( ruleAdditiveOp ) )
            // InternalReflex.g:10653:2: ( ruleAdditiveOp )
            {
            // InternalReflex.g:10653:2: ( ruleAdditiveOp )
            // InternalReflex.g:10654:3: ruleAdditiveOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAddOpAdditiveOpEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditiveOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAddOpAdditiveOpEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__AddOpAssignment_1_1"


    // $ANTLR start "rule__AdditiveExpression__RightAssignment_1_2"
    // InternalReflex.g:10663:1: rule__AdditiveExpression__RightAssignment_1_2 : ( ruleAdditiveExpression ) ;
    public final void rule__AdditiveExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10667:1: ( ( ruleAdditiveExpression ) )
            // InternalReflex.g:10668:2: ( ruleAdditiveExpression )
            {
            // InternalReflex.g:10668:2: ( ruleAdditiveExpression )
            // InternalReflex.g:10669:3: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__RightAssignment_1_2"


    // $ANTLR start "rule__ShiftExpression__ShiftOpAssignment_1_1"
    // InternalReflex.g:10678:1: rule__ShiftExpression__ShiftOpAssignment_1_1 : ( ruleShiftOp ) ;
    public final void rule__ShiftExpression__ShiftOpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10682:1: ( ( ruleShiftOp ) )
            // InternalReflex.g:10683:2: ( ruleShiftOp )
            {
            // InternalReflex.g:10683:2: ( ruleShiftOp )
            // InternalReflex.g:10684:3: ruleShiftOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getShiftOpShiftOpEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShiftOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getShiftOpShiftOpEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__ShiftOpAssignment_1_1"


    // $ANTLR start "rule__ShiftExpression__RightAssignment_1_2"
    // InternalReflex.g:10693:1: rule__ShiftExpression__RightAssignment_1_2 : ( ruleShiftExpression ) ;
    public final void rule__ShiftExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10697:1: ( ( ruleShiftExpression ) )
            // InternalReflex.g:10698:2: ( ruleShiftExpression )
            {
            // InternalReflex.g:10698:2: ( ruleShiftExpression )
            // InternalReflex.g:10699:3: ruleShiftExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShiftExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpression__RightAssignment_1_2"


    // $ANTLR start "rule__CompareExpression__CmpOpAssignment_1_1_1"
    // InternalReflex.g:10708:1: rule__CompareExpression__CmpOpAssignment_1_1_1 : ( ruleCompareOp ) ;
    public final void rule__CompareExpression__CmpOpAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10712:1: ( ( ruleCompareOp ) )
            // InternalReflex.g:10713:2: ( ruleCompareOp )
            {
            // InternalReflex.g:10713:2: ( ruleCompareOp )
            // InternalReflex.g:10714:3: ruleCompareOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getCmpOpCompareOpEnumRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getCmpOpCompareOpEnumRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__CmpOpAssignment_1_1_1"


    // $ANTLR start "rule__CompareExpression__RightAssignment_1_1_2"
    // InternalReflex.g:10723:1: rule__CompareExpression__RightAssignment_1_1_2 : ( ruleCompareExpression ) ;
    public final void rule__CompareExpression__RightAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10727:1: ( ( ruleCompareExpression ) )
            // InternalReflex.g:10728:2: ( ruleCompareExpression )
            {
            // InternalReflex.g:10728:2: ( ruleCompareExpression )
            // InternalReflex.g:10729:3: ruleCompareExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareExpression__RightAssignment_1_1_2"


    // $ANTLR start "rule__EqualityExpression__EqCmpOpAssignment_1_1"
    // InternalReflex.g:10738:1: rule__EqualityExpression__EqCmpOpAssignment_1_1 : ( ruleCompareEqOp ) ;
    public final void rule__EqualityExpression__EqCmpOpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10742:1: ( ( ruleCompareEqOp ) )
            // InternalReflex.g:10743:2: ( ruleCompareEqOp )
            {
            // InternalReflex.g:10743:2: ( ruleCompareEqOp )
            // InternalReflex.g:10744:3: ruleCompareEqOp
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqCmpOpCompareEqOpEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareEqOp();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqCmpOpCompareEqOpEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__EqCmpOpAssignment_1_1"


    // $ANTLR start "rule__EqualityExpression__RightAssignment_1_2"
    // InternalReflex.g:10753:1: rule__EqualityExpression__RightAssignment_1_2 : ( ruleEqualityExpression ) ;
    public final void rule__EqualityExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10757:1: ( ( ruleEqualityExpression ) )
            // InternalReflex.g:10758:2: ( ruleEqualityExpression )
            {
            // InternalReflex.g:10758:2: ( ruleEqualityExpression )
            // InternalReflex.g:10759:3: ruleEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__RightAssignment_1_2"


    // $ANTLR start "rule__BitAndExpression__RightAssignment_1_2"
    // InternalReflex.g:10768:1: rule__BitAndExpression__RightAssignment_1_2 : ( ruleBitAndExpression ) ;
    public final void rule__BitAndExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10772:1: ( ( ruleBitAndExpression ) )
            // InternalReflex.g:10773:2: ( ruleBitAndExpression )
            {
            // InternalReflex.g:10773:2: ( ruleBitAndExpression )
            // InternalReflex.g:10774:3: ruleBitAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitAndExpressionAccess().getRightBitAndExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitAndExpressionAccess().getRightBitAndExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitAndExpression__RightAssignment_1_2"


    // $ANTLR start "rule__BitXorExpression__RightAssignment_1_2"
    // InternalReflex.g:10783:1: rule__BitXorExpression__RightAssignment_1_2 : ( ruleBitXorExpression ) ;
    public final void rule__BitXorExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10787:1: ( ( ruleBitXorExpression ) )
            // InternalReflex.g:10788:2: ( ruleBitXorExpression )
            {
            // InternalReflex.g:10788:2: ( ruleBitXorExpression )
            // InternalReflex.g:10789:3: ruleBitXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitXorExpressionAccess().getRightBitXorExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitXorExpressionAccess().getRightBitXorExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitXorExpression__RightAssignment_1_2"


    // $ANTLR start "rule__BitOrExpression__RightAssignment_1_2"
    // InternalReflex.g:10798:1: rule__BitOrExpression__RightAssignment_1_2 : ( ruleBitOrExpression ) ;
    public final void rule__BitOrExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10802:1: ( ( ruleBitOrExpression ) )
            // InternalReflex.g:10803:2: ( ruleBitOrExpression )
            {
            // InternalReflex.g:10803:2: ( ruleBitOrExpression )
            // InternalReflex.g:10804:3: ruleBitOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitOrExpressionAccess().getRightBitOrExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBitOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitOrExpressionAccess().getRightBitOrExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitOrExpression__RightAssignment_1_2"


    // $ANTLR start "rule__LogicalAndExpression__RightAssignment_1_2"
    // InternalReflex.g:10813:1: rule__LogicalAndExpression__RightAssignment_1_2 : ( ruleLogicalAndExpression ) ;
    public final void rule__LogicalAndExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10817:1: ( ( ruleLogicalAndExpression ) )
            // InternalReflex.g:10818:2: ( ruleLogicalAndExpression )
            {
            // InternalReflex.g:10818:2: ( ruleLogicalAndExpression )
            // InternalReflex.g:10819:3: ruleLogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__RightAssignment_1_2"


    // $ANTLR start "rule__LogicalOrExpression__RightAssignment_1_2"
    // InternalReflex.g:10828:1: rule__LogicalOrExpression__RightAssignment_1_2 : ( ruleLogicalOrExpression ) ;
    public final void rule__LogicalOrExpression__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10832:1: ( ( ruleLogicalOrExpression ) )
            // InternalReflex.g:10833:2: ( ruleLogicalOrExpression )
            {
            // InternalReflex.g:10833:2: ( ruleLogicalOrExpression )
            // InternalReflex.g:10834:3: ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalOrExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalOrExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__RightAssignment_1_2"


    // $ANTLR start "rule__AssignmentExpression__AssignVarAssignment_0_0"
    // InternalReflex.g:10843:1: rule__AssignmentExpression__AssignVarAssignment_0_0 : ( ( RULE_ID ) ) ;
    public final void rule__AssignmentExpression__AssignVarAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10847:1: ( ( ( RULE_ID ) ) )
            // InternalReflex.g:10848:2: ( ( RULE_ID ) )
            {
            // InternalReflex.g:10848:2: ( ( RULE_ID ) )
            // InternalReflex.g:10849:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceCrossReference_0_0_0()); 
            }
            // InternalReflex.g:10850:3: ( RULE_ID )
            // InternalReflex.g:10851:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceIDTerminalRuleCall_0_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceIDTerminalRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__AssignVarAssignment_0_0"


    // $ANTLR start "rule__AssignmentExpression__AssignOpAssignment_0_1"
    // InternalReflex.g:10862:1: rule__AssignmentExpression__AssignOpAssignment_0_1 : ( ruleAssignOperator ) ;
    public final void rule__AssignmentExpression__AssignOpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10866:1: ( ( ruleAssignOperator ) )
            // InternalReflex.g:10867:2: ( ruleAssignOperator )
            {
            // InternalReflex.g:10867:2: ( ruleAssignOperator )
            // InternalReflex.g:10868:3: ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignOperatorEnumRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignOperatorEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__AssignOpAssignment_0_1"


    // $ANTLR start "rule__AssignmentExpression__ExprAssignment_1"
    // InternalReflex.g:10877:1: rule__AssignmentExpression__ExprAssignment_1 : ( ruleLogicalOrExpression ) ;
    public final void rule__AssignmentExpression__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalReflex.g:10881:1: ( ( ruleLogicalOrExpression ) )
            // InternalReflex.g:10882:2: ( ruleLogicalOrExpression )
            {
            // InternalReflex.g:10882:2: ( ruleLogicalOrExpression )
            // InternalReflex.g:10883:3: ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getExprLogicalOrExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getExprLogicalOrExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__ExprAssignment_1"

    // $ANTLR start synpred90_InternalReflex
    public final void synpred90_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:5534:3: ( rule__IfElseStat__Group_5__0 )
        // InternalReflex.g:5534:3: rule__IfElseStat__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__IfElseStat__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_InternalReflex

    // $ANTLR start synpred97_InternalReflex
    public final void synpred97_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:7937:3: ( rule__AdditiveExpression__Group_1__0 )
        // InternalReflex.g:7937:3: rule__AdditiveExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AdditiveExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalReflex

    // $ANTLR start synpred98_InternalReflex
    public final void synpred98_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8072:3: ( rule__ShiftExpression__Group_1__0 )
        // InternalReflex.g:8072:3: rule__ShiftExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ShiftExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalReflex

    // $ANTLR start synpred99_InternalReflex
    public final void synpred99_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8207:3: ( rule__CompareExpression__Group_1_1__0 )
        // InternalReflex.g:8207:3: rule__CompareExpression__Group_1_1__0
        {
        pushFollow(FOLLOW_2);
        rule__CompareExpression__Group_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalReflex

    // $ANTLR start synpred100_InternalReflex
    public final void synpred100_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8342:3: ( rule__EqualityExpression__Group_1__0 )
        // InternalReflex.g:8342:3: rule__EqualityExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__EqualityExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalReflex

    // $ANTLR start synpred101_InternalReflex
    public final void synpred101_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8477:3: ( rule__BitAndExpression__Group_1__0 )
        // InternalReflex.g:8477:3: rule__BitAndExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__BitAndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalReflex

    // $ANTLR start synpred102_InternalReflex
    public final void synpred102_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8612:3: ( rule__BitXorExpression__Group_1__0 )
        // InternalReflex.g:8612:3: rule__BitXorExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__BitXorExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_InternalReflex

    // $ANTLR start synpred103_InternalReflex
    public final void synpred103_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8747:3: ( rule__BitOrExpression__Group_1__0 )
        // InternalReflex.g:8747:3: rule__BitOrExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__BitOrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalReflex

    // $ANTLR start synpred104_InternalReflex
    public final void synpred104_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:8882:3: ( rule__LogicalAndExpression__Group_1__0 )
        // InternalReflex.g:8882:3: rule__LogicalAndExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__LogicalAndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_InternalReflex

    // $ANTLR start synpred105_InternalReflex
    public final void synpred105_InternalReflex_fragment() throws RecognitionException {   
        // InternalReflex.g:9017:3: ( rule__LogicalOrExpression__Group_1__0 )
        // InternalReflex.g:9017:3: rule__LogicalOrExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__LogicalOrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalReflex

    // Delegated rules

    public final boolean synpred105_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalReflex() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalReflex_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA6 dfa6 = new DFA6(this);
    static final String dfa_1s = "\25\uffff";
    static final String dfa_2s = "\1\47\2\uffff\15\4\2\uffff\1\57\2\uffff";
    static final String dfa_3s = "\1\147\2\uffff\15\4\2\uffff\1\144\2\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\15\uffff\1\5\1\6\1\uffff\1\4\1\3";
    static final String dfa_5s = "\25\uffff}>";
    static final String[] dfa_6s = {
            "\2\20\37\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff\1\21\3\uffff\1\21\11\uffff\1\1\1\2",
            "",
            "",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "\1\22",
            "",
            "",
            "\1\23\53\uffff\1\23\10\uffff\1\24",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1496:1: rule__Program__Alternatives_5 : ( ( ( rule__Program__ConstsAssignment_5_0 ) ) | ( ( rule__Program__EnumsAssignment_5_1 ) ) | ( ( rule__Program__FunctionsAssignment_5_2 ) ) | ( ( rule__Program__GlobalVarsAssignment_5_3 ) ) | ( ( rule__Program__PortsAssignment_5_4 ) ) | ( ( rule__Program__ProcessesAssignment_5_5 ) ) );";
        }
    }
    static final String dfa_7s = "\21\uffff";
    static final String dfa_8s = "\16\uffff\1\20\2\uffff";
    static final String dfa_9s = "\1\110\15\4\1\57\2\uffff";
    static final String dfa_10s = "\1\124\15\4\1\140\2\uffff";
    static final String dfa_11s = "\17\uffff\1\1\1\2";
    static final String dfa_12s = "\21\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\17\53\uffff\1\20\4\uffff\1\20",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1604:1: rule__ProcessVariable__Alternatives_0 : ( ( rulePhysicalVariable ) | ( ruleProgramVariable ) );";
        }
    }
    static final String dfa_14s = "\1\124\15\4\1\133\2\uffff";
    static final String[] dfa_15s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\16",
            "\1\17\53\uffff\1\20",
            "",
            ""
    };
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final short[][] dfa_15 = unpackEncodedStringArray(dfa_15s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_9;
            this.max = dfa_14;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "1625:1: rule__GlobalVariable__Alternatives_0 : ( ( rulePhysicalVariable ) | ( ruleProgramVariable ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000018000000000L,0x000000C0159FFF00L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000018000000002L,0x000000C0111FFF00L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000018000000000L,0x000000C0111FFF00L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x00000001219FFF00L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000002L,0x00000001001FFF00L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000002L,0x0000000021000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000021000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0008000000400000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x1E00780000007410L,0x0002E51018400000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000800800000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000400L,0x0000000002000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000001410L,0x0000001000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000001410L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x00000000001FFF00L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000002400000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000400800000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x1E00780000007412L,0x0002E51018400000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x1E00780000007410L,0x0002E51018C00000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000080000800000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000018000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000600000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x1E00780000007410L,0x0002E53018400000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x00001E0000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x00000000000000E0L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0600000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0600000000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000018L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0xE000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0xE000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000006L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000202L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x01FF800000000000L});

}