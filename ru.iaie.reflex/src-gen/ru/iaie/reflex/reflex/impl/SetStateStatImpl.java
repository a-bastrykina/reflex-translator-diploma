/**
 * generated by Xtext 2.20.0
 */
package ru.iaie.reflex.reflex.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import ru.iaie.reflex.reflex.ReflexPackage;
import ru.iaie.reflex.reflex.SetStateStat;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Set State Stat</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ru.iaie.reflex.reflex.impl.SetStateStatImpl#getStateId <em>State Id</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.impl.SetStateStatImpl#isNext <em>Next</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SetStateStatImpl extends MinimalEObjectImpl.Container implements SetStateStat
{
  /**
   * The default value of the '{@link #getStateId() <em>State Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateId()
   * @generated
   * @ordered
   */
  protected static final String STATE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStateId() <em>State Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateId()
   * @generated
   * @ordered
   */
  protected String stateId = STATE_ID_EDEFAULT;

  /**
   * The default value of the '{@link #isNext() <em>Next</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNext()
   * @generated
   * @ordered
   */
  protected static final boolean NEXT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNext() <em>Next</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNext()
   * @generated
   * @ordered
   */
  protected boolean next = NEXT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SetStateStatImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReflexPackage.Literals.SET_STATE_STAT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStateId()
  {
    return stateId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStateId(String newStateId)
  {
    String oldStateId = stateId;
    stateId = newStateId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.SET_STATE_STAT__STATE_ID, oldStateId, stateId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNext()
  {
    return next;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNext(boolean newNext)
  {
    boolean oldNext = next;
    next = newNext;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.SET_STATE_STAT__NEXT, oldNext, next));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReflexPackage.SET_STATE_STAT__STATE_ID:
        return getStateId();
      case ReflexPackage.SET_STATE_STAT__NEXT:
        return isNext();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReflexPackage.SET_STATE_STAT__STATE_ID:
        setStateId((String)newValue);
        return;
      case ReflexPackage.SET_STATE_STAT__NEXT:
        setNext((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReflexPackage.SET_STATE_STAT__STATE_ID:
        setStateId(STATE_ID_EDEFAULT);
        return;
      case ReflexPackage.SET_STATE_STAT__NEXT:
        setNext(NEXT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReflexPackage.SET_STATE_STAT__STATE_ID:
        return STATE_ID_EDEFAULT == null ? stateId != null : !STATE_ID_EDEFAULT.equals(stateId);
      case ReflexPackage.SET_STATE_STAT__NEXT:
        return next != NEXT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (stateId: ");
    result.append(stateId);
    result.append(", next: ");
    result.append(next);
    result.append(')');
    return result.toString();
  }

} //SetStateStatImpl
