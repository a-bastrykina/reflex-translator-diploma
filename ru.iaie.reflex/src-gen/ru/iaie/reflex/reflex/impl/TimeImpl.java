/**
 * generated by Xtext 2.20.0
 */
package ru.iaie.reflex.reflex.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import ru.iaie.reflex.reflex.ReflexPackage;
import ru.iaie.reflex.reflex.Time;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Time</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ru.iaie.reflex.reflex.impl.TimeImpl#isIsDay <em>Is Day</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.impl.TimeImpl#getDays <em>Days</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.impl.TimeImpl#isIsHour <em>Is Hour</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.impl.TimeImpl#getHours <em>Hours</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TimeImpl extends MinimalEObjectImpl.Container implements Time
{
  /**
   * The default value of the '{@link #isIsDay() <em>Is Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsDay()
   * @generated
   * @ordered
   */
  protected static final boolean IS_DAY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsDay() <em>Is Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsDay()
   * @generated
   * @ordered
   */
  protected boolean isDay = IS_DAY_EDEFAULT;

  /**
   * The default value of the '{@link #getDays() <em>Days</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDays()
   * @generated
   * @ordered
   */
  protected static final String DAYS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDays() <em>Days</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDays()
   * @generated
   * @ordered
   */
  protected String days = DAYS_EDEFAULT;

  /**
   * The default value of the '{@link #isIsHour() <em>Is Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsHour()
   * @generated
   * @ordered
   */
  protected static final boolean IS_HOUR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsHour() <em>Is Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsHour()
   * @generated
   * @ordered
   */
  protected boolean isHour = IS_HOUR_EDEFAULT;

  /**
   * The default value of the '{@link #getHours() <em>Hours</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHours()
   * @generated
   * @ordered
   */
  protected static final String HOURS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHours() <em>Hours</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHours()
   * @generated
   * @ordered
   */
  protected String hours = HOURS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TimeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReflexPackage.Literals.TIME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsDay()
  {
    return isDay;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsDay(boolean newIsDay)
  {
    boolean oldIsDay = isDay;
    isDay = newIsDay;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.TIME__IS_DAY, oldIsDay, isDay));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDays()
  {
    return days;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDays(String newDays)
  {
    String oldDays = days;
    days = newDays;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.TIME__DAYS, oldDays, days));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsHour()
  {
    return isHour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsHour(boolean newIsHour)
  {
    boolean oldIsHour = isHour;
    isHour = newIsHour;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.TIME__IS_HOUR, oldIsHour, isHour));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHours()
  {
    return hours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHours(String newHours)
  {
    String oldHours = hours;
    hours = newHours;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReflexPackage.TIME__HOURS, oldHours, hours));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReflexPackage.TIME__IS_DAY:
        return isIsDay();
      case ReflexPackage.TIME__DAYS:
        return getDays();
      case ReflexPackage.TIME__IS_HOUR:
        return isIsHour();
      case ReflexPackage.TIME__HOURS:
        return getHours();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReflexPackage.TIME__IS_DAY:
        setIsDay((Boolean)newValue);
        return;
      case ReflexPackage.TIME__DAYS:
        setDays((String)newValue);
        return;
      case ReflexPackage.TIME__IS_HOUR:
        setIsHour((Boolean)newValue);
        return;
      case ReflexPackage.TIME__HOURS:
        setHours((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReflexPackage.TIME__IS_DAY:
        setIsDay(IS_DAY_EDEFAULT);
        return;
      case ReflexPackage.TIME__DAYS:
        setDays(DAYS_EDEFAULT);
        return;
      case ReflexPackage.TIME__IS_HOUR:
        setIsHour(IS_HOUR_EDEFAULT);
        return;
      case ReflexPackage.TIME__HOURS:
        setHours(HOURS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReflexPackage.TIME__IS_DAY:
        return isDay != IS_DAY_EDEFAULT;
      case ReflexPackage.TIME__DAYS:
        return DAYS_EDEFAULT == null ? days != null : !DAYS_EDEFAULT.equals(days);
      case ReflexPackage.TIME__IS_HOUR:
        return isHour != IS_HOUR_EDEFAULT;
      case ReflexPackage.TIME__HOURS:
        return HOURS_EDEFAULT == null ? hours != null : !HOURS_EDEFAULT.equals(hours);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (isDay: ");
    result.append(isDay);
    result.append(", days: ");
    result.append(days);
    result.append(", isHour: ");
    result.append(isHour);
    result.append(", hours: ");
    result.append(hours);
    result.append(')');
    return result.toString();
  }

} //TimeImpl
