/**
 * generated by Xtext 2.20.0
 */
package ru.iaie.reflex.reflex;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Check State Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ru.iaie.reflex.reflex.CheckStateExpression#getProcess <em>Process</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.CheckStateExpression#getState <em>State</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.CheckStateExpression#isActive <em>Active</em>}</li>
 *   <li>{@link ru.iaie.reflex.reflex.CheckStateExpression#isPassive <em>Passive</em>}</li>
 * </ul>
 *
 * @see ru.iaie.reflex.reflex.ReflexPackage#getCheckStateExpression()
 * @model
 * @generated
 */
public interface CheckStateExpression extends CompareExpression
{
  /**
   * Returns the value of the '<em><b>Process</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Process</em>' reference.
   * @see #setProcess(ru.iaie.reflex.reflex.Process)
   * @see ru.iaie.reflex.reflex.ReflexPackage#getCheckStateExpression_Process()
   * @model
   * @generated
   */
  ru.iaie.reflex.reflex.Process getProcess();

  /**
   * Sets the value of the '{@link ru.iaie.reflex.reflex.CheckStateExpression#getProcess <em>Process</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Process</em>' reference.
   * @see #getProcess()
   * @generated
   */
  void setProcess(ru.iaie.reflex.reflex.Process value);

  /**
   * Returns the value of the '<em><b>State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>State</em>' reference.
   * @see #setState(State)
   * @see ru.iaie.reflex.reflex.ReflexPackage#getCheckStateExpression_State()
   * @model
   * @generated
   */
  State getState();

  /**
   * Sets the value of the '{@link ru.iaie.reflex.reflex.CheckStateExpression#getState <em>State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>State</em>' reference.
   * @see #getState()
   * @generated
   */
  void setState(State value);

  /**
   * Returns the value of the '<em><b>Active</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Active</em>' attribute.
   * @see #setActive(boolean)
   * @see ru.iaie.reflex.reflex.ReflexPackage#getCheckStateExpression_Active()
   * @model
   * @generated
   */
  boolean isActive();

  /**
   * Sets the value of the '{@link ru.iaie.reflex.reflex.CheckStateExpression#isActive <em>Active</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Active</em>' attribute.
   * @see #isActive()
   * @generated
   */
  void setActive(boolean value);

  /**
   * Returns the value of the '<em><b>Passive</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Passive</em>' attribute.
   * @see #setPassive(boolean)
   * @see ru.iaie.reflex.reflex.ReflexPackage#getCheckStateExpression_Passive()
   * @model
   * @generated
   */
  boolean isPassive();

  /**
   * Sets the value of the '{@link ru.iaie.reflex.reflex.CheckStateExpression#isPassive <em>Passive</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Passive</em>' attribute.
   * @see #isPassive()
   * @generated
   */
  void setPassive(boolean value);

} // CheckStateExpression
