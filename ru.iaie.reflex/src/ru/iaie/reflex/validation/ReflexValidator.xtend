/*
 * generated by Xtext 2.20.0
 */
package ru.iaie.reflex.validation

import org.eclipse.xtext.validation.Check
import ru.iaie.reflex.reflex.ReflexPackage
import ru.iaie.reflex.reflex.SetStateStat
import ru.iaie.reflex.reflex.Process
import ru.iaie.reflex.reflex.State

import static extension ru.iaie.reflex.utils.ReflexModelUtil.*
import static extension org.eclipse.xtext.EcoreUtil2.*

/** 
 * This class contains custom validation rules. 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class ReflexValidator extends AbstractReflexValidator {
	
	@Check def void checkNextState(SetStateStat setStateStat) {
		if (setStateStat.isNext()) {
			val state = setStateStat.getContainerOfType(ru.iaie.reflex.reflex.State)
			val process = setStateStat.getContainerOfType(Process)
			val callingStateIndex = process.states.indexOf(state)
			if (callingStateIndex + 1 >= process.states.length) {
				error("Invalid state transition: no next state in the process", ReflexPackage.eINSTANCE.setStateStat_Next)
			}  
		}
	}
}
